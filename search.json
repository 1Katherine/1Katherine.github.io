[{"title":"1. NC78 反转链表","url":"/2022/06/22/1-NC78-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/","content":"<blockquote>\n<p>题目链接：<a href=\"https://www.nowcoder.com/practice/75e878df47f24fdc9dc3e400ec6058ca?tpId=117&amp;tqId=37777&amp;rp=1&amp;ru=/exam/oj&amp;qru=/exam/oj&amp;sourceUrl=/exam/oj?page=1&tab=%25E7%25AE%2597%25E6%25B3%2595%25E7%25AF%2587&topicId=117&amp;difficulty=undefined&amp;judgeStatus=undefined&amp;tags=&amp;title=\">https://www.nowcoder.com/practice/75e878df47f24fdc9dc3e400ec6058ca?tpId=117&amp;tqId=37777&amp;rp=1&amp;ru=/exam/oj&amp;qru=/exam/oj&amp;sourceUrl=%2Fexam%2Foj%3Fpage%3D1%26tab%3D%25E7%25AE%2597%25E6%25B3%2595%25E7%25AF%2587%26topicId%3D117&amp;difficulty=undefined&amp;judgeStatus=undefined&amp;tags=&amp;title=</a></p>\n</blockquote>\n<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>给定一个单链表的头结点pHead(该头节点是有值的，比如在下图，它的val是1)，长度为n，反转该链表后，返回新链表的表头。</p>\n<p>数据范围： 0≤<em>n</em>≤1000</p>\n<p>要求：空间复杂度<em>O</em>(1) ，时间复杂度<em>O</em>(<em>n</em>) 。</p>\n<p>如当输入链表{1,2,3}时，</p>\n<p>经反转后，原链表变为{3,2,1}，所以对应的输出为{3,2,1}。</p>\n<p>以上转换过程如下图所示：</p>\n<img src=\"/2022/06/22/1-NC78-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/image-20220622112112689.png\" class=\"\" title=\"image-20220622112112689\">\n\n<h2 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h2><p>输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;1,2,3&#125;</span><br></pre></td></tr></table></figure>\n\n<p>返回值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;3,2,1&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h2><p>输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>返回值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">空链表则输出空                  </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">public class ListNode &#123;</span></span><br><span class=\"line\"><span class=\"comment\">    int val;</span></span><br><span class=\"line\"><span class=\"comment\">    ListNode next = null;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    ListNode(int val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> ListNode <span class=\"title function_\">ReverseList</span><span class=\"params\">(ListNode head)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//         空链表</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">ListNode</span> <span class=\"variable\">p1</span> <span class=\"operator\">=</span> head.next; <span class=\"comment\">// 指向待反转链表的尾节点（2），head指向已反转的头节点（1），反转后 2-》1</span></span><br><span class=\"line\">        <span class=\"type\">ListNode</span> <span class=\"variable\">p2</span> <span class=\"operator\">=</span> head.next.next;  <span class=\"comment\">// 指向待反转链表的倒数第二节点 （3）用于链表不断连</span></span><br><span class=\"line\">        head.next = <span class=\"literal\">null</span>;  <span class=\"comment\">// 如果缺少这一步，会报错“超出时间限制” ，一定要将反转后的链表尾指针指向null</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p2 != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            p1.next = head; <span class=\"comment\">// 部分反转</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            head = p1;</span><br><span class=\"line\">            p1 = p2;</span><br><span class=\"line\">            p2 = p2.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">//        p2 == null ; 反转到最后</span></span><br><span class=\"line\">        p1.next = head;</span><br><span class=\"line\">        head = p1;</span><br><span class=\"line\">        </span><br><span class=\"line\">       <span class=\"keyword\">return</span> head; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析情况\"><a href=\"#分析情况\" class=\"headerlink\" title=\"分析情况\"></a>分析情况</h2><ol>\n<li>反转空链表 —- 返回head</li>\n<li>反转只有一个元素的链表 —- 返回head</li>\n<li>反转有两个以上元素的链表</li>\n</ol>\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><img src=\"/2022/06/22/1-NC78-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/image-20220622111630985.png\" class=\"\" title=\"image-20220622111630985\">","categories":["牛客刷题"],"tags":["简单"]},{"title":"2. BM2 链表内指定区间反转","url":"/2022/06/23/2-BM2-%E9%93%BE%E8%A1%A8%E5%86%85%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4%E5%8F%8D%E8%BD%AC/","content":"<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>将一个节点数为 size 链表 m 位置到 n 位置之间的区间反转，要求时间复杂度 O(n)<em>O</em>(<em>n</em>)，空间复杂度 O(1)<em>O</em>(1)。<br>例如：<br>给出的链表为 1→2→3→4→5→<em>N<strong>U</strong>LL</em>, m&#x3D;2,n&#x3D;4<br>返回1→4→3→2→5→<em>N<strong>U</strong>LL</em>.</p>\n<p>数据范围： 链表长度0&lt;<em>s<strong>i</strong>ze</em>≤1000，0&lt;<em>m</em>≤<em>n</em>≤<em>s<strong>i</strong>ze</em>，链表中每个节点的值满足∣<em>v<strong>a</strong>l</em>∣≤1000</p>\n<p>要求：时间复杂度 O(n)，空间复杂度 O(n)</p>\n<p>进阶：时间复杂度 O(n)，空间复杂度 O(1)</p>\n<h2 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h2><p>输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;1,2,3,4,5&#125;,2,4</span><br></pre></td></tr></table></figure>\n\n<p>返回值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;1,4,3,2,5&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h2><p>输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;5&#125;,1,1</span><br></pre></td></tr></table></figure>\n\n<p>返回值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;5&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h2><ol>\n<li><p>如果m &#x3D;&#x3D; n：返回原链表头节点</p>\n</li>\n<li><p>如果 m ！&#x3D; n: </p>\n<ol>\n<li><p>比如1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6 反转后 1-&gt;5-&gt;4-&gt;3-&gt;2-&gt;6 </p>\n</li>\n<li><p>先反转部分链表 2-&gt;3-&gt;4-&gt;5 变成 5-&gt;4-&gt;3-&gt;2 </p>\n<ol>\n<li>pre&#x2F;cur&#x2F;post记录待反转节点 pre&#x3D;2，cur&#x3D;3，post&#x3D;4</li>\n<li>反转 cur.next&#x3D;pre;pre&#x3D;cur;cur&#x3D;post;post&#x3D;post.next;</li>\n<li>如果pre&#x3D;5代表部分反转完成</li>\n</ol>\n</li>\n<li><p>再收尾连接</p>\n<ol>\n<li>phead 记录 需要连接到反转链表头部的指针 p1 指向 1</li>\n<li>ptail 记录 需要连接到反转链表尾部的指针  p2 指向 6</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n","categories":["牛客刷题"],"tags":["中等"]},{"title":"1 面试题：cookie、session、tokenz的作用和区别","url":"/2022/06/27/1-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Acookie%E3%80%81session%E3%80%81tokenz%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/","content":"<p>下面这位博主的视频讲解通俗易懂，本文内容也是在该视频的基础上进行梳理，可供参考：</p>\n<p>Cookie、Session、Token究竟区别在哪？如何进行身份认证，保持用户登录状态？</p>\n<p><a href=\"https://www.bilibili.com/video/BV1ob4y1Y7Ep?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=bb5470bf26d0ba6f7869d61cafcf5a24\">https://www.bilibili.com/video/BV1ob4y1Y7Ep?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=bb5470bf26d0ba6f7869d61cafcf5a24</a></p>\n<p>以bilibili登录为例</p>\n<p>进入登录界面，输入用户名和密码后，很长一段时间都不用再重新到登陆页面输入账号密码。这种保存登录状态的方式是如何实现的呢？</p>\n<p>众所周知，http是无状态的，即这次访问服务器，关闭网页后，再次访问服务器，服务器是没有意识到又是你来访问的。</p>\n<p>cookie可以实现每次请求自动带数据传递给浏览器。即下次登录无需再输入用户名和密码，而是通过将cookie放入请求头，自动在请求时由cookie携带用户信息，实现保存登录状态。</p>\n<h3 id=\"cookie的流程\"><a href=\"#cookie的流程\" class=\"headerlink\" title=\"cookie的流程\"></a>cookie的流程</h3><img src=\"/2022/06/27/1-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Acookie%E3%80%81session%E3%80%81tokenz%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/image-20220627103513030.png\" class=\"\" title=\"image-20220627103513030\">\n\n<p>简要来说，cookie是保存在浏览器的数据，它存储了用户名和密码，以实现记录登录状态。同时cookie具有有效时常，超过时长后清除原来的cookie，下次登录时需要重新输入用户名密码，新建cookie保存信息，以记录登录状态。</p>\n<p>cookie的核心：每个请求都会携带cookie发送给服务器。（cookie放在请求头)</p>\n<h4 id=\"浏览器中可以查看cookie\"><a href=\"#浏览器中可以查看cookie\" class=\"headerlink\" title=\"浏览器中可以查看cookie\"></a>浏览器中可以查看cookie</h4><img src=\"/2022/06/27/1-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Acookie%E3%80%81session%E3%80%81tokenz%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/image-20220627103920584.png\" class=\"\" title=\"image-20220627103920584\">\n\n<p>缺陷：由于cookie直接把用户信息存储在浏览器，只要电脑被黑，用户信息就会泄露，因此出现session技术。</p>\n<h3 id=\"Session会话-基于cookie的session\"><a href=\"#Session会话-基于cookie的session\" class=\"headerlink\" title=\"Session会话(基于cookie的session)\"></a>Session会话(基于cookie的session)</h3><p>相当于把原来cookie浏览器端保存的用户名和密码换成服务器端数据库中的sessionId（由服务器产生的没有规律的字符串）。即cookie中不保存用户名密码，而是sessionId和会话结束事件Max-age。</p>\n<img src=\"/2022/06/27/1-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Acookie%E3%80%81session%E3%80%81tokenz%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/image-20220627104827309.png\" class=\"\" title=\"image-20220627104827309\">\n\n<p>缺陷：由于用户群体迅速扩张，在特定时间有大量用户访问服务器的时候，服务器需要保存的sessionId数量迅速增长，会造成服务器超载</p>\n<p>JWT（Json Web Token）</p>\n<p>服务器生成JWT，存储对JWT签名的密文，不存储JWT。JWT传递给浏览器存储（cookie或storage的形式存储）</p>\n<img src=\"/2022/06/27/1-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Acookie%E3%80%81session%E3%80%81tokenz%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/image-20220627105421281.png\" class=\"\" title=\"image-20220627105421281\">\n\n<h4 id=\"JWT的组成\"><a href=\"#JWT的组成\" class=\"headerlink\" title=\"JWT的组成\"></a>JWT的组成</h4><img src=\"/2022/06/27/1-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Acookie%E3%80%81session%E3%80%81tokenz%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/image-20220627105536380.png\" class=\"\" title=\"image-20220627105536380\">\n\n<p>header：声明用什么算法来生成签名</p>\n<p>payload：存储有效期等数据</p>\n<p>signature：签名的信息</p>\n<img src=\"/2022/06/27/1-%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Acookie%E3%80%81session%E3%80%81tokenz%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/image-20220627105711878.png\" class=\"\" title=\"image-20220627105711878\">\n","categories":["前端面试题"],"tags":["cookie"]},{"title":"JavaScript基础与进阶知识：变量提升、函数、箭头函数、this指向、解构赋值","url":"/2022/07/31/JavaScript%E5%9F%BA%E7%A1%80%E4%B8%8E%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86/","content":"<h2 id=\"JS进阶\"><a href=\"#JS进阶\" class=\"headerlink\" title=\"JS进阶\"></a>JS进阶</h2><h3 id=\"变量提升\"><a href=\"#变量提升\" class=\"headerlink\" title=\"变量提升\"></a>变量提升</h3><p>[它允许在变量声明之前即被访问]</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 访问变量 str</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str + <span class=\"string\">&#x27;world!&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 声明变量 str</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello &#x27;</span>;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span>和<span class=\"keyword\">var</span>都有提升，但是<span class=\"keyword\">let</span>定义的变量没有赋值之前是不可以使用、<span class=\"keyword\">var</span>可以使用是<span class=\"literal\">undefined</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>变量在未声明即被访问时会报语法错误</li>\n<li>变量在声明之前即被访问，变量的值为 <code>undefined</code></li>\n<li><code>let</code> 声明的变量不存在变量提升，推荐使用 <code>let</code>【也有人认为具有提升但是不赋值不能使用】</li>\n<li>变量提升出现在相同作用域当中</li>\n<li>实际开发中推荐先声明再访问变量</li>\n</ol>\n<h3 id=\"函数提升\"><a href=\"#函数提升\" class=\"headerlink\" title=\"函数提升\"></a>函数提升</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 调用函数</span></span><br><span class=\"line\">  <span class=\"title function_\">foo</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 声明函数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;声明之前即被调用...&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 不存在提升现象</span></span><br><span class=\"line\">  <span class=\"title function_\">bar</span>();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> bar = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;函数表达式不存在提升现象...&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>函数提升能够使函数的声明调用更灵活</li>\n<li>函数表达式不存在提升的现象</li>\n<li>函数提升出现在相同作用域当中</li>\n</ol>\n<h3 id=\"函数参数【默认值、动态参数、剩余参数】\"><a href=\"#函数参数【默认值、动态参数、剩余参数】\" class=\"headerlink\" title=\"函数参数【默认值、动态参数、剩余参数】\"></a>函数参数【默认值、动态参数、剩余参数】</h3><h4 id=\"默认值\"><a href=\"#默认值\" class=\"headerlink\" title=\"默认值\"></a>默认值</h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 设置参数默认值</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\">name=<span class=\"string\">&quot;小明&quot;</span>, age=<span class=\"number\">18</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;p&gt;大家好，我叫<span class=\"subst\">$&#123;name&#125;</span>，我今年<span class=\"subst\">$&#123;age&#125;</span>岁了。&lt;/p&gt;`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 调用函数</span></span><br><span class=\"line\">  <span class=\"title function_\">sayHi</span>();</span><br><span class=\"line\">  <span class=\"title function_\">sayHi</span>(<span class=\"string\">&#x27;小红&#x27;</span>);</span><br><span class=\"line\">  <span class=\"title function_\">sayHi</span>(<span class=\"string\">&#x27;小刚&#x27;</span>, <span class=\"number\">21</span>);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>声明函数时为形参赋值即为参数的默认值</li>\n<li>如果参数未自定义默认值时，参数的默认值为 <code>undefined</code></li>\n<li>调用函数时没有传入对应实参时，参数的默认值被当做实参传入</li>\n</ol>\n<h4 id=\"动态参数\"><a href=\"#动态参数\" class=\"headerlink\" title=\"动态参数\"></a>动态参数</h4><p><code>arguments</code> 是函数内部内置的伪数组变量，它包含了调用函数时传入的所有实参。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 求生函数，计算所有参数的和</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(arguments);</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      s += <span class=\"variable language_\">arguments</span>[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用求和函数</span></span><br><span class=\"line\">  <span class=\"title function_\">sum</span>(<span class=\"number\">5</span>, <span class=\"number\">10</span>); <span class=\"comment\">// 两个参数</span></span><br><span class=\"line\">  <span class=\"title function_\">sum</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>); <span class=\"comment\">// 两个参数</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li><code>arguments</code> 是一个伪数组</li>\n<li><code>arguments</code> 的作用是动态获取函数的实参</li>\n</ol>\n<h4 id=\"剩余参数\"><a href=\"#剩余参数\" class=\"headerlink\" title=\"剩余参数\"></a>剩余参数</h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">config</span>(<span class=\"params\">baseURL, ...other</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(baseURL);</span><br><span class=\"line\">    <span class=\"comment\">// other 是真数组，动态获取实参</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(other);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用函数</span></span><br><span class=\"line\">  <span class=\"title function_\">config</span>(<span class=\"string\">&#x27;http://baidu.com&#x27;</span>, <span class=\"string\">&#x27;get&#x27;</span>, <span class=\"string\">&#x27;json&#x27;</span>);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li><p><code>...</code> 是语法符号，置于最末函数形参之前，用于获取多余的实参</p>\n</li>\n<li><p>借助 <code>...</code> 获取的剩余实参</p>\n</li>\n</ol>\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h3><p>箭头函数是一种声明函数的简洁语法，它与普通函数并无本质的区别，差异性更多体现在语法格式上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  // 箭头函数</span><br><span class=\"line\">  let foo = () =&gt; &#123;</span><br><span class=\"line\">    console.log(&#x27;^_^ 长相奇怪的函数...&#x27;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // 调用函数</span><br><span class=\"line\">  foo();</span><br><span class=\"line\">  </span><br><span class=\"line\">  // 更简洁的语法</span><br><span class=\"line\">  let form = document.querySelector(&#x27;form&#x27;);</span><br><span class=\"line\">  form.addEventListener(&#x27;click&#x27;, ev =&gt; ev.preventDefault());</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>箭头函数属于表达式函数，因此不存在函数提升</li>\n<li>箭头函数只有一个参数时可以省略圆括号 <code>()</code></li>\n<li>箭头函数函数体只有一行代码时可以省略花括号 <code>&#123;&#125;</code>，并自动做为返回值被返回</li>\n<li>箭头函数中没有 <code>arguments</code>，只能使用 <code>...</code> 动态获取实参</li>\n<li>涉及到this的使用，不建议用箭头函数</li>\n</ol>\n<h3 id=\"箭头函数与普通函数的this指向问题\"><a href=\"#箭头函数与普通函数的this指向问题\" class=\"headerlink\" title=\"箭头函数与普通函数的this指向问题\"></a>箭头函数与普通函数的this指向问题</h3><h4 id=\"this-默认值\"><a href=\"#this-默认值\" class=\"headerlink\" title=\"this - 默认值\"></a>this - 默认值</h4><h5 id=\"普通函数\"><a href=\"#普通函数\" class=\"headerlink\" title=\"普通函数\"></a>普通函数</h5><p><strong>普通函数</strong>的调用方式决定了 <code>this</code> 的值，即【谁调用 <code>this</code> 的值指向谁】，如下代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 普通函数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 函数表达式</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sayHello = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">// 函数的调用方式决定了 this 的值</span></span><br><span class=\"line\">  <span class=\"title function_\">sayHi</span>(); <span class=\"comment\">// window</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">sayHi</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\"> \t<span class=\"comment\">// 普通对象</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">walk</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"comment\">// 动态为 user 添加方法</span></span><br><span class=\"line\">  user.<span class=\"property\">sayHi</span> = sayHi;</span><br><span class=\"line\">  uesr.<span class=\"property\">sayHello</span> = sayHello;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">// 函数调用方式，决定了 this 的值</span></span><br><span class=\"line\">  user.<span class=\"title function_\">sayHi</span>();</span><br><span class=\"line\">  user.<span class=\"title function_\">sayHello</span>();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>注： 普通函数没有明确调用者时 <code>this</code> 值为 <code>window</code>，严格模式下没有调用者时 <code>this</code> 的值为 <code>undefined</code>。</p>\n<h5 id=\"箭头函数-1\"><a href=\"#箭头函数-1\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h5><p><strong>箭头函数</strong>中的 <code>this</code> 与普通函数完全不同，也不受调用方式的影响，事实上箭头函数中并不存在 <code>this</code> ！箭头函数中访问的 <code>this</code> 不过是箭头函数所在作用域的 <code>this</code> 变量。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>); <span class=\"comment\">// 此处为 window</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sayHi = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>); </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 普通对象</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 该箭头函数中的 this 为函数声明环境中 this 一致</span></span><br><span class=\"line\">    <span class=\"attr\">walk</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">sleep</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> <span class=\"title function_\">fn</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>); <span class=\"comment\">// 该箭头函数中的 this 与 sleep 中的 this 一致</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 调用箭头函数</span></span><br><span class=\"line\">      <span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 动态添加方法</span></span><br><span class=\"line\">  user.<span class=\"property\">sayHi</span> = sayHi;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 函数调用</span></span><br><span class=\"line\">  user.<span class=\"title function_\">sayHi</span>();</span><br><span class=\"line\">  user.<span class=\"title function_\">sleep</span>();</span><br><span class=\"line\">  user.<span class=\"title function_\">walk</span>();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在开发中【使用箭头函数前需要考虑函数中 <code>this</code> 的值】，<strong>事件回调函数</strong>使用箭头函数时，<code>this</code> 为全局的 <code>window</code>，因此DOM事件回调函数不推荐使用箭头函数，如下代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// DOM 节点</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.btn&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 箭头函数 此时 this 指向了 window</span></span><br><span class=\"line\">  btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 普通函数 此时 this 指向了 DOM 对象</span></span><br><span class=\"line\">  btn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>同样由于箭头函数 <code>this</code> 的原因，<strong>基于原型的面向对象也不推荐采用箭头函数</strong>，如下代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 原型对像上添加了箭头函数</span></span><br><span class=\"line\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">walk</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;人都要走路...&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>); <span class=\"comment\">// widow</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">  p1.<span class=\"title function_\">walk</span>();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"this-定义值\"><a href=\"#this-定义值\" class=\"headerlink\" title=\"this - 定义值\"></a>this - 定义值</h4><p>JavaScript 中还允许指定函数中 <code>this</code> 的指向，有 3 个方法可以动态指定普通函数中 <code>this</code> 的指向：</p>\n<h5 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call\"></a>call</h5><p>使用 <code>call</code> 方法调用函数，同时指定函数中 <code>this</code> 的值，使用方法如下代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 普通函数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> student = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小红&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">16</span>，</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用函数并指定 this 的值</span></span><br><span class=\"line\">  sayHi.<span class=\"title function_\">call</span>(user); <span class=\"comment\">// this 值为 user</span></span><br><span class=\"line\">  sayHi.<span class=\"title function_\">call</span>(student); <span class=\"comment\">// this 值为 student</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 求和函数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">counter</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用 counter 函数，并传入参数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = counter.<span class=\"title function_\">call</span>(<span class=\"literal\">null</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li><code>call</code> 方法能够在调用函数的同时指定 <code>this</code> 的值</li>\n<li>使用 <code>call</code> 方法调用函数时，第1个参数为 <code>this</code> 指定的值</li>\n<li><code>call</code> 方法的其余参数会依次自动传入函数做为函数的参数</li>\n</ol>\n<h5 id=\"apply\"><a href=\"#apply\" class=\"headerlink\" title=\"apply\"></a>apply</h5><p>使用 <code>call</code> 方法<strong>调用函数</strong>，同时指定函数中 <code>this</code> 的值，使用方法如下代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 普通函数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> student = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小红&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">16</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用函数并指定 this 的值</span></span><br><span class=\"line\">  sayHi.<span class=\"title function_\">apply</span>(user); <span class=\"comment\">// this 值为 user</span></span><br><span class=\"line\">  sayHi.<span class=\"title function_\">apply</span>(student); <span class=\"comment\">// this 值为 student</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 求和函数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">counter</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用 counter 函数，并传入参数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = counter.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, [<span class=\"number\">5</span>, <span class=\"number\">10</span>]);</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li><code>apply</code> 方法能够在调用函数的同时指定 <code>this</code> 的值</li>\n<li>使用 <code>apply</code> 方法调用函数时，第1个参数为 <code>this</code> 指定的值</li>\n<li><code>apply</code> 方法第2个参数为数组，数组的单元值依次自动传入函数做为函数的参数</li>\n</ol>\n<h5 id=\"bind\"><a href=\"#bind\" class=\"headerlink\" title=\"bind\"></a>bind</h5><p><code>bind</code> 方法并<strong>不会调用函数</strong>，而是创建一个指定了 <code>this</code> 值的新函数，使用方法如下代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">// 普通函数</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用 bind 指定 this 的值</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sayHello = sayHi.<span class=\"title function_\">bind</span>(user);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用使用 bind 创建的新函数</span></span><br><span class=\"line\">  <span class=\"title function_\">sayHello</span>();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>注：<code>bind</code> 方法创建新的函数，与原函数的唯一的变化是改变了 <code>this</code> 的值。</p>\n<p><strong>改变this三个方法总结：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">call：fun.call(this，arg1, arg2,......)</span><br><span class=\"line\">apply：fun.apply(this, [arg1, arg2,......])</span><br><span class=\"line\">bind：fun.bind(this, arg1, arg2,......)</span><br><span class=\"line\"></span><br><span class=\"line\">相同点：</span><br><span class=\"line\">\t都可以用来改变this指向，第一个参数都是this指向的对象</span><br><span class=\"line\">区别：</span><br><span class=\"line\">\tcall和apply：都会使函数执行，但是参数不同</span><br><span class=\"line\">\tbind：不会使函数执行，参数同call</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"解构赋值\"><a href=\"#解构赋值\" class=\"headerlink\" title=\"解构赋值\"></a>解构赋值</h2><blockquote>\n<p>知道解构的语法及分类，使用解构简洁语法快速为变量赋值。</p>\n</blockquote>\n<p>解构赋值是一种快速为变量赋值的简洁语法，本质上仍然是为变量赋值，分为数组解构、对象解构两大类型。</p>\n<h3 id=\"数组解构\"><a href=\"#数组解构\" class=\"headerlink\" title=\"数组解构\"></a>数组解构</h3><p>数组解构是将数组的单元值快速批量赋值给一系列变量的简洁语法，如下代码所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 普通的数组</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 批量声明变量 a b c </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 同时将数组单元值 1 2 3 依次赋值给变量 a b c</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> [a, b, c] = arr;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c); <span class=\"comment\">// 3</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>赋值运算符 <code>=</code> 左侧的 <code>[]</code> 用于批量声明变量，右侧数组的单元值将被赋值给左侧的变量</li>\n<li>变量的顺序对应数组单元值的位置依次进行赋值操作</li>\n<li>变量的数量大于单元值数量时，多余的变量将被赋值为  <code>undefined</code></li>\n<li>变量的数量小于单元值数量时，可以通过 <code>...</code> 获取剩余单元值，但只能置于最末位</li>\n<li>允许初始化变量的默认值，且只有单元值为 <code>undefined</code> 时默认值才会生效</li>\n</ol>\n<p>注：支持多维解构赋值，比较复杂后续有应用需求时再进一步分析</p>\n<h3 id=\"对象解构\"><a href=\"#对象解构\" class=\"headerlink\" title=\"对象解构\"></a>对象解构</h3><p>对象解构是将对象属性和方法快速批量赋值给一系列变量的简洁语法，如下代码所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 普通对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> user = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 批量声明变量 name age</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 同时将数组单元值 1 2 3 依次赋值给变量 a b c</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> &#123;name, age&#125; = user;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name); <span class=\"comment\">// 小明</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age); <span class=\"comment\">// 18</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>赋值运算符 <code>=</code> 左侧的 <code>&#123;&#125;</code> 用于批量声明变量，右侧对象的属性值将被赋值给左侧的变量</li>\n<li>对象属性的值将被赋值给与属性名<strong>相同</strong>的变量</li>\n<li>对象中<strong>找不到</strong>与变量名一致的属性时变量值为 <code>undefined</code></li>\n<li>允许初始化变量的默认值，属性不存在或单元值为 <code>undefined</code> 时默认值才会生效</li>\n</ol>\n<p>注：支持多维解构赋值，比较复杂后续有应用需求时再进一步分析</p>\n<h2 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h2><h3 id=\"抛出异常-throw\"><a href=\"#抛出异常-throw\" class=\"headerlink\" title=\"抛出异常 throw\"></a>抛出异常 throw</h3><p>异常处理是指预估代码执行过程中可能发生的错误，然后最大程度的避免错误的发生导致整个程序无法继续运行。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">counter</span>(<span class=\"params\">x, y</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(!x || !y) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// throw &#x27;参数不能为空!&#x27;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;参数不能为空!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> x + y;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">counter</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li><code>throw</code> 抛出异常信息，程序也会终止执行</li>\n<li><code>throw</code> 后面跟的是错误提示信息</li>\n<li><code>Error</code> 对象配合 <code>throw</code> 使用，能够设置更详细的错误信息</li>\n</ol>\n<h3 id=\"捕捉异常-try-…-catch\"><a href=\"#捕捉异常-try-…-catch\" class=\"headerlink\" title=\"捕捉异常  try … catch\"></a>捕捉异常  try … catch</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">try</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 查找 DOM 节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">var</span> p = docunent.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;p&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125; <span class=\"keyword\">catch</span>(error) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// try 代码段中执行有错误时，会执行 catch 代码段</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 查看错误信息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error.<span class=\"property\">message</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 终止代码继续执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 改变文本样式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    p.<span class=\"property\">style</span>.<span class=\"property\">color</span> = <span class=\"string\">&#x27;red&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">foo</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li><code>try...catch</code> 用于捕获错误信息</li>\n<li>将预估可能发生错误的代码写在 <code>try</code> 代码段中</li>\n<li>如果 <code>try</code> 代码段中出现错误后，会执行 <code>catch</code> 代码段，并截获到错误信息</li>\n</ol>\n","categories":["前端面试"],"tags":["JavaScript","变量提升","普通函数","箭头函数","this指向","解构赋值"]},{"title":"JavaScript基础语法","url":"/2022/06/23/JavaScript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","content":"<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本片文章主要记录本人在学习过程中容易混淆或者难以记住的概念和用法。</p>\n<h2 id=\"let和var的区别\"><a href=\"#let和var的区别\" class=\"headerlink\" title=\"let和var的区别\"></a>let和var的区别</h2><h2 id=\"模板字符串\"><a href=\"#模板字符串\" class=\"headerlink\" title=\"模板字符串\"></a>模板字符串</h2><h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h2>","categories":["前端开发"],"tags":["JavaScript"]},{"title":"OJ在线编程常见输入输出 - JavaScript Node","url":"/2022/08/22/OJ%E5%9C%A8%E7%BA%BF%E7%BC%96%E7%A8%8B%E5%B8%B8%E8%A7%81%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA-JavaScript-Node/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近秋招面临找工作的事情，基本上都在忙折刷算法题、背八股文。之前学习 Java、Python 居多。但是工作目标还是前端，因此重新捡起来 JavaScript ，开始了漫漫的刷题路…</p>\n<p>在网上找了很多输入输出的资料，有关 JavaScript Node 版本的少之又少，内容又参差不齐。因此，决定自己整理一个文档，用于日后的复习，提供刷题参考。</p>\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h3><p>每一行输入都会调用一次 <code>rl.on(&#39;line&#39;,...）</code>，因此，如果每一行输入逻辑一样，则可以统一处理。如果每一行的输入逻辑不一样，比如第一行是测试组数，第二行开始才是测试数据，需要在 on 函数中判断当前是否是第一行，还是测试数据行。</p>\n<h3 id=\"多行输入-不知道行数\"><a href=\"#多行输入-不知道行数\" class=\"headerlink\" title=\"多行输入 - 不知道行数\"></a>多行输入 - 不知道行数</h3><p>链接：<a href=\"https://ac.nowcoder.com/acm/contest/5652/A\">https://ac.nowcoder.com/acm/contest/5652/A</a><br>来源：牛客网</p>\n<h4 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述:\"></a>输入描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入包括两个正整数a,b(1 &lt;= a, b &lt;= 1000),输入数据包括多组。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述:\"></a>输出描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输出a+b的结果               </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1 5</span><br><span class=\"line\">10 20</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">30</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">input</span>: process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>: process.<span class=\"property\">stdout</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 每行执行一次</span></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;line&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">line</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a+b)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多行输入-知道行数\"><a href=\"#多行输入-知道行数\" class=\"headerlink\" title=\"多行输入 - 知道行数\"></a>多行输入 - 知道行数</h3><p>链接：<a href=\"https://ac.nowcoder.com/acm/contest/5652/B\">https://ac.nowcoder.com/acm/contest/5652/B</a><br>来源：牛客网</p>\n<h4 id=\"输入描述-1\"><a href=\"#输入描述-1\" class=\"headerlink\" title=\"输入描述:\"></a>输入描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入第一行包括一个数据组数t(1 &lt;= t &lt;= 100)</span><br><span class=\"line\">接下来每行包括两个正整数a,b(1 &lt;= a, b &lt;= 1000)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出描述-1\"><a href=\"#输出描述-1\" class=\"headerlink\" title=\"输出描述:\"></a>输出描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输出a+b的结果           </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输入-1\"><a href=\"#输入-1\" class=\"headerlink\" title=\"输入\"></a>输入</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">1 5</span><br><span class=\"line\">10 20</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出-1\"><a href=\"#输出-1\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">30</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">input</span>: process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">    <span class=\"attr\">output</span>:process.<span class=\"property\">stdout</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">0</span> <span class=\"comment\">// 记录组数</span></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;line&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">line</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        num = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a+b)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"多组输入、结束标准\"><a href=\"#多组输入、结束标准\" class=\"headerlink\" title=\"多组输入、结束标准\"></a>多组输入、结束标准</h3><h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>  计算a+b </p>\n<h4 id=\"输入描述-2\"><a href=\"#输入描述-2\" class=\"headerlink\" title=\"输入描述:\"></a>输入描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入包括两个正整数a,b(1 &lt;= a, b &lt;= 10^9),输入数据有多组, 如果输入为0 0则结束输入</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出描述-2\"><a href=\"#输出描述-2\" class=\"headerlink\" title=\"输出描述:\"></a>输出描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输出a+b的结果             </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输入-2\"><a href=\"#输入-2\" class=\"headerlink\" title=\"输入\"></a>输入</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1 5</span><br><span class=\"line\">10 20</span><br><span class=\"line\">0 0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出-2\"><a href=\"#输出-2\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">30</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">input</span>: process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: process.<span class=\"property\">stdout</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;line&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">line</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>])</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   *  方法一：关闭输入- 完成本次剩余逻辑后，关闭输入</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a === b &amp;&amp; a === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    rl.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   *  方法二: 关闭输入 结合 return ，不用 else 判断了</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a === b &amp;&amp; a === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    rl.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 方法三：return 本行 - 不继续剩余逻辑</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a === b &amp;&amp; a === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a + b)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"多组输入、结束标准2\"><a href=\"#多组输入、结束标准2\" class=\"headerlink\" title=\"多组输入、结束标准2\"></a>多组输入、结束标准2</h3><p>链接：<a href=\"https://ac.nowcoder.com/acm/contest/5652/D\">https://ac.nowcoder.com/acm/contest/5652/D</a><br>来源：牛客网</p>\n<h4 id=\"输入描述-3\"><a href=\"#输入描述-3\" class=\"headerlink\" title=\"输入描述:\"></a>输入描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入数据包括多组。</span><br><span class=\"line\">每组数据一行,每行的第一个整数为整数的个数n(1 &lt;= n &lt;= 100), n为0的时候结束输入。</span><br><span class=\"line\">接下来n个正整数,即需要求和的每个正整数。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出描述-3\"><a href=\"#输出描述-3\" class=\"headerlink\" title=\"输出描述:\"></a>输出描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">每组数据输出求和的结果             </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输入-3\"><a href=\"#输入-3\" class=\"headerlink\" title=\"输入\"></a>输入</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">4 1 2 3 4</span><br><span class=\"line\">5 1 2 3 4 5</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出-3\"><a href=\"#输出-3\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">15</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">input</span>: process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">    <span class=\"attr\">outpu</span>: process.<span class=\"property\">stdout</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 每一行 都会重新调用这个方法</span></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;line&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">line</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> n =  <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>]) <span class=\"comment\">// 记录每一行数组元素的个数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 关闭输入 return</span></span><br><span class=\"line\">        rl.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\">// 每组数据输出求和的结果</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        sum += <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(arr[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sum)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"多组输入\"><a href=\"#多组输入\" class=\"headerlink\" title=\"多组输入\"></a>多组输入</h3><p>链接：<a href=\"https://ac.nowcoder.com/acm/contest/5652/E\">https://ac.nowcoder.com/acm/contest/5652/E</a><br>来源：牛客网</p>\n<h4 id=\"输入描述-4\"><a href=\"#输入描述-4\" class=\"headerlink\" title=\"输入描述:\"></a>输入描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入的第一行包括一个正整数t(1 &lt;= t &lt;= 100), 表示数据组数。</span><br><span class=\"line\">接下来t行, 每行一组数据。</span><br><span class=\"line\">每行的第一个整数为整数的个数n(1 &lt;= n &lt;= 100)。</span><br><span class=\"line\">接下来n个正整数, 即需要求和的每个正整数。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出描述-4\"><a href=\"#输出描述-4\" class=\"headerlink\" title=\"输出描述:\"></a>输出描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">每组数据输出求和的结果</span><br></pre></td></tr></table></figure>\n\n<p>​                            示例1                        </p>\n<h4 id=\"输入-4\"><a href=\"#输入-4\" class=\"headerlink\" title=\"输入\"></a>输入</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">4 1 2 3 4</span><br><span class=\"line\">5 1 2 3 4 5</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出-4\"><a href=\"#输出-4\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">15</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">input</span>: process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">    <span class=\"attr\">outpu</span>: process.<span class=\"property\">stdout</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">0</span> <span class=\"comment\">// 计算 数据的组数</span></span><br><span class=\"line\"><span class=\"comment\">// 每一行 都会重新调用这个方法</span></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;line&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">line</span>) &#123;</span><br><span class=\"line\"><span class=\"comment\">//     第一行逻辑</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        num = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line) </span><br><span class=\"line\">        <span class=\"keyword\">return</span> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//     其他行逻辑(不加 else 也可以，因为第一行 return 了；如果第一行没有 return，则必须加 else，不然会在第一行时继续往下执行)</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\">// 每组数据输出求和的结果</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        sum += <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(arr[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sum)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"字符串排序后输出\"><a href=\"#字符串排序后输出\" class=\"headerlink\" title=\"字符串排序后输出\"></a>字符串排序后输出</h3><p>链接：<a href=\"https://ac.nowcoder.com/acm/contest/5652/H\">https://ac.nowcoder.com/acm/contest/5652/H</a><br>来源：牛客网</p>\n<h4 id=\"输入描述-5\"><a href=\"#输入描述-5\" class=\"headerlink\" title=\"输入描述:\"></a>输入描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输入有两行，第一行n</span><br><span class=\"line\"></span><br><span class=\"line\">第二行是n个字符串，字符串之间用空格隔开</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出描述-5\"><a href=\"#输出描述-5\" class=\"headerlink\" title=\"输出描述:\"></a>输出描述:</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">输出一行排序后的字符串，空格隔开，无结尾空格</span><br></pre></td></tr></table></figure>\n\n<p>​                            示例1                        </p>\n<h4 id=\"输入-5\"><a href=\"#输入-5\" class=\"headerlink\" title=\"输入\"></a>输入</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">c d a bb e</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出-5\"><a href=\"#输出-5\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a bb c d e</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> readline = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;readline&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> rl = readline.<span class=\"title function_\">createInterface</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">input</span>: process.<span class=\"property\">stdin</span>,</span><br><span class=\"line\">    <span class=\"attr\">outpu</span>: process.<span class=\"property\">stdout</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 排序字符串数组</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">sort</span> = (<span class=\"params\">arr</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"title function_\">sort</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">// 每一行 都会重新调用这个方法</span></span><br><span class=\"line\">rl.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;line&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">line</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        num = <span class=\"title class_\">Number</span>.<span class=\"built_in\">parseInt</span>(line)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"title function_\">sort</span>(arr)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n","categories":["算法题"],"tags":["算法"]},{"title":"JavaScript进阶 - 面向对象、构造函数","url":"/2022/07/31/JavaScript%E8%BF%9B%E9%98%B6-%E4%B8%80%E5%88%87%E7%9A%86%E4%B8%BA%E5%AF%B9%E8%B1%A1/","content":"<h2 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h2><blockquote>\n<p>了解面向对象的基础概念，能够利用构造函数创建对象。</p>\n</blockquote>\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><p>构造函数是专门用于创建对象的函数，如果一个函数使用 <code>new</code> 关键字调用，那么这个函数就是构造函数。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 定义函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;通过 new 也能调用函数...&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 调用函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">new</span> foo;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol start=\"2\">\n<li>使用 <code>new</code> 关键字调用函数的行为被称为实例化</li>\n<li>实例化构造函数时没有参数时可以省略 <code>()</code></li>\n<li>构造函数的返回值即为新创建的对象</li>\n<li>构造函数内部的 <code>return</code> 返回的值无效！</li>\n</ol>\n<p>注：实践中为了从视觉上区分构造函数和普通函数，习惯将构造函数的首字母大写。</p>\n<h3 id=\"实例成员\"><a href=\"#实例成员\" class=\"headerlink\" title=\"实例成员\"></a>实例成员</h3><p>通过构造函数创建的对象称为实例对象，实例对象中的属性和方法称为实例成员。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 构造函数内部的 this 就是实例对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 实例对象中动态添加属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;小明&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 实例对象动态添加方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;大家好~&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化，p1 是实例对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// p1 实际就是 构造函数内部的 this</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p1);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p1.<span class=\"property\">name</span>); <span class=\"comment\">// 访问实例属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  p1.<span class=\"title function_\">sayHi</span>(); <span class=\"comment\">// 调用实例方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>构造函数内部 <code>this</code> 实际上就是实例对象，为其动态添加的属性和方法即为实例成员</li>\n<li>为构造函数传入参数，动态创建结构相同但值不同的对象</li>\n<li>实例对象的 <code>constructor</code>  属性指向了构造函数</li>\n<li><code>instanceof</code> 用于检测实例对象对应的构造函数</li>\n</ol>\n<p>注：构造函数创建的实例对象彼此独立互不影响。</p>\n<h3 id=\"静态成员\"><a href=\"#静态成员\" class=\"headerlink\" title=\"静态成员\"></a>静态成员</h3><p>在 JavaScript 中底层函数本质上也是对象类型，因此允许直接为函数动态添加属性或方法，构造函数的属性和方法被称为静态成员。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\">name, age</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 省略实例成员</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 静态属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\">eyes</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\">arms</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 静态方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\">walk</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;^_^人都会走路...&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// this 指向 Person</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">eyes</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>静态成员指的是添加到构造函数本身的属性和方法</li>\n<li>一般公共特征的属性或方法静态成员设置为静态成员</li>\n<li>静态成员方法中的 <code>this</code> 指向构造函数本身</li>\n</ol>\n<h3 id=\"一切皆对象\"><a href=\"#一切皆对象\" class=\"headerlink\" title=\"一切皆对象\"></a>一切皆对象</h3><blockquote>\n<p>体会 JavaScript 一切皆对象的语言特征，掌握各引用类型和包装类型对象属性和方法的使用。</p>\n</blockquote>\n<p>在 JavaScript 中<strong>最主要</strong>的数据类型有 6 种，分别是字符串、数值、布尔、undefined、null 和 对象，常见的对象类型数据包括数组和普通对象。其中字符串、数值、布尔、undefined、null 也被称为简单类型或基础类型，对象也被称为引用类型。</p>\n<p>在 JavaScript 内置了一些构造函数，绝大部的数据处理都是基于这些构造函数实现的，JavaScript 基础阶段学习的 <code>Date</code> 就是内置的构造函数。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// date 即为实例对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(date);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    简单数据类型：字符串、数字、布尔、<span class=\"literal\">undefined</span>、<span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    (引用类型)复杂数据类型：对象（数组）</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>甚至字符串、数值、布尔、数组、普通对象也都有专门的构造函数，用于创建对应类型的数据。</p>\n<h4 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h4><h5 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h5><p><code>Object</code> 是内置的构造函数，用于创建普通对象。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 通过构造函数创建普通对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> user = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>(&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">15</span>&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 这种方式声明的变量称为【字面量】</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> student = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;杜子腾&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">21</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 对象语法简写</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;小红&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> people = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 相当于 name: name</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    name,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 相当于 walk: function () &#123;&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    walk () &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;人都要走路...&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(student.<span class=\"property\">constructor</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(user.<span class=\"property\">constructor</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(student <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Object</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下图展示了普通对象在内存中的存储方式：<strong>普通对象数据保存在堆内存之中，栈内存中保存了普通对象在堆内存的地址</strong>。</p>\n<p>![memory](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day2\\笔记\\assets\\object-1.png)</p>\n<p><strong>普通对象在赋值时只是复制了栈内中的地址，而非堆内存中的数据</strong>，如下图所示：</p>\n<p>![heap-2](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day2\\笔记\\assets\\object-2.png)</p>\n<p>普通对象赋值后，<code>无论修改哪个变量另一个对象的数据值也会相当发生改变</code>。</p>\n<p>总结：</p>\n<ol>\n<li>推荐使用字面量方式声明对象，而不是 <code>Object</code> 构造函数</li>\n<li><code>Object.assign</code> 静态方法创建新的对象</li>\n<li><code>Object.keys</code> 静态方法获取对象中所有属性</li>\n<li><code>Object.values</code> 表态方法获取对象中所有属性值</li>\n</ol>\n<p>面试回答堆与栈的区别：</p>\n<ol>\n<li>堆和栈是内存中的数据存储空间</li>\n<li>简单类型的数据保存在内存的栈空间中</li>\n<li>引用类型的数据保存在内存的堆空间中，栈内存中存取的是引用类型的地址（房间号）</li>\n</ol>\n<h5 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h5><p><code>Array</code> 是内置的构造函数，用于创建数组。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 构造函数创建数组</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> arr = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 字面量方式创建数组</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> list = [<span class=\"string\">&#x27;html&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>, <span class=\"string\">&#x27;javascript&#x27;</span>];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(list.<span class=\"property\">constructor</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(list <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>数组在内存中的存储方式与普通对象一样，如下图所示：</p>\n<p>![memory](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day2\\笔记\\assets\\array-1.png)</p>\n<p>数组在赋值时只是复制了栈内中的地址，而非堆内存中的数据，如下图所示：</p>\n<p>![array-2](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day2\\笔记\\assets\\array-2.png)</p>\n<p>数组赋值后，无论修改哪个变量另一个对象的数据值也会相当发生改变。</p>\n<p>总结：</p>\n<ol>\n<li>推荐使用字面量方式声明数组，而不是 <code>Array</code> 构造函数</li>\n<li>实例方法 <code>forEach</code> 用于遍历数组，替代 <code>for</code> 循环</li>\n<li>实例方法 <code>filter</code> 过滤数组单元值，生成新数组</li>\n<li>实例方法 <code>map</code> 迭代原数组，生成新数组</li>\n<li>实例方法 <code>join</code> 数组单元素拼接成了符串</li>\n<li>实例方法 <code>concat</code>  合并两个数组，生成新数组</li>\n<li>实例方法 <code>sort</code> 对原数组单元值排序</li>\n<li>实例方法 <code>splice</code> 删除或替换原数组单元</li>\n<li>实例方法 <code>indexOf</code> 检索数组单元值</li>\n<li>实例方法 <code>reverse</code> 反转数组</li>\n<li>静态方法 <code>from</code> 伪数组转成数组</li>\n</ol>\n<h5 id=\"RegExp\"><a href=\"#RegExp\" class=\"headerlink\" title=\"RegExp\"></a>RegExp</h5><p><code>RegExp</code> 内置的构造函数，用于创建正则表达式。</p>\n<p>Regular Expression</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 构造函数创建正则</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;\\d&#x27;</span>, <span class=\"string\">&#x27;i&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 字面量方式创建正则</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// let reg = /(\\d)/i;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  reg.<span class=\"title function_\">exec</span>(<span class=\"string\">&#x27;123&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>推荐使用字面量定义正则表达式，而不是 <code>RegExp</code> 构造函数</li>\n<li><code>RegExp</code> 静态属性 $1、$2、$3、… 获取正则分组单元</li>\n</ol>\n<p>补充：当使用构造函数创建正则时有两种写法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 使用 // 定义正则</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"regexp\">/\\d/</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 或者使用 &#x27;&#x27; 定义正则</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 如果使用引号定义正则时，\\d、\\s、\\w</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    需要多添加一个 \\</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> reg1 = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;\\\\d&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"包装类型\"><a href=\"#包装类型\" class=\"headerlink\" title=\"包装类型\"></a>包装类型</h4><p>在 JavaScript 中的字符串、数值、布尔具有对象的使用特征，如具有属性和方法，如下代码举例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 字符串类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;hello world!&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"> \t<span class=\"comment\">// 统计字符的长度（字符数量）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"property\">length</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 数值类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> price = <span class=\"number\">12.345</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 保留两位小数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  price.<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>之所以具有对象特征的原因是字符串、数值、布尔类型数据是 JavaScript 底层使用 Object 构造函数“包装”来的，被称为包装类型。</p>\n<h5 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h5><p><code>String</code> 是内置的构造函数，用于创建字符串。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 使用构造函数创建字符串</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> str = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;hello world!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 字面量创建字符串</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> str2 = <span class=\"string\">&#x27;你好，世界！&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 检测是否属于同一个构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str.<span class=\"property\">constructor</span> === str2.<span class=\"property\">constructor</span>); <span class=\"comment\">// true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>); <span class=\"comment\">// false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>推荐使用字面量方式声明字符串，而不是 <code>String</code> 构造函数</li>\n<li>实例属性 <code>length</code> 用来获取字符串的度长</li>\n<li>实例方法 <code>split</code> 用来将字符串拆分成数组</li>\n<li>实例方法 <code>toUpperCase</code> 用于将字母转换成大写</li>\n<li>实例方法 <code>toLowerCase</code> 用于将字母转换成小写</li>\n<li>实例方法 <code>slice</code> 用于字符串截取</li>\n<li>实例方法 <code>indexOf</code>  检测是否包含某字符</li>\n<li>实例方法 <code>startsWith</code> 检测是否以某字符开头</li>\n<li>实例方法 <code>endsWith</code> 检测是否以某字符结尾</li>\n<li>实例方法 <code>replace</code> 用于替换字符串，支持正则匹配</li>\n<li>实例方法  <code>padStart</code> 固定长度字符开始位置打补丁</li>\n<li>实例方法  <code>padEnd</code> 固定长度字符结束位置打补丁</li>\n<li>实例方法 <code>match</code> 用于查找字符串，支持正则匹配</li>\n</ol>\n<p>注：String 也可以当做普通函数使用，这时它的作用是强制转换成字符串数据类型。</p>\n<h5 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h5><p><code>Number</code> 是内置的构造函数，用于创建数值。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 使用构造函数创建数值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> x = <span class=\"keyword\">new</span> <span class=\"title class_\">Number</span>(<span class=\"string\">&#x27;10&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> y = <span class=\"keyword\">new</span> <span class=\"title class_\">Number</span>(<span class=\"number\">5</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 字面量创建数值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> z = <span class=\"number\">20</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 检测是否属于同一个构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x.<span class=\"property\">constructor</span> === z.<span class=\"property\">constructor</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>推荐使用字面量方式声明数值，而不是 <code>Number</code> 构造函数</li>\n<li>实例方法 <code>toFixed</code> 用于设置保留小数位的长度</li>\n</ol>\n<p>注：Number 也可以当做普通函数使用，这时它的作用是强制转换成数值数据类型。</p>\n<h5 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h5><p><code>Boolean</code> 是内置的构造函数，用于创建布尔值。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 使用构造函数创建布尔类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> locked = <span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"string\">&#x27;10&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 字面量创建布尔类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 检测是否属于同一个构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(locked.<span class=\"property\">constructor</span> === flag.<span class=\"property\">constructor</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ol>\n<li>推荐使用字面量方式声明布尔值，而不是 <code>Boolean</code> 构造函数</li>\n</ol>\n<p>注：Boolean 也可以当做普通函数使用，这时它的作用是强制转换成布尔类型数据，由其它数据类型转换成布尔类型的数据被称为真值（truly）或假值（falsly）。</p>\n<h4 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h4><p>至此对 JavaScript 有了更深的理解，即 JavaScript 中一切皆为对象，还有以前学习的 window、Math 对象，最后补充一点无论是引用类型或是包装包类型都包含两个公共的方法 <code>toString</code> 和 <code>valueOf</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 对象类型数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> user = &#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">18</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 数值类型\t </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> num = <span class=\"number\">12.345</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 字符串类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;hello world!&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  str.<span class=\"title function_\">valueOf</span>(); <span class=\"comment\">// 原始值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  user.<span class=\"title function_\">toString</span>(); <span class=\"comment\">// 表示该对象的字符串</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总计：</p>\n<ol>\n<li><code>valueOf</code> 方法获取原始值，数据内部运算的基础，很少主动调用该方法</li>\n<li><code>toString</code> 方法以字符串形式表示对象</li>\n</ol>\n<h2 id=\"面向对象编程：封装、继承、多态\"><a href=\"#面向对象编程：封装、继承、多态\" class=\"headerlink\" title=\"面向对象编程：封装、继承、多态\"></a>面向对象编程：封装、继承、多态</h2><p>面向对象编程是一种程序设计思想，它具有 3 个显著的特征：封装、继承、多态。</p>\n<h3 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h3><p>封装的本质是将具有关联的代码组合在一起，其优势是能够保证代码复用且易于维护，函数是最典型也是最基础的代码封装形式，面向对象思想中的封装仍以函数为基础，但提供了更高级的封装形式。</p>\n<h4 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h4><p>先来回顾一下以往代码封装的形式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 普通对象（命名空间）形式的封装</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> beats = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;狼&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">setName</span>: <span class=\"keyword\">function</span> (<span class=\"params\">name</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">getName</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  beats.<span class=\"title function_\">setName</span>(<span class=\"string\">&#x27;熊&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  beats.<span class=\"title function_\">getName</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>以往以普通对象（命名空间）形式封装的代码只是单纯把一系列的变量或函数组合到一起，所有的数据变量都被用来共享（使用 this 访问）。</p>\n<h4 id=\"构造函数-1\"><a href=\"#构造函数-1\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h4><p>对比以下通过面向对象的构造函数实现的封装：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;佚名&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 设置名字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">setName</span> = <span class=\"keyword\">function</span> (<span class=\"params\">name</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 读取名字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">getName</span> = <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例对像，获得了构造函数中封装的所有逻辑</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  p1.<span class=\"title function_\">setName</span>(<span class=\"string\">&#x27;小明&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p1.--name);<span class=\"comment\">// 小明</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p2.<span class=\"property\">name</span>); <span class=\"comment\">// 佚名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>构造函数相当于一个”模子”，能够像字面量那样创建出对象来，所不同的是借助构造函数创建出来的实例对象之间是<strong>彼此不影响</strong>的。</p>\n<p>总结：</p>\n<ol>\n<li>构造函数体现了面向对象的封装特性</li>\n<li>构造函数实例创建的对象彼此独立、互不影响</li>\n<li>命名空间式的封装无法保证数据的独立性</li>\n</ol>\n<p>注：可以举一些例子，如女娲造人等例子，加深对构造函数的理解。</p>\n<h4 id=\"原型对象\"><a href=\"#原型对象\" class=\"headerlink\" title=\"原型对象\"></a>原型对象</h4><p>实际上每一个构造函数都有一个名为 <code>prototype</code> 的属性，译成中文是原型的意思，<code>prototype</code> 的是对象类据类型，称为构造函数的原型对象，每个原型对象都具有 <code>constructor</code> 属性代表了该原型对象对应的构造函数。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 每个函数都有 prototype 属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<p>![prototype](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day3\\笔记2\\笔记\\assets\\prototype_1.png)</p>\n<p>了解了 JavaScript 中构造函数与原型对象的关系后，再来看原型对象具体的作用，如下代码所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 此处未定义任何方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 为构造函数的原型对象添加方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hi~&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  p1.<span class=\"title function_\">sayHi</span>(); <span class=\"comment\">// 输出结果为 Hi~</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>其结构如图所示：</p>\n<p>![prototype_2](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day3\\笔记2\\笔记\\assets\\prototype_2.png)</p>\n<p>构造函数 <code>Person</code> 中未定义任何方法，这时实例对象调用了原型对象中的方法 <code>sayHi</code>，接下来改动一下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 此处定义同名方法 sayHi</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;嗨!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 为构造函数的原型对象添加方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hi~&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  p1.<span class=\"title function_\">sayHi</span>(); <span class=\"comment\">// 输出结果为 嗨!</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>![prototype_3](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day3\\笔记2\\笔记\\assets\\prototype_3.png)</p>\n<p>构造函数 <code>Person</code> 中定义与原型对象中相同名称的方法，这时实例对象调用则是构造函中的方法 <code>sayHi</code>。</p>\n<p>通过以上两个简单示例不难发现 JavaScript 中对象的工作机制：<strong>当访问对象的属性或方法时，先在当前实例对象是查找，然后再去原型对象查找，并且原型对象被所有实例共享。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 此处定义同名方法 sayHi</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;嗨!&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 为构造函数的原型对象添加方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayHi</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Hi~&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 在构造函数的原型对象上添加属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;小明&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  p1.<span class=\"title function_\">sayHi</span>(); <span class=\"comment\">// 输出结果为 嗨!</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  p2.<span class=\"title function_\">sayHi</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>![prototype_4](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day3\\笔记2\\笔记\\assets\\prototype_4.png)</p>\n<p> 什么是原型对象？？</p>\n<p> 答：是构造函数的一个属性，它的数据类型是对象</p>\n<p> 原型对象有啥用？？</p>\n<p> 答：原型对象对应的构造函数的实例方法或属性不存在时会去查找原型对象</p>\n<p>总结：<strong>结合构造函数原型的特征，实际开发重往往会将封装的功能函数添加到原型对象中。</strong></p>\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>继承是面向对象编程的另一个特征，通过继承进一步提升代码封装的程度，JavaScript 中大多是借助原型对象实现继承的特性。</p>\n<p>龙生龙、凤生凤、老鼠的儿子会打洞描述的正是继承的含义，分别封装中国人和日本人的行为特征来理解编程中继承的含义，代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 封装中国人的行为特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Chinese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 中国人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">arms</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">legs</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eyes</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;中文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 中国人的行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">walk</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sing</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sleep</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 封装日本人的行为特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Japanese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 日本人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">arms</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">legs</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eyes</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;日文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 日本人的行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">walk</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sing</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sleep</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>其实我们都知道无论是中国人、日本人还是其它民族，人们的大部分特征是一致的，然而体现在代码中时人的相同的行为特征被重复编写了多次，代码显得十分冗余，我们可以将重复的代码抽离出来：</p>\n<h4 id=\"原型继承\"><a href=\"#原型继承\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h4><p>基于构造函数原型对象实现面向对象的继承特性。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 所有人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">arms</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">legs</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eyes</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">walk</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sing</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sleep</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 中国人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Chinese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;中文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 日本人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Japanese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;日文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上述代码可以理解成将 <code>Chinese</code> 和 <code>Japanese</code> 共有的属性和方法提取出来了，也就是说 <code>Chinese</code> 和 <code>Japanese</code> 需要【共享】一些属性和方法，而原型对象的属性和方法恰好是可以被用来共享的，因此我们看如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 中国人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Chinese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;中文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 日本人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Japanese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;日文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 人们【共有】的行为特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> people = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">arms</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">legs</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">eyes</span>:<span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">walk</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">sleep</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">sing</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 为 prototype 重新赋值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = people;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Chinese</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<p>![prototype_5](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day3\\笔记2\\笔记\\assets\\prototype_5.png)</p>\n<p>创建对象 <code>people</code> 将公共的的属性和方法独立出来，然后赋值给构造函数的 <code>prototype</code> 这样无论有多少个民族都可以共享公共的属性和方法了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 人们【共有】的行为特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> people = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">arms</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">legs</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">eyes</span>:<span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">walk</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">sleep</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">sing</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 中国人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Chinese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;中文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 日本人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Japanese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;日文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Englist</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;white&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span>= <span class=\"string\">&#x27;英文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 中国人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = people;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Chinese</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> c1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Chinese</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"> \t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 日本人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Japanese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = people;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Janpanese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Japanese</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 英国人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">English</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = people;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">English</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">English</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// ...</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>继承是一种可以“不劳而获”的手段！！！上述代码中 <code>Chinese</code>、<code>Japanese</code>、<code>English</code> 都轻松的获得了 <code>people</code> 的公共的方法和属性，我们说 <code>Chinese</code>、<code>Japanese</code>、<code>English</code> 继承了 <code>people</code>。</p>\n<h4 id=\"构造函数-2\"><a href=\"#构造函数-2\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h4><p>上述代码中是以命名空间的形式实现的继承，事实上 JavaScript 中继承更常见的是借助构造函数来实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 所有人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">arms</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">legs</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eyes</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 人的行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">walk</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sing</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">sleep</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 封装中国人的行为特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Chinese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 中国人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;中文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 封装日本人的行为特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Japanese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 日本人的特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;日文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// human 是构造函数 Person 的实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> human = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 中国人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Chinese</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 日本人</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Japanese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = human;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Japanese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Japanese</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如下图所示：</p>\n<p>![prototype_6](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day3\\笔记2\\笔记\\assets\\prototype_6.png)</p>\n<h4 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h4><p>基于原型对象的继承使得不同构造函数的原型对象关联在一起，并且这种关联的关系是一种链状的结构，我们将原型对象的链状结构关系称为原型链，如下图所示：</p>\n<p>![prototype_7](D:\\桌面\\黑马2022讲义\\003- JavaScript基础到高级\\JavaScript高级课程资料\\day3\\笔记2\\笔记\\assets\\prototype_7.png)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">作用：用于查找成员提供机制</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// Person 构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Person</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">arms</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">walk</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// Person 原型对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">legs</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">eyes</span> = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sing</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sleep</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// Chinese 构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">Chinese</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">skin</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">this</span>.<span class=\"property\">language</span> = <span class=\"string\">&#x27;中文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// Chinese 原型对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Chinese</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Chinese</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> c1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Chinese</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c1);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在 JavaScript 对象中包括了一个非标准备的属性 <code>__proto__</code> 它指向了构造函数的原型对象，通过它可以清楚的查看原型对象的链状结构。</p>\n<h2 id=\"class-ES6\"><a href=\"#class-ES6\" class=\"headerlink\" title=\"class - ES6\"></a>class - ES6</h2><p>传统面向对象的编程序语言都是【类】的概念，对象都是由类创建出来，然而早期 JavaScript 中是没有类的，面向对象大多都是基于构造函数和原型实现的，但是 ECMAScript 6  规范开始增加了【类】相关的语法，使得 JavaScript 中的面向对象实现方式更加标准。</p>\n<h3 id=\"封装-1\"><a href=\"#封装-1\" class=\"headerlink\" title=\"封装\"></a>封装</h3><p>class（类）是 ECMAScript 6 中新增的关键字，专门用于创建类的，类可被用于实现逻辑的封装。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 创建类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">// 此处编写封装逻辑</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p1);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"实例成员-1\"><a href=\"#实例成员-1\" class=\"headerlink\" title=\"实例成员\"></a>实例成员</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 创建类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 实例属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    name = <span class=\"string\">&#x27;小明&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 实例方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    sleep () &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;sleeping...&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  p1.<span class=\"title function_\">sayHi</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ul>\n<li><p>关键字 <code>class</code> 封装了所有的实例属性和方法</p>\n</li>\n<li><p>类中封装的并不是变量和函数，因此不能使用关键字 <code>let</code>、<code>const</code> 或 <code>var</code></p>\n</li>\n</ul>\n<h4 id=\"静态成员-1\"><a href=\"#静态成员-1\" class=\"headerlink\" title=\"静态成员\"></a>静态成员</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 创建类</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 静态属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">static</span> version = <span class=\"string\">&#x27;1.0.0&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 静态方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">static</span> getVersion = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">version</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 静态方法直接访问</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Person</span>.<span class=\"property\">version</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Person</span>.<span class=\"title function_\">getVersion</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ul>\n<li><code>static</code> 关键字用于声明静态属性和方法</li>\n<li>静态属性和方法直接通过类名进行访问</li>\n</ul>\n<h4 id=\"构造函数-3\"><a href=\"#构造函数-3\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h4><p>创建类时在类的内部有一个特定的方法 <code>constructor</code> ，该方法会在类被实例化时自动被调用，常被用于处理一些初始化的操作。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 实例化时 立即执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 构造函数、构造方法、构造器</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">constructor</span> (name, age) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">// 实例方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    walk () &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> + <span class=\"string\">&#x27;正在走路...&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;小明&#x27;</span>, <span class=\"number\">18</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  p1.<span class=\"title function_\">walk</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ul>\n<li><code>constructor</code> 是类中固定的方法名</li>\n<li><code>constructor</code> 方法在实例化时立即执行</li>\n<li><code>constructor</code> 方法接收实例化时传入的参数</li>\n<li><code>constructor</code> 并非是类中必须要存在的方法</li>\n</ul>\n<h3 id=\"继承-1\"><a href=\"#继承-1\" class=\"headerlink\" title=\"继承\"></a>继承</h3><h4 id=\"extends\"><a href=\"#extends\" class=\"headerlink\" title=\"extends\"></a>extends</h4><p><code>extends</code> 是 ECMAScript 6 中实现继承的简洁语法，代码如下所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 父类的属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    legs = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    arms = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    eyes = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 父类的方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    walk () &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;人类都会走路...&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">// 父类的方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    sleep () &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;人都得要睡觉...&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// Chinese 继承了 Person 的所有特征</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Chinese</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Person</span> &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> c1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Chinese</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  c1.<span class=\"title function_\">walk</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如上代码所示 <code>extends</code> 是专门用于实现继承的语法关键字，<code>Person</code> 称为父类、<code>Chinese</code> 称为子类。</p>\n<h4 id=\"super\"><a href=\"#super\" class=\"headerlink\" title=\"super\"></a>super</h4><p>在继承的过程中子类中 <code>constructor</code> 中必须调 <code>super</code> 函数，否则会有语法错误，如下代码所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">constructor</span> (name, age) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 父类的属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    legs = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  \tarms = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">    walk () &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;人类都会走路...&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 子类 English 继承了父类 Person</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">class</span> <span class=\"title class_\">English</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 子类的构造函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">constructor</span> (name, age) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">super</span>(name, age);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 子类的属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    skin = <span class=\"string\">&#x27;white&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  \tlanguage = <span class=\"string\">&#x27;英文&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 实例化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> e1 = <span class=\"keyword\">new</span> <span class=\"title class_\">English</span>(<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"number\">18</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e1.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>子类构造函数中的 <code>super</code> 函数的作用是可以将子类实例化时获得的参数传入父类的构造函数之中。</p>\n<h2 id=\"扩展：数组filter、map、如reduce\"><a href=\"#扩展：数组filter、map、如reduce\" class=\"headerlink\" title=\"扩展：数组filter、map、如reduce\"></a>扩展：数组filter、map、如reduce</h2><h3 id=\"含义\"><a href=\"#含义\" class=\"headerlink\" title=\"含义\"></a>含义</h3><h4 id=\"Filter\"><a href=\"#Filter\" class=\"headerlink\" title=\"Filter\"></a>Filter</h4><p>你想将一个数组做一个过滤，按照某规则提取出一些特定的项来。结果也生成了一个新数组，但新数组的长度小于或等于原数组。</p>\n<h4 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h4><p>你想将一个数组中的每一项做个转换，结果生成了一个新数组，并且新数组的长度和原数组一致。</p>\n<h4 id=\"Reduce\"><a href=\"#Reduce\" class=\"headerlink\" title=\"Reduce\"></a>Reduce</h4><p>你想通过遍历一个数组的每一项来计算出一个新东西，最后生成的结果可以是任何类型的变量：一个新数组，一个新对象，一个新布尔值…</p>\n<h4 id=\"共同点\"><a href=\"#共同点\" class=\"headerlink\" title=\"共同点\"></a>共同点</h4><p><code>filter</code>、<code>map</code>和<code>reduce</code>共同点就是并不会对原数组做任何改动，结果都是生成一个新变量。让我们来看一些例子：</p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><h4 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter\"></a>filter</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- filter: </span></span><br><span class=\"line\"><span class=\"comment\">    你想将一个数组做一个过滤，按照某规则提取出一些特定的项来。</span></span><br><span class=\"line\"><span class=\"comment\">    结果也生成了一个新数组，但新数组的长度小于或等于原数组。 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 现在我们有一个对象列表，其中每个对象代表的是一种变形金刚</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> transformers = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Optimus Prime&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Freightliner Truck&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Autobot&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Megatron&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Gun&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bumblebee&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;VW Beetle&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Autobot&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Soundwave&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Walkman&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// filter语法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//  callback将数组元素当参数传入，并返回一个布尔值。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 当返回值为真时，该元素被加入新数组中，反之则被过滤掉。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// Array.prototype.filter(callback(item));</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 现在我们把这些变形金刚过滤出汽车人(Autobots)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 方法一：箭头函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> autobots = transformers.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item.<span class=\"property\">team</span> === <span class=\"string\">&#x27;Autobot&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;方法一：箭头函数 autobots&#x27;</span>, autobots);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 方法二：匿名函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> autobots = transformers.<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item</span>)  &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> item.<span class=\"property\">team</span> === <span class=\"string\">&#x27;Autobot&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;方法二：匿名函数 autobots&#x27;</span>, autobots);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 方法三：命名函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">isAutobot</span>(<span class=\"params\">transformer</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> transformer.<span class=\"property\">team</span> === <span class=\"string\">&#x27;Autobot&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> autobots = transformers.<span class=\"title function_\">filter</span>(isAutobot);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;方法三：命名函数 autobots&#x27;</span>, autobots);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- map: </span></span><br><span class=\"line\"><span class=\"comment\">    你想将一个数组中的每一项做个转换，</span></span><br><span class=\"line\"><span class=\"comment\">    结果生成了一个新数组，并且新数组的长度和原数组一致。 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 现在我们有一个对象列表，其中每个对象代表的是一种变形金刚</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> transformers = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Optimus Prime&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Freightliner Truck&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Autobot&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Megatron&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Gun&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bumblebee&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;VW Beetle&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Autobot&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Soundwave&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Walkman&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 如果想得到一个包含所有变形（form）的列表该怎么做呢？</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// map使用语法：\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// Array.prototype.map(callback(item));</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// callback会遍历数组的每个元素，在其中返回的每一个数值将会组成新数组。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 方法一：箭头函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> robotsInDisguise1 = transformers.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item.<span class=\"property\">form</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;方法一：箭头函数 &#x27;</span>, robotsInDisguise1);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 方法二：匿名函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> robotsInDisguise2 = transformers.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">transformer</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> transformer.<span class=\"property\">form</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;方法二：匿名函数 &#x27;</span>, robotsInDisguise2);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 方法三：命名函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">getForm</span>(<span class=\"params\">transformer</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> transformer.<span class=\"property\">form</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> robotsInDisguise3 = transformers.<span class=\"title function_\">map</span>(getForm);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;方法三：命名函数 &#x27;</span>, robotsInDisguise3);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce\"></a>reduce</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- filter: </span></span><br><span class=\"line\"><span class=\"comment\">    你想通过遍历一个数组的每一项来计算出一个新东西，</span></span><br><span class=\"line\"><span class=\"comment\">    最后生成的结果可以是任何类型的变量：</span></span><br><span class=\"line\"><span class=\"comment\">    一个新数组，一个新对象，一个新布尔值… --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 现在我们有一个对象列表，其中每个对象代表的是一种变形金刚</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> constructicons = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Scrapper&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Freightliner Truck&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">bodyPart</span>: <span class=\"string\">&#x27;rightLeg&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Hook&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Mobile Crane&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">bodyPart</span>: <span class=\"string\">&#x27;upperTorso&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Bonecrusher&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Bulldozer&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">bodyPart</span>: <span class=\"string\">&#x27;leftArm&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Scavenger&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Excavator&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">bodyPart</span>: <span class=\"string\">&#x27;rightArm&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Mixmaster&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Concrete Mixer&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">bodyPart</span>: <span class=\"string\">&#x27;leftLeg&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Long Haul&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">form</span>: <span class=\"string\">&#x27;Dump Truck&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">bodyPart</span>: <span class=\"string\">&#x27;lowerTorso&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//         Array.reduce()是通过遍历每个数组元素对其做运算，</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//         因此，也是三个API之间最富有技巧的，其使用语法也略显复杂：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// Array.prototype.reduce(callback(previousValue, currentValue[, index], array]), initialValue)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// educe的callback需要至少两个参数。第一个是从上次遍历中返回的一个值，第二个是当前数组遍历到的一个值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// ，返回值又将当做第一个参数被传入到下一次遍历。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 组合变形金刚</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">assemble</span>(<span class=\"params\">combiner, transformer</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//每次遍历都会将当前的变形金刚（transformer）的名字加入到组合器（combiner）的form中去。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            combiner.<span class=\"property\">form</span>[transformer.<span class=\"property\">bodyPart</span>] = transformer.<span class=\"property\">name</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// bodyPart:name</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> combiner;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> devastator = constructicons.<span class=\"title function_\">reduce</span>(assemble, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Devastator&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">team</span>: <span class=\"string\">&#x27;Decepticon&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">form</span>: &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;reduce&#x27;</span>, devastator);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            devastator == &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            name: ‘Devastator’,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            team: ‘Decepticon’,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            form: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                leftArm: &quot;Bonecrusher&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                leftLeg: &quot;Mixmaster&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                lowerTorso: &quot;Long Haul&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                rightArm: &quot;Scavenger&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                rightLeg: &quot;Scrapper&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                upperTorso: &quot;Hook&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">        &#125;        </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">*/</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","categories":["前端面试"],"tags":["JavaScript","构造函数","基本数据类型","基本引用类型","对象","数组","filter","map","reduce"]},{"title":"el-table 单元格文字过多时显示省略号","url":"/2022/08/24/el-table-%E5%8D%95%E5%85%83%E6%A0%BC%E6%96%87%E5%AD%97%E8%BF%87%E5%A4%9A%E6%97%B6%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7/","content":"<h2 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h2>\n\n\n\n\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>el-table</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_requirments&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">label</span>=<span class=\"string\">&quot;报考要求&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">min-width</span>=<span class=\"string\">&quot;400&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-tooltip</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">effect</span>=<span class=\"string\">&quot;dark&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">placement</span>=<span class=\"string\">&quot;top&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 显示 mouseover 后的全部内容 --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">slot</span>=<span class=\"string\">&quot;content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">&quot;eplise&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;scope.row.school_requirments&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 在表格中显示省略后的文字 --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;oneLine&quot;</span>&gt;</span>&#123;&#123; scope.row.school_requirments &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-tooltip</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>CSS样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">// 用于隐藏 el-<span class=\"selector-tag\">table</span> 中过多的文字内容</span><br><span class=\"line\"><span class=\"selector-class\">.oneLine</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.eplise</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/ShIcily/article/details/109447445\">Element UI 表格 show-overflow-tooltip 设置宽度以及内容换行</a></p>\n","categories":["实验室项目"],"tags":["el-table"]},{"title":"elementui - form表单","url":"/2022/06/27/elementui-form%E8%A1%A8%E5%8D%95/","content":"<p>[TOC]</p>\n<h2 id=\"表单元素\"><a href=\"#表单元素\" class=\"headerlink\" title=\"表单元素\"></a>表单元素</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;el-form&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"数据form对象\"><a href=\"#数据form对象\" class=\"headerlink\" title=\"数据form对象\"></a>数据form对象</h4><p>form: {}</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 表单数据结构</span></span><br><span class=\"line\">    <span class=\"attr\">form</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">school_code</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 学校编号</span></span><br><span class=\"line\">      <span class=\"attr\">school_id</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 学校id</span></span><br><span class=\"line\">      <span class=\"attr\">school_name</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\">// 学校名</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"model-用于表单第一层验证，显示红色-警告语\"><a href=\"#model-用于表单第一层验证，显示红色-警告语\" class=\"headerlink\" title=\":model 用于表单第一层验证，显示红色 警告语\"></a>:model 用于表单第一层验证，显示红色 警告语</h4><p>如果想做表单验证是必须要写的！</p>\n<p>目前el-form的<a href=\"https://so.csdn.net/so/search?q=model&spm=1001.2101.3001.7020\">model</a>属性主要用表单验证的，也就是配合el-form的rules和el-form-item的prop来使用的，如果不写model，然后验证的话，会提示缺少model，导致无法验证成功。</p>\n<p><strong>:model的作用：主要是为了配合表单验证。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">&quot;overflow-y: auto; height: 485px; margin-top: 10px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;150px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:model</span>=<span class=\"string\">&quot;form&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"表单数据绑定\"><a href=\"#表单数据绑定\" class=\"headerlink\" title=\"表单数据绑定\"></a>表单数据绑定</h2><p>v-model ： el-form-item内部的每个表单项.即使关闭表单，再次打开时，上次输入的内容仍在。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;el-form-item label=&quot;学校名称&quot;&gt;</span><br><span class=\"line\">  &lt;el-input v-model=&quot;form.school_name&quot; class=&quot;input_box&quot; /&gt;</span><br><span class=\"line\">&lt;/el-form-item&gt;</span><br><span class=\"line\">&lt;el-form-item label=&quot;学校等级&quot;&gt;</span><br><span class=\"line\">  &lt;el-input v-model=&quot;form.school_type&quot; class=&quot;input_box&quot; /&gt;</span><br><span class=\"line\">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"表单校验第一步（三剑客）\"><a href=\"#表单校验第一步（三剑客）\" class=\"headerlink\" title=\"表单校验第一步（三剑客）\"></a>表单校验第一步（三剑客）</h2><p>:model : el-form     配合表单校验</p>\n<p>:rules: el-form      指定表单对象和校验规则{}</p>\n<p>props: el-form-item      指定输入框对应哪一个校验规则</p>\n<h4 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;el-form</span><br><span class=\"line\">  style=&quot;overflow-y: auto; height: 485px; margin-top: 10px&quot;</span><br><span class=\"line\">  label-width=&quot;150px&quot;</span><br><span class=\"line\">  :rules=&quot;rules&quot;</span><br><span class=\"line\">  :model=&quot;form&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;el-form-item label=&quot;学校编号&quot; prop=&quot;school_code&quot;&gt;</span><br><span class=\"line\">    &lt;el-input v-model=&quot;form.school_code&quot; class=&quot;input_box&quot; /&gt;</span><br><span class=\"line\">  &lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 表单验证</span></span><br><span class=\"line\"><span class=\"attr\">rules</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">school_code</span>: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">message</span>: <span class=\"string\">&#x27;请输入学校编号&#x27;</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;blur&#x27;</span> &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：只使用验证三剑客是无法对未验证通过的内容进行提交拦截的。也就是说，验证三剑客只不过是在为满足表单验证要求时，在页面显示红色警示语，只要点击了提交按钮，仍然会进行提交表单。并没有实现完整的表单验证过程。</p>\n<p>解决：验证不通过拒绝提交请求。</p>\n<h2 id=\"表单校验第二步-validate\"><a href=\"#表单校验第二步-validate\" class=\"headerlink\" title=\"表单校验第二步 validate()\"></a>表单校验第二步 validate()</h2><p>ref获取el-form对象，调用el-form对象的validate方法进行拦截，如果验证成功则执行后面的提交请求代码，验证失败则不提交请求，并且弹出警告信息。即验证失败后代码不会往下执行。</p>\n<p>1 定义el-form对象的ref名称</p>\n<p>获得dom对象，此处用于获得表单el-form对象，为了调用el-form的validate验证方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;el-form</span><br><span class=\"line\">  ref=&quot;form&quot;</span><br><span class=\"line\">  style=&quot;overflow-y: auto; height: 485px; margin-top: 10px&quot;</span><br><span class=\"line\">  label-width=&quot;150px&quot;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<p>2 通过ref获取对象</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">this.$refs.form</span><br></pre></td></tr></table></figure>\n\n<p>3 调用el-form的validate方法</p>\n<p>有两种使用validate的方法</p>\n<p>方法一：官网（传入回调函数）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">onSave</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">form</span>.<span class=\"title function_\">validate</span>(<span class=\"function\">(<span class=\"params\">valid</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;submit&#x27;</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;submit error&#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span> <span class=\"comment\">// 表单校验不通过，不继续往下执行</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">form</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>方法二：</p>\n<img src=\"/2022/06/27/elementui-form%E8%A1%A8%E5%8D%95/image-20220627193812361.png\" class=\"\" title=\"image-20220627193812361\">\n\n<p>针对”若不传入回调函数，则会返回一个 promise”，使用async await</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">onSave</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">form</span>.<span class=\"title function_\">validate</span>()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(error)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["elementui"]},{"title":"excel导入功能 - 导入学校基本信息","url":"/2022/07/26/excel%E5%AF%BC%E5%85%A5%E5%8A%9F%E8%83%BD-%E5%AF%BC%E5%85%A5%E5%AD%A6%E6%A0%A1%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/","content":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1 前言\"></a>1 前言</h2><p>需求是给一张excel表格，提供学校的基本信息，将其批量导入后端数据库中</p>\n<p>表头如下：</p>\n<img src=\"/2022/07/26/excel%E5%AF%BC%E5%85%A5%E5%8A%9F%E8%83%BD-%E5%AF%BC%E5%85%A5%E5%AD%A6%E6%A0%A1%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/image-20220726101114066.png\" class=\"\" title=\"image-20220726101114066\">\n\n<h2 id=\"2-封装excel导入组件\"><a href=\"#2-封装excel导入组件\" class=\"headerlink\" title=\"2 封装excel导入组件\"></a>2 封装excel导入组件</h2><h3 id=\"2-1-安装xlsx包\"><a href=\"#2-1-安装xlsx包\" class=\"headerlink\" title=\"2.1 安装xlsx包\"></a>2.1 安装xlsx包</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm i xlsx@0.16.8</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-创建excel组件和样式-components-x2F-UploadExcel-x2F-index-vue\"><a href=\"#2-2-创建excel组件和样式-components-x2F-UploadExcel-x2F-index-vue\" class=\"headerlink\" title=\"2.2 创建excel组件和样式(components&#x2F;UploadExcel&#x2F;index.vue)\"></a>2.2 创建excel组件和样式(components&#x2F;UploadExcel&#x2F;index.vue)</h3><img src=\"/2022/07/26/excel%E5%AF%BC%E5%85%A5%E5%8A%9F%E8%83%BD-%E5%AF%BC%E5%85%A5%E5%AD%A6%E6%A0%A1%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/image-20220726101922096.png\" class=\"\" title=\"image-20220726101922096\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;upload-excel&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;btn-upload&quot;&gt;</span><br><span class=\"line\">      &lt;el-button</span><br><span class=\"line\">        :loading=&quot;loading&quot;</span><br><span class=\"line\">        size=&quot;mini&quot;</span><br><span class=\"line\">        type=&quot;primary&quot;</span><br><span class=\"line\">        @click=&quot;handleUpload&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        点击上传</span><br><span class=\"line\">      &lt;/el-button&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;input</span><br><span class=\"line\">      ref=&quot;excel-upload-input&quot;</span><br><span class=\"line\">      class=&quot;excel-upload-input&quot;</span><br><span class=\"line\">      type=&quot;file&quot;</span><br><span class=\"line\">      accept=&quot;.xlsx, .xls&quot;</span><br><span class=\"line\">      @change=&quot;handleClick&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">    &lt;div</span><br><span class=\"line\">      class=&quot;drop&quot;</span><br><span class=\"line\">      @drop=&quot;handleDrop&quot;</span><br><span class=\"line\">      @dragover=&quot;handleDragover&quot;</span><br><span class=\"line\">      @dragenter=&quot;handleDragover&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;i class=&quot;el-icon-upload&quot; /&gt;</span><br><span class=\"line\">      &lt;span&gt;将文件拖到此处&lt;/span&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import XLSX from &#x27;xlsx&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    beforeUpload: Function, // eslint-disable-line</span><br><span class=\"line\">    onSuccess: Function // eslint-disable-line</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      loading: false,</span><br><span class=\"line\">      excelData: &#123;</span><br><span class=\"line\">        header: null,</span><br><span class=\"line\">        results: null</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    generateData(&#123; header, results &#125;) &#123;</span><br><span class=\"line\">      this.excelData.header = header</span><br><span class=\"line\">      this.excelData.results = results</span><br><span class=\"line\">      this.onSuccess &amp;&amp; this.onSuccess(this.excelData)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleDrop(e) &#123;</span><br><span class=\"line\">      e.stopPropagation()</span><br><span class=\"line\">      e.preventDefault()</span><br><span class=\"line\">      if (this.loading) return</span><br><span class=\"line\">      const files = e.dataTransfer.files</span><br><span class=\"line\">      if (files.length !== 1) &#123;</span><br><span class=\"line\">        this.$message.error(&#x27;Only support uploading one file!&#x27;)</span><br><span class=\"line\">        return</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      const rawFile = files[0] // only use files[0]</span><br><span class=\"line\">      if (!this.isExcel(rawFile)) &#123;</span><br><span class=\"line\">        this.$message.error(</span><br><span class=\"line\">          &#x27;Only supports upload .xlsx, .xls, .csv suffix files&#x27;</span><br><span class=\"line\">        )</span><br><span class=\"line\">        return false</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      this.upload(rawFile)</span><br><span class=\"line\">      e.stopPropagation()</span><br><span class=\"line\">      e.preventDefault()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleDragover(e) &#123;</span><br><span class=\"line\">      e.stopPropagation()</span><br><span class=\"line\">      e.preventDefault()</span><br><span class=\"line\">      e.dataTransfer.dropEffect = &#x27;copy&#x27;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleUpload() &#123;</span><br><span class=\"line\">      this.$refs[&#x27;excel-upload-input&#x27;].click()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleClick(e) &#123;</span><br><span class=\"line\">      const files = e.target.files</span><br><span class=\"line\">      const rawFile = files[0] // only use files[0]</span><br><span class=\"line\">      if (!rawFile) return</span><br><span class=\"line\">      this.upload(rawFile)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    upload(rawFile) &#123;</span><br><span class=\"line\">      this.$refs[&#x27;excel-upload-input&#x27;].value = null // fix can&#x27;t select the same excel</span><br><span class=\"line\">      if (!this.beforeUpload) &#123;</span><br><span class=\"line\">        this.readerData(rawFile)</span><br><span class=\"line\">        return</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      const before = this.beforeUpload(rawFile)</span><br><span class=\"line\">      if (before) &#123;</span><br><span class=\"line\">        this.readerData(rawFile)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    readerData(rawFile) &#123;</span><br><span class=\"line\">      this.loading = true</span><br><span class=\"line\">      return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">        const reader = new FileReader()</span><br><span class=\"line\">        reader.onload = (e) =&gt; &#123;</span><br><span class=\"line\">          const data = e.target.result</span><br><span class=\"line\">          const workbook = XLSX.read(data, &#123; type: &#x27;array&#x27; &#125;)</span><br><span class=\"line\">          const firstSheetName = workbook.SheetNames[0]</span><br><span class=\"line\">          const worksheet = workbook.Sheets[firstSheetName]</span><br><span class=\"line\">          const header = this.getHeaderRow(worksheet)</span><br><span class=\"line\">          const results = XLSX.utils.sheet_to_json(worksheet)</span><br><span class=\"line\">          this.generateData(&#123; header, results &#125;)</span><br><span class=\"line\">          this.loading = false</span><br><span class=\"line\">          resolve()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        reader.readAsArrayBuffer(rawFile)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getHeaderRow(sheet) &#123;</span><br><span class=\"line\">      const headers = []</span><br><span class=\"line\">      const range = XLSX.utils.decode_range(sheet[&#x27;!ref&#x27;])</span><br><span class=\"line\">      let C</span><br><span class=\"line\">      const R = range.s.r</span><br><span class=\"line\">      /* start in the first row */</span><br><span class=\"line\">      for (C = range.s.c; C &lt;= range.e.c; ++C) &#123;</span><br><span class=\"line\">        /* walk every column in the range */</span><br><span class=\"line\">        const cell = sheet[XLSX.utils.encode_cell(&#123; c: C, r: R &#125;)]</span><br><span class=\"line\">        /* find the cell in the first row */</span><br><span class=\"line\">        let hdr = &#x27;UNKNOWN &#x27; + C // &lt;-- replace with your desired default</span><br><span class=\"line\">        if (cell &amp;&amp; cell.t) hdr = XLSX.utils.format_cell(cell)</span><br><span class=\"line\">        headers.push(hdr)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      return headers</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    isExcel(file) &#123;</span><br><span class=\"line\">      return /\\.(xlsx|xls|csv)$/.test(file.name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class=\"line\">.upload-excel &#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">  justify-content: center;</span><br><span class=\"line\">  margin-top: 100px;</span><br><span class=\"line\">  .excel-upload-input &#123;</span><br><span class=\"line\">    display: none;</span><br><span class=\"line\">    z-index: -9999;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .btn-upload,</span><br><span class=\"line\">  .drop &#123;</span><br><span class=\"line\">    border: 1px dashed #bbb;</span><br><span class=\"line\">    width: 350px;</span><br><span class=\"line\">    height: 160px;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    line-height: 160px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .drop &#123;</span><br><span class=\"line\">    line-height: 80px;</span><br><span class=\"line\">    color: #bbb;</span><br><span class=\"line\">    i &#123;</span><br><span class=\"line\">      font-size: 60px;</span><br><span class=\"line\">      display: block;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-注册全局的导入excel组件-components-x2F-index-js\"><a href=\"#2-3-注册全局的导入excel组件-components-x2F-index-js\" class=\"headerlink\" title=\"2.3 注册全局的导入excel组件 (components&#x2F;index.js)\"></a>2.3 注册全局的导入excel组件 (components&#x2F;index.js)</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">PageTools</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./PageTools&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UploadExcel</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./UploadExcel&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">install</span>(<span class=\"params\">Vue</span>) &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;PageTools&#x27;</span>, <span class=\"title class_\">PageTools</span>) <span class=\"comment\">// 注册工具栏组件</span></span><br><span class=\"line\">    <span class=\"title class_\">Vue</span>.<span class=\"title function_\">component</span>(<span class=\"string\">&#x27;UploadExcel&#x27;</span>, <span class=\"title class_\">UploadExcel</span>) <span class=\"comment\">// 注册导入excel组件</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-excel导入步骤\"><a href=\"#3-excel导入步骤\" class=\"headerlink\" title=\"3 excel导入步骤\"></a>3 excel导入步骤</h2><h3 id=\"3-1-建立公共导入的页面路由-（router-x2F-index-js）\"><a href=\"#3-1-建立公共导入的页面路由-（router-x2F-index-js）\" class=\"headerlink\" title=\"3.1 建立公共导入的页面路由 （router&#x2F;index.js）\"></a>3.1 建立公共导入的页面路由 （router&#x2F;index.js）</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// excel导入的路由</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">   <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/import&#x27;</span>,</span><br><span class=\"line\">   <span class=\"attr\">component</span>: <span class=\"title class_\">Layout</span>,</span><br><span class=\"line\">   <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 在左侧栏中隐藏</span></span><br><span class=\"line\">   <span class=\"attr\">children</span>: [&#123;</span><br><span class=\"line\">     <span class=\"attr\">path</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">     <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/import&#x27;</span>),</span><br><span class=\"line\">     <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Import&#x27;</span>,</span><br><span class=\"line\">     <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">       <span class=\"attr\">title</span>: <span class=\"string\">&#x27;文件导入&#x27;</span> <span class=\"comment\">// 左侧导航会读取我们的路由里的meta里面的title作为显示菜单名称</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;]</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-创建import路由组件-src-views-import-index-vue\"><a href=\"#3-2-创建import路由组件-src-views-import-index-vue\" class=\"headerlink\" title=\"3.2 创建import路由组件  src/views/import/index.vue\"></a>3.2 创建import路由组件  <strong><code>src/views/import/index.vue</code></strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;!-- 公共导入组件 --&gt; </span><br><span class=\"line\">  &lt;upload-excel :on-success=&quot;success&quot; /&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-封装批量导入接口-api-x2F-schools-js\"><a href=\"#3-3-封装批量导入接口-api-x2F-schools-js\" class=\"headerlink\" title=\"3.3 封装批量导入接口 api&#x2F;schools.js\"></a>3.3 封装批量导入接口 api&#x2F;schools.js</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 批量新增学校信息</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">importSchoolInfo</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/school/addBatch&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    data</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-实现excel导入\"><a href=\"#3-4-实现excel导入\" class=\"headerlink\" title=\"3.4 实现excel导入\"></a>3.4 实现excel导入</h3><p>使用type类型，区分不同的批量导入请求。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;!-- 引入公共Excel导入组件 --&gt;</span><br><span class=\"line\">  &lt;upload-excel :on-success=&quot;success&quot; /&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; importSchoolInfo &#125; from &#x27;@/api/school&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &#x27;Import&#x27;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      // 为了让这个页面可以服务更多的导入功能，我们可以在页面中用参数来判断</span><br><span class=\"line\">      type: this.$route.query.type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    async success(&#123; header, results &#125;) &#123;</span><br><span class=\"line\">      console.log(&#x27;success type&#x27;, this.$route.query)</span><br><span class=\"line\">      if (this.type === undefined) &#123;</span><br><span class=\"line\">        this.$message.error(&#x27;请关闭当前页面，重新进入&#x27;)</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        // 如果是导入员工</span><br><span class=\"line\">        if (this.type === &#x27;schoolBasicInfo&#x27;) &#123;</span><br><span class=\"line\">          const schoolInfoRelations = &#123;</span><br><span class=\"line\">            学校编号: &#x27;school_id&#x27;,</span><br><span class=\"line\">            学校名: &#x27;school_name&#x27;,</span><br><span class=\"line\">            学校等级: &#x27;school_level&#x27;,</span><br><span class=\"line\">            学校类型: &#x27;school_type&#x27;,</span><br><span class=\"line\">            办学性质: &#x27;school_nature&#x27;,</span><br><span class=\"line\">            区域: &#x27;school_region&#x27;,</span><br><span class=\"line\">            省份: &#x27;school_province&#x27;,</span><br><span class=\"line\">            城市: &#x27;school_city&#x27;,</span><br><span class=\"line\">            是否211: &#x27;school_211&#x27;,</span><br><span class=\"line\">            是否985: &#x27;school_985&#x27;,</span><br><span class=\"line\">            隶属单位: &#x27;school_belong&#x27;,</span><br><span class=\"line\">            最新软科排名: &#x27;school_rk&#x27;,</span><br><span class=\"line\">            最新校友会排名: &#x27;school_xyh&#x27;,</span><br><span class=\"line\">            最新武书连排名: &#x27;school_wsl&#x27;,</span><br><span class=\"line\">            最新QS排名: &#x27;school_qs&#x27;,</span><br><span class=\"line\">            最新US排名: &#x27;school_us&#x27;,</span><br><span class=\"line\">            最新泰晤士排名: &#x27;school_tws&#x27;,</span><br><span class=\"line\">            报考要求: &#x27;school_requirments&#x27;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          const arr = []</span><br><span class=\"line\">          results.forEach((item) =&gt; &#123;</span><br><span class=\"line\">            const userInfo = &#123;&#125;</span><br><span class=\"line\">            Object.keys(item).forEach((key) =&gt; &#123;</span><br><span class=\"line\">              userInfo[schoolInfoRelations[key]] = item[key]</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            arr.push(userInfo)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          const &#123; data &#125; = await importSchoolInfo(arr) // 调用导入接口</span><br><span class=\"line\">          if (data.code === 200) &#123;</span><br><span class=\"line\">            this.$message.success(&#x27;批量新增学校基本信息成功！&#x27;)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          // 跳转回到上一个页面</span><br><span class=\"line\">          this.$router.back()</span><br><span class=\"line\">          // 将信息导入页面从openPages中删除，即关闭导入页面的tagsView</span><br><span class=\"line\">          this.$store.commit(&#x27;tagsView/REMOVE_PAGE&#x27;, &#x27;/import&#x27;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style /&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-5-在学校界面，点击”导入”按钮，实现批量导入。传入type类型\"><a href=\"#3-5-在学校界面，点击”导入”按钮，实现批量导入。传入type类型\" class=\"headerlink\" title=\"3.5 在学校界面，点击”导入”按钮，实现批量导入。传入type类型\"></a>3.5 在学校界面，点击”导入”按钮，实现批量导入。传入type类型</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;el-button type=&quot;warning&quot; @click=&quot;$router.push(&#x27;/import?type=schoolBasicInfo&#x27;)&quot;</span><br><span class=\"line\">&gt;导入&lt;/el-button&gt;</span><br></pre></td></tr></table></figure>\n\n","categories":["项目知识"]},{"title":"Hello World","url":"/2022/07/28/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"hexo常用命令","url":"/2022/06/22/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>方便查阅，将本人常用指令汇总</p>\n<h2 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h2><p>由于设置了github多设备同步博客，因此在使用博客之前需要进行拉取同步</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p>新建文章</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo n &quot;文章名&quot;</span><br></pre></td></tr></table></figure>\n\n<p>文章上传服务器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 清除缓存&amp;&amp;生成静态网页&amp;&amp;将本地数据部署到服务器</span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>","categories":["技巧小知识"],"tags":["hexo"]},{"title":"el-table动态展示数据","url":"/2022/06/28/el-table%E5%8A%A8%E6%80%81%E5%B1%95%E7%A4%BA%E6%95%B0%E6%8D%AE/","content":""},{"title":"mytext","url":"/2022/06/14/mytext/","content":"<img src=\"/2022/06/14/mytext/image-20220614173821555.png\" class=\"\" title=\"image-20220614173821555\">\n\n\n\n\n\n\n\n\n\n\n\n<p>a</p>\n<p>撒打啊三大asdd</p>\n"},{"title":"nginx部署vue项目","url":"/2022/08/16/nginx%E9%83%A8%E7%BD%B2vue%E9%A1%B9%E7%9B%AE/","content":"<p>Nginx 部署前端 vue 项目 + 实现反向代理</p>\n<p>&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">      listen 9061;</span><br><span class=\"line\">      server_name 59.110.70.138;</span><br><span class=\"line\"></span><br><span class=\"line\">      # 前端目录</span><br><span class=\"line\">      location / &#123;</span><br><span class=\"line\">              root /root/Gaokao_Data_Analysis_System/dist;</span><br><span class=\"line\">              #index  index.html index.htm;</span><br><span class=\"line\">              index index.html;</span><br><span class=\"line\">              try_files  $uri $uri/ /index.html;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t# 反向代理到后端工程</span><br><span class=\"line\">        location /api &#123;  </span><br><span class=\"line\">            proxy_set_header Host $http_host;</span><br><span class=\"line\">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">            proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class=\"line\">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">            proxy_pass http://127.0.0.1:8080;  # 代理到同服务器下的 8080 端口</span><br><span class=\"line\">            rewrite &quot;^/api/(.*)$&quot; /$1 break;  # /api/* 重写为 /*</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>修改完后，重新加载nginx配置文件  nginx -s reload</p>\n<p>重新加载报错时，删除所有 ngnix 服务，重新启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">root@iZ2zecl0gtu0ylfl829uudZ:~# ps aux | grep nginx</span><br><span class=\"line\">root       17120  0.0  0.0  55964  1660 ?        Ss   Jul28   0:00 nginx: master process nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\">root       17122  0.0  0.0  56204  5292 ?        S    Jul28   0:00 nginx: worker process</span><br><span class=\"line\">root       17123  0.0  0.0  56204  6160 ?        S    Jul28   0:00 nginx: worker process</span><br><span class=\"line\">root      104079  0.0  0.0   9032   660 pts/6    S+   23:11   0:00 grep --color=auto nginx</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1. 删除</span><br><span class=\"line\">kill -9 17120 17122 17123</span><br><span class=\"line\"></span><br><span class=\"line\">2. 重新启动</span><br><span class=\"line\">nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\">3. 检查是否启动</span><br><span class=\"line\">ps aux | grep nginx</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>查看 nginx 报错信息</p>\n<p> cat &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log</p>\n","categories":["项目"],"tags":["部署","项目","nginx"]},{"title":"vue - 父组件清除子组件的表单校验无效问题 表单初始值 nextTick()","url":"/2022/07/13/vue-%E7%88%B6%E7%BB%84%E4%BB%B6%E6%B8%85%E9%99%A4%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98-%E8%A1%A8%E5%8D%95%E5%88%9D%E5%A7%8B%E5%80%BC-nextTick/","content":"<h2 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h2><p>父组件 father.vue 里面有一个ref.dialog的子组件对话框</p>\n<p>子组件 add-dialog.vue 里面有一个ref&#x3D;form的表单</p>\n<p>父组件调用子组件中的表单对象，使用表单对象的清除校验方法？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">dialog</span>.<span class=\"property\">$refs</span>.<span class=\"property\">form</span>.<span class=\"title function_\">resetFields</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"坑1\"><a href=\"#坑1\" class=\"headerlink\" title=\"坑1\"></a>坑1</h3><p>ref获取dom对象的前提，对象要已经挂载到页面上，否则获取不到。</p>\n<p>解决：在每次使用$refs使用dom对象前，先打印看看这个对象在这一执行步骤时是否存在了。</p>\n<h3 id=\"坑2\"><a href=\"#坑2\" class=\"headerlink\" title=\"坑2\"></a>坑2</h3><p>resetFields方法的作用</p>\n<ol>\n<li>清除表单校验规则（红色警告字体），避免下次一打开表单就显示警告</li>\n<li>恢复表单数据到初始值（mounted之前的数据为表单初始值）因此，如果在做表单数据回显时，直接将数据赋值给表单对象，那么该数据就会在挂载前赋值上去，导致表单初始值变成当前的数据对象。可以使用$nextTIck(()&#x3D;&gt;{})，等数据和dom都挂载完成后，在执行数据回显操作</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数据回显放入$nextTIck中执行</span></span><br><span class=\"line\"> <span class=\"comment\">// 在表单mounted之后再赋值，避免重置表单失败（重置表单-&gt;恢复mounted之前的初始值)</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">form</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">pc_code</span>: row.<span class=\"property\">province_control_pc</span>,</span><br><span class=\"line\">        <span class=\"attr\">zslx_code</span>: row.<span class=\"property\">province_control_zslx</span>,</span><br><span class=\"line\">        <span class=\"attr\">year</span>: row.<span class=\"property\">province_control_year</span>,</span><br><span class=\"line\">        <span class=\"attr\">province_code</span>: row.<span class=\"property\">province_control_province</span>,</span><br><span class=\"line\">        <span class=\"attr\">province_score</span>: row.<span class=\"property\">province_control_score</span>,</span><br><span class=\"line\">        <span class=\"attr\">province_majorScore</span>: row.<span class=\"property\">province_control_majorScore</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"nextTick-方法理解\"><a href=\"#nextTick-方法理解\" class=\"headerlink\" title=\"nextTick()方法理解\"></a>nextTick()方法理解</h2><p><em>将回调函数延迟执行。简单理解：当数据更新了，在dom中渲染后，自动执行该函数</em></p>\n<h2 id=\"经验\"><a href=\"#经验\" class=\"headerlink\" title=\"经验\"></a>经验</h2><p>表单数据回显都放在nextTick中赋值，避免表单清除校验时无法清除数据。</p>\n","tags":["前端 vue"]},{"title":"vuex基础 - store、state、mutations、actions、局部作用域","url":"/2022/07/27/vuex%E5%9F%BA%E7%A1%80-store%E3%80%81state%E3%80%81mutations%E3%80%81actions%E3%80%81%E5%B1%80%E9%83%A8%E4%BD%9C%E7%94%A8%E5%9F%9F/","content":"<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><ol>\n<li>修改state状态必须通过**<code>mutations</code>**</li>\n<li>**<code>mutations</code>**只能执行同步代码，类似ajax，定时器之类的代码不能在mutations中执行</li>\n<li>执行异步代码，要通过**<code>actions</code>**，然后将数据提交给mutations才可以完成数据更新</li>\n<li>state的状态即共享数据可以在组件中引用</li>\n<li>组件中可以调用 state 、mutations、 actions</li>\n</ol>\n<h2 id=\"vuex初始化\"><a href=\"#vuex初始化\" class=\"headerlink\" title=\"vuex初始化\"></a>vuex初始化</h2><ol>\n<li><p>创建vue demo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue create  demo</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装到**<code>运行时依赖</code>**</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i vuex --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在main.js中注册vuex</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vuex</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(vuex)</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title class_\">Store</span>(&#123;&#125;)</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  store</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h2><h3 id=\"定义state\"><a href=\"#定义state\" class=\"headerlink\" title=\"定义state\"></a><strong>定义state</strong></h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化vuex对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title class_\">Store</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 管理数据</span></span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在组件中获取state\"><a href=\"#在组件中获取state\" class=\"headerlink\" title=\"在组件中获取state\"></a>在组件中获取state</h3><h4 id=\"插值表达式-store-state\"><a href=\"#插值表达式-store-state\" class=\"headerlink\" title=\"插值表达式 $store.state\"></a>插值表达式 $store.state</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div&gt; state的数据：&#123;&#123; $store.state.count &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"计算属性\"><a href=\"#计算属性\" class=\"headerlink\" title=\"计算属性\"></a>计算属性</h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 把state中数据，定义在组件内的计算属性中</span></span><br><span class=\"line\">  <span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">    count () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"property\">state</span>.<span class=\"property\">count</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;div&gt; state的数据：&#123;&#123; count &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"辅助函数-mapState\"><a href=\"#辅助函数-mapState\" class=\"headerlink\" title=\"辅助函数 - mapState\"></a>辅助函数 - mapState</h4><p>第一步：导入mapState</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#123; mapState &#125; from &#x27;vuex&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>第二步：采用数组形式引入state属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mapState</span>([<span class=\"string\">&#x27;count&#x27;</span>]) </span><br></pre></td></tr></table></figure>\n\n<p>第三步：利用<strong>延展运算符</strong>将导出的状态映射给计算属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">  ...<span class=\"title function_\">mapState</span>([<span class=\"string\">&#x27;count&#x27;</span>])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div&gt; state的数据：&#123;&#123; count &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mutations\"><a href=\"#mutations\" class=\"headerlink\" title=\"mutations\"></a>mutations</h2><h4 id=\"定义mutations\"><a href=\"#定义mutations\" class=\"headerlink\" title=\"定义mutations\"></a>定义mutations</h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store  = <span class=\"keyword\">new</span> <span class=\"title class_\">Vuex</span>.<span class=\"title class_\">Store</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 定义mutations</span></span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 方法里参数 第一个参数是当前store的state属性</span></span><br><span class=\"line\">    <span class=\"comment\">// payload 载荷 运输参数 调用mutaiions的时候 可以传递参数 传递载荷</span></span><br><span class=\"line\">    addCount (state, payload) &#123;</span><br><span class=\"line\">        state.<span class=\"property\">count</span> += payload</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    addCount2 (state) &#123;</span><br><span class=\"line\">        state.<span class=\"property\">count</span> += <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在组件中调用mutations\"><a href=\"#在组件中调用mutations\" class=\"headerlink\" title=\"在组件中调用mutations\"></a>在组件中调用mutations</h3><h4 id=\"原始形式-store-commit\"><a href=\"#原始形式-store-commit\" class=\"headerlink\" title=\"原始形式-$store.commit\"></a><strong>原始形式</strong>-$store.commit</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;addCount&quot;&gt;+1&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">    //   调用方法</span><br><span class=\"line\">      addCount () &#123;</span><br><span class=\"line\">         // 调用store中的mutations 提交给muations</span><br><span class=\"line\">        // commit(&#x27;muations名称&#x27;, 2)</span><br><span class=\"line\">        this.$store.commit(&#x27;addCount&#x27;, 10)  // 直接调用mutations</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"辅助函数-mapMutations\"><a href=\"#辅助函数-mapMutations\" class=\"headerlink\" title=\"辅助函数 - mapMutations\"></a><strong>辅助函数</strong> - mapMutations</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import  &#123; mapMutations &#125; from &#x27;vuex&#x27;</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    ...mapMutations([&#x27;addCount&#x27;])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;button @click=&quot;addCount(100)&quot;&gt;+100&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"actions\"><a href=\"#actions\" class=\"headerlink\" title=\"actions\"></a>actions</h2><h3 id=\"定义actions\"><a href=\"#定义actions\" class=\"headerlink\" title=\"定义actions\"></a>定义actions</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\"> <span class=\"comment\">//  获取异步的数据 context表示当前的store的实例 可以通过 context.state 获取状态 也可以通过context.commit 来提交mutations， 也可以 context.diapatch调用其他的action</span></span><br><span class=\"line\">   getAsyncCount (context) &#123;</span><br><span class=\"line\">     <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">       <span class=\"comment\">// 一秒钟之后 要给一个数 去修改state</span></span><br><span class=\"line\">       context.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;addCount&#x27;</span>, <span class=\"number\">123</span>)</span><br><span class=\"line\">     &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"comment\">// 带参数</span></span><br><span class=\"line\">   getAsyncCount2 (context, payload) &#123;</span><br><span class=\"line\">     <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">       <span class=\"comment\">// 一秒钟之后 要给一个数 去修改state</span></span><br><span class=\"line\">       context.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;addCount&#x27;</span>, payload)</span><br><span class=\"line\">     &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在组件中调用actions\"><a href=\"#在组件中调用actions\" class=\"headerlink\" title=\"在组件中调用actions\"></a>在组件中调用actions</h3><h4 id=\"原始调用-store-dispatch-‘actionName’-params\"><a href=\"#原始调用-store-dispatch-‘actionName’-params\" class=\"headerlink\" title=\"原始调用 - $store.dispatch(‘actionName’, params)\"></a><strong>原始调用</strong> - $store.dispatch(‘actionName’, params)</h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 无参数调用</span></span><br><span class=\"line\"> addAsyncCount () &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&#x27;getAsyncCount&#x27;</span>)</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"comment\">// 参数调用</span></span><br><span class=\"line\"> addAsyncCount () &#123;</span><br><span class=\"line\">     <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&#x27;getAsyncCount&#x27;</span>, <span class=\"number\">123</span>)</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"辅助函数-mapActions\"><a href=\"#辅助函数-mapActions\" class=\"headerlink\" title=\"辅助函数 - mapActions([])\"></a>辅助函数 - mapActions([])</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#123; mapActions &#125; from &#x27;vuex&#x27;</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    ...mapActions([&#x27;getAsyncCount&#x27;])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 调用</span><br><span class=\"line\">&lt;button @click=&quot;getAsyncCount(111)&quot;&gt;+异步&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"getters\"><a href=\"#getters\" class=\"headerlink\" title=\"getters\"></a>getters</h2><h3 id=\"定义getters\"><a href=\"#定义getters\" class=\"headerlink\" title=\"定义getters\"></a>定义getters</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// getters函数的第一个参数是 state</span></span><br><span class=\"line\">  <span class=\"comment\">// 必须要有返回值</span></span><br><span class=\"line\">   <span class=\"attr\">filterList</span>:  <span class=\"function\"><span class=\"params\">state</span> =&gt;</span>  state.<span class=\"property\">list</span>.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">5</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在组件中使用getters\"><a href=\"#在组件中使用getters\" class=\"headerlink\" title=\"在组件中使用getters\"></a>在组件中使用getters</h3><h4 id=\"原始方式-store-getters\"><a href=\"#原始方式-store-getters\" class=\"headerlink\" title=\"原始方式 - $store.getters\"></a>原始方式 - $store.getters</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;&#123;&#123; $store.getters.filterList &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"辅助函数-mapGetters\"><a href=\"#辅助函数-mapGetters\" class=\"headerlink\" title=\"辅助函数 - mapGetters([])\"></a><strong>辅助函数</strong> - mapGetters([])</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    ...mapGetters([&#x27;filterList&#x27;])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;div&gt;&#123;&#123; filterList &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Vuex-模块化\"><a href=\"#Vuex-模块化\" class=\"headerlink\" title=\"Vuex - 模块化\"></a>Vuex - 模块化</h2><h3 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h3><p>定义两个模块   <strong>user</strong> 和  <strong>setting</strong></p>\n<p>user中管理用户的状态  token </p>\n<p>setting中管理 应用的名称 name</p>\n<h3 id=\"定义两个模块\"><a href=\"#定义两个模块\" class=\"headerlink\" title=\"定义两个模块\"></a>定义两个模块</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">const store  = new Vuex.Store(&#123;</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    user: &#123;</span><br><span class=\"line\">       state: &#123;</span><br><span class=\"line\">         token: &#x27;12345&#x27;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setting: &#123;</span><br><span class=\"line\">      state: &#123;</span><br><span class=\"line\">         name: &#x27;Vuex实例&#x27;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-store-state-模块名称-属性名\"><a href=\"#使用-store-state-模块名称-属性名\" class=\"headerlink\" title=\"使用 $store.state.模块名称.属性名\"></a>使用 $store.<strong><code>state</code></strong>.<strong><code>模块名称</code></strong>.<strong><code>属性名</code></strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">      &lt;div&gt;用户token &#123;&#123; $store.state.user.token &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div&gt;网站名称 &#123;&#123; $store.state.setting.name &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<p>使用getters获取属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">token</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.<span class=\"property\">user</span>.<span class=\"property\">token</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.<span class=\"property\">setting</span>.<span class=\"property\">name</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">      ...<span class=\"title function_\">mapGetters</span>([<span class=\"string\">&#x27;token&#x27;</span>, <span class=\"string\">&#x27;name&#x27;</span>])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模块化中的命名空间\"><a href=\"#模块化中的命名空间\" class=\"headerlink\" title=\"模块化中的命名空间\"></a>模块化中的命名空间</h3><p>默认情况下，模块内部的 action、mutation 和 getter 是注册在<strong>全局命名空间</strong>的——这样使得多个模块能够对同一 mutation 或 action 作出响应。但是，如果我们想保证内部模块的高封闭性，我们可以采用namespaced来进行设置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">user</span>: &#123;</span><br><span class=\"line\">     <span class=\"attr\">namespaced</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">     <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">       <span class=\"attr\">token</span>: <span class=\"string\">&#x27;12345&#x27;</span></span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">//  这里的state表示的是user的state</span></span><br><span class=\"line\">       updateToken (state) &#123;</span><br><span class=\"line\">          state.<span class=\"property\">token</span> = <span class=\"number\">678910</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"方案1：直接调用-带上模块的属性名路径-store-dispatch-modelName-x2F-mutationName\"><a href=\"#方案1：直接调用-带上模块的属性名路径-store-dispatch-modelName-x2F-mutationName\" class=\"headerlink\" title=\"方案1：直接调用-带上模块的属性名路径$store.dispatch(modelName&#x2F;mutationName)\"></a>方案1：<strong>直接调用-带上模块的属性名路径$store.dispatch(modelName&#x2F;mutationName)</strong></h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">test () &#123;</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&#x27;user/updateToken&#x27;</span>) <span class=\"comment\">// 直接调用方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"方案2：辅助函数-带上模块的属性名路径-mapMutations-modelName-x2F-mutaionName\"><a href=\"#方案2：辅助函数-带上模块的属性名路径-mapMutations-modelName-x2F-mutaionName\" class=\"headerlink\" title=\"方案2：辅助函数-带上模块的属性名路径 -mapMutations([modelName&#x2F;mutaionName])\"></a>方案2：<strong>辅助函数-带上模块的属性名路径</strong> -mapMutations([modelName&#x2F;mutaionName])</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">     ...mapMutations([&#x27;user/updateToken&#x27;]),</span><br><span class=\"line\">     test () &#123;</span><br><span class=\"line\">         this[&#x27;user/updateToken&#x27;]()</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&lt;button @click=&quot;test&quot;&gt;修改token&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"方案3：-createNamespacedHelpers-创建基于某个命名空间辅助函数\"><a href=\"#方案3：-createNamespacedHelpers-创建基于某个命名空间辅助函数\" class=\"headerlink\" title=\"方案3： createNamespacedHelpers  创建基于某个命名空间辅助函数\"></a>方案3： <strong>createNamespacedHelpers</strong>  创建基于某个命名空间辅助函数</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#123; mapGetters, createNamespacedHelpers &#125; from &#x27;vuex&#x27;</span><br><span class=\"line\">const &#123; mapMutations &#125; = createNamespacedHelpers(&#x27;user&#x27;)</span><br><span class=\"line\">&lt;button @click=&quot;updateToken&quot;&gt;修改token2&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n\n","categories":["项目知识"],"tags":["vuex","store"]},{"title":"分页组件el-pagination","url":"/2022/06/24/%E5%88%86%E9%A1%B5%E7%BB%84%E4%BB%B6el-pagination/","content":"<p>[TOC]</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本篇文章用于简要描述el-table和el-pagination之间如何交互，以及编码中遇到的问题。</p>\n<p>数据：静态假数据（用于学习和测试，自己编的数据，请勿当真）</p>\n<h3 id=\"el-pagination使用方式\"><a href=\"#el-pagination使用方式\" class=\"headerlink\" title=\"el-pagination使用方式\"></a>el-pagination使用方式</h3><blockquote>\n<p>官方地址：<a href=\"https://element.eleme.cn/#/zh-CN/component/pagination#dai-you-bei-jing-se-de-fen-ye\">https://element.eleme.cn/#/zh-CN/component/pagination#dai-you-bei-jing-se-de-fen-ye</a></p>\n</blockquote>\n<h4 id=\"基础用法\"><a href=\"#基础用法\" class=\"headerlink\" title=\"基础用法\"></a>基础用法</h4><img src=\"/2022/06/24/%E5%88%86%E9%A1%B5%E7%BB%84%E4%BB%B6el-pagination/image-20220624160229958.png\" class=\"\" title=\"image-20220624160229958\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;el-pagination</span><br><span class=\"line\">               :current-page=&quot;page.page&quot;</span><br><span class=\"line\">               :page-size=&quot;page.size&quot;</span><br><span class=\"line\">               layout=&quot;prev, pager, next&quot;</span><br><span class=\"line\">               :total=&quot;page.total&quot;</span><br><span class=\"line\">               @current-change=&quot;handleCurrentChange&quot;</span><br><span class=\"line\">               /&gt;</span><br></pre></td></tr></table></figure>\n\n<p>数据</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 接收表格数据（在mounted中，获取数据，同时计算数据总数）</span></span><br><span class=\"line\">    <span class=\"attr\">datalist</span>: [],</span><br><span class=\"line\">    <span class=\"comment\">// 分页相关数据</span></span><br><span class=\"line\">    <span class=\"attr\">page</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">page</span>: <span class=\"number\">1</span>, <span class=\"comment\">// 当前页数</span></span><br><span class=\"line\">      <span class=\"attr\">size</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 每一页放的数据个数</span></span><br><span class=\"line\">      <span class=\"attr\">total</span>: <span class=\"number\">0</span> <span class=\"comment\">// 数据总数，需要在所有数据挂载完毕后才能在mounted中计算数据总数，</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>注释：</p>\n<p>（1）<strong>datalist</strong>：表格展示数据。由于需要分页组件需要计算总数据量，所以需要把所有页面数据都加载完之后，才能计算数据长度。故选择created()或mounted()生命周期函数。此处使用mounted()即刷新渲染html页面会重新运行mounted函数。</p>\n<p><strong>created</strong>(): 在所有数据和函数加载完成后，未渲染html之后就执行</p>\n<p><strong>mounted</strong>(): 在页面刷新后，即渲染完html之后才会重新执行</p>\n<p><strong>踩坑！</strong>声明周期函数不写在methods中，写在methods外，和methods平级。很容易在编码时自以为函数都要写在methods里面，导致生命周期函数不执行。</p>\n<p>（2）page对象：存储与分页相关的数据</p>\n<p><strong>page</strong>：用于当前页面的显示。当page值发生改变时，赋值给表格的显示数据也要改变。（分页组件通过这个与表格组件交互）</p>\n<p>注：分页组件和表格组件是两个独立组件，需要通过函数将两者连接起来，实现不同页面显示不同内容。如果是动态数据，就把page对象传递给后端接口，由接口根据page对象返回不同的数据给表格显示。</p>\n<p><strong>total</strong>：通过设置了total实现分页组件下面的 1 2 3 4…10 数字显示。初始为0，通过mounted函数中计算总数居量</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mounted</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">total</span> = tableList.<span class=\"property\">length</span> <span class=\"comment\">// 修改分页组件的总数居数量</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">datalist</span> = tableList.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span>) <span class=\"comment\">// 为表格附上第一页的数据</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>注：测试发现，此处使用created也能实现效果。</p>\n<p>最终解决方法：通过getDataList()函数获取数据，将数据赋值给datalist，在created中调用datalist。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getSchoolList</span>(<span class=\"params\"></span>) &#123; <span class=\"comment\">// 根据页码获取当前所有数据</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">total</span> = tableList.<span class=\"property\">length</span> <span class=\"comment\">// 修改分页组件的总数居数量</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">datalist</span> = tableList.<span class=\"title function_\">slice</span>((<span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> - <span class=\"number\">1</span>) * <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span>,</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span>) <span class=\"comment\">// 为表格附上该页面的数据</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">created</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">getSchoolList</span>() <span class=\"comment\">// 获取所有数据</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h4><p><strong>@current-change&#x3D;”handleCurrentChange”</strong> </p>\n<p>用于设置改变当前页面之后显示的不同数据。通过这个方法实现分页组件与表格数据的交互。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">handleCurrentChange</span>(<span class=\"params\">newPage</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> = newPage <span class=\"comment\">// 修改当前页</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">getPageList</span>() <span class=\"comment\">// 获取当前页的数据给datalist</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 获取当前页的数据</span></span><br><span class=\"line\"><span class=\"title function_\">getPageList</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 取出newPage页的数据给表格数据显示</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">datalist</span> = tableList.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">            (<span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> - <span class=\"number\">1</span>) * <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span>,</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 将获取数据单独放在一个函数中，方便编辑数据、新增数据、删除数据后重新调用获取数据的函数，重新渲染页面数据。</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"踩坑2！\"><a href=\"#踩坑2！\" class=\"headerlink\" title=\"踩坑2！\"></a><strong>踩坑2！</strong></h4><p>获取当前页数据时，我一开始使用splice，导致每次数组时都改变了原数组。</p>\n<h5 id=\"截取数组元素方法\"><a href=\"#截取数组元素方法\" class=\"headerlink\" title=\"截取数组元素方法\"></a>截取数组元素方法</h5><p>splice() : 会改变原数组</p>\n<p>slice(): 不会改变原数组</p>\n<h2 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h2><h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dashboard-container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;app-container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 信息显示表格 --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;datalist&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span> <span class=\"attr\">stripe</span> <span class=\"attr\">border</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">fixed</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;index&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;序号&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_id&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;学校编号&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;140&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;学校名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;140&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-tag</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;medium&quot;</span>&gt;</span>&#123;&#123; scope.row.school_name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">el-tag</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_level&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;等级&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_type&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;类型&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;140&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_nature&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;办学性质&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;140&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_region&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;区域&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_province&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;省份&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_city&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;城市&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_belong&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;隶属单位&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_rk&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;最新软科排名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_wsl&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;最新校友会排名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_xyh&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;最新武书连排名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_qs&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;最新QS排名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_us&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;最新US排名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_tws&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;最新泰晤士排名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">prop</span>=<span class=\"string\">&quot;school_requirments&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">label</span>=<span class=\"string\">&quot;报考要求&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">width</span>=<span class=\"string\">&quot;140&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200px&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!-- 通过作用域插槽，通过点击行，获得父组件行的数据 --&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleClick(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            &gt;</span>编辑<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-button</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              @<span class=\"attr\">click</span>=<span class=\"string\">&quot;handleDelete(scope.row)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            &gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 分页组件 --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-row</span> <span class=\"attr\">justify</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;flex&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;middle&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;height: 60px&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-pagination</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:current-page</span>=<span class=\"string\">&quot;page.page&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:page-size</span>=<span class=\"string\">&quot;page.size&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">layout</span>=<span class=\"string\">&quot;prev, pager, next&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:total</span>=<span class=\"string\">&quot;page.total&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">current-change</span>=<span class=\"string\">&quot;handleCurrentChange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\">      &lt;/el-row</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">  <span class=\"attr\">school_id</span>: <span class=\"string\">&#x27;10074&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_name</span>: <span class=\"string\">&#x27;华中科技大学&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_level</span>: <span class=\"string\">&#x27;B&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_type</span>: <span class=\"string\">&#x27;本科一批&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_nature</span>: <span class=\"string\">&#x27;本科&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_region</span>: <span class=\"string\">&#x27;中部&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_province</span>: <span class=\"string\">&#x27;湖北&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_city</span>: <span class=\"string\">&#x27;武汉&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_211</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_985</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_belong</span>: <span class=\"string\">&#x27;湖北省&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_rk</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_xyh</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_wsl</span>: <span class=\"number\">22</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_qs</span>: <span class=\"number\">69</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_us</span>: <span class=\"number\">178</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_tws</span>: <span class=\"number\">7</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_requirments</span>: <span class=\"string\">&#x27;报考要求&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> data1 = &#123;</span><br><span class=\"line\">  <span class=\"attr\">school_id</span>: <span class=\"string\">&#x27;20046&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_name</span>: <span class=\"string\">&#x27;武汉大学&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_level</span>: <span class=\"string\">&#x27;B&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_type</span>: <span class=\"string\">&#x27;本科一批&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_nature</span>: <span class=\"string\">&#x27;本科&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_region</span>: <span class=\"string\">&#x27;中部&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_province</span>: <span class=\"string\">&#x27;湖北&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_city</span>: <span class=\"string\">&#x27;武汉&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_211</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_985</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_belong</span>: <span class=\"string\">&#x27;湖北省&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_rk</span>: <span class=\"number\">9</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_xyh</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_wsl</span>: <span class=\"number\">80</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_qs</span>: <span class=\"number\">99</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_us</span>: <span class=\"number\">237</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_tws</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">  <span class=\"attr\">school_requirments</span>: <span class=\"string\">&#x27;报考要求&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> tableList = [</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  data1</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;SchoolInfo&#x27;</span>,</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 接收表格数据（在mounted中，获取数据，同时计算数据总数</span></span><br><span class=\"line\">      <span class=\"attr\">datalist</span>: [],</span><br><span class=\"line\">      <span class=\"comment\">// 分页相关数据</span></span><br><span class=\"line\">      <span class=\"attr\">page</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">page</span>: <span class=\"number\">1</span>, <span class=\"comment\">// 当前页数</span></span><br><span class=\"line\">        <span class=\"attr\">size</span>: <span class=\"number\">10</span>, <span class=\"comment\">// 每一页放的数据个数</span></span><br><span class=\"line\">        <span class=\"attr\">total</span>: <span class=\"number\">1000</span> <span class=\"comment\">// 数据总数，需要在所有数据挂载完毕后才能在mounted中计算数据总数，</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">mounted</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">total</span> = tableList.<span class=\"property\">length</span> <span class=\"comment\">// 修改分页组件的总数居数量</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">datalist</span> = tableList.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span>) <span class=\"comment\">// 为表格附上第一页的数据</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">handleCurrentChange</span>(<span class=\"params\">newPage</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> = newPage <span class=\"comment\">// 修改当前页</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">getPageList</span>() <span class=\"comment\">// 获取当前页的数据给datalist</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 获取当前页的数据</span></span><br><span class=\"line\">    <span class=\"title function_\">getPageList</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 取出newPage页的数据给表格数据显示</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">datalist</span> = tableList.<span class=\"title function_\">slice</span>(</span><br><span class=\"line\">        (<span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> - <span class=\"number\">1</span>) * <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span>,</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">page</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>.<span class=\"property\">size</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"分页效果展示\"><a href=\"#分页效果展示\" class=\"headerlink\" title=\"分页效果展示\"></a>分页效果展示</h3><p><video src=\"分页组件el-pagination/高考信息系统 - Google Chrome 2022-06-24 16-26-53.mp4\"></video></p>\n","categories":["element-ui"],"tags":["分页组件"]},{"title":"前端编码日常记录","url":"/2022/06/29/%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A0%81%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/","content":"<h3 id=\"前后端分离-跨域\"><a href=\"#前后端分离-跨域\" class=\"headerlink\" title=\"前后端分离-跨域\"></a>前后端分离-跨域</h3><p>比如后端的请求接口：<a href=\"http://192.168.1.**):8080/user/login\">http://192.168.1.**):8080/user/login</a></p>\n<p>由于前端与后端地址不同，不能够直接请求后端接口需要解决跨域问题，即用编写前端的电脑作为请求代理。</p>\n<ol>\n<li>vue,config.js 的proxy配置跨域代理</li>\n<li>设置请求的基地址为&#x2F;api</li>\n<li>api实例</li>\n</ol>\n<p>vue,config.js 的proxy配置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 代理配置 - 解决跨域问题（前端和后端接口不在同一域名下</span></span><br><span class=\"line\">  <span class=\"attr\">port</span>: port,</span><br><span class=\"line\">  <span class=\"attr\">open</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">overlay</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">errors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;/api&#x27;</span>: &#123; <span class=\"comment\">// 前端访问基地址</span></span><br><span class=\"line\">      <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://192.168.1.**:8080&#x27;</span>, <span class=\"comment\">// 后端地接口地址</span></span><br><span class=\"line\">      <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否跨域</span></span><br><span class=\"line\">      <span class=\"attr\">pathRewrite</span>: &#123; <span class=\"comment\">// 如果接口本身没有/api需要通过pathRewrite来重写了地址</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;^/api&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\">// 这里一定要重写为空（因为后端接口没有/api路径，直接才ip后接的接口）</span></span><br><span class=\"line\">          <span class=\"comment\">//这里理解成用‘/api’代替target里面的地址，组件中我们调接口时直接用/api代替</span></span><br><span class=\"line\">        <span class=\"comment\">// 比如我要调用&#x27;http://0.0:300/user/add&#x27;，直接写‘/api/user/add’即可</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>设置请求的基地址为&#x2F;api</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 创建一个axios实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;/api&#x27;</span>, <span class=\"comment\">// 设置axios请求的基础的基础地址(通过/api别名指定后端路由)</span></span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">5000</span> <span class=\"comment\">// 定义5秒超时</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>api请求实例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">login</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/user/login&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">    data</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>network显示的请求接口为</p>\n<img src=\"/2022/06/29/%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A0%81%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/image-20220629162315846.png\" class=\"\" title=\"image-20220629162315846\">\n\n<p>虽然显示请求 <a href=\"http://localhost:8888/api/user/list%EF%BC%8C%E5%85%B6%E5%AE%9E%E6%9C%AC%E5%9C%B0%E4%BC%9A%E8%BD%AC%E5%8F%91http://192.168.1.**:8080/user/login\">http://localhost:8888/api/user/list，其实本地会转发http://192.168.1.**:8080/user/login</a> 请求，即实现前端访问后端接口</p>\n<h3 id=\"父传子\"><a href=\"#父传子\" class=\"headerlink\" title=\"父传子\"></a>父传子</h3><h5 id=\"父组件点击编辑按钮，传递数据给子组件，子组件在表单内进行数据回显。\"><a href=\"#父组件点击编辑按钮，传递数据给子组件，子组件在表单内进行数据回显。\" class=\"headerlink\" title=\"父组件点击编辑按钮，传递数据给子组件，子组件在表单内进行数据回显。\"></a>父组件点击编辑按钮，传递数据给子组件，子组件在表单内进行数据回显。</h5><p>知识点：</p>\n<ol>\n<li>谁调用api获取数据？（父组件）</li>\n<li>父组件通过什么方式传数据给子组件？（:变量名&#x3D;“变量名”）</li>\n<li>子组件怎么接收？（props）</li>\n<li>子组件怎么使用数据进行回显？（el-input中使用v-model）</li>\n</ol>\n<p>父组件 el-table</p>\n<p>子组件 el-dialog</p>\n<p>触发：表格每一行都有一个用户编辑的操作，点击编辑按钮后，弹出子组件表单对话框，表单对话框进行该行数据回显。</p>\n<img src=\"/2022/06/29/%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A0%81%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/image-20220629154002779.png\" class=\"\" title=\"image-20220629154002779\">\n\n<p>假设：需求为全部用户信息表，每一行为一个用户的信息。父组件data中有一个form表示该行用户信息，子组件props中有一个form:{}用于接收父组件传来的用户的信息。</p>\n<p>操作步骤：</p>\n<ol>\n<li><p>父组件调有api接口，根据id查询该用户的所有信息</p>\n</li>\n<li><p>this.form &#x3D; userinfo &#x2F;&#x2F; 父组件保存用户信息</p>\n</li>\n<li><p>&lt;子组件 :form&#x3D;”form”&#x2F;&gt;  通过prop形式，将父组件得到的用户信息传递给子组件，子组件通过v-model绑定数据显示在el-input中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;密码&quot;</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;form.password&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;input_box&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","categories":["vue"]},{"title":"前端面试代码：性能优化-防抖和节流","url":"/2022/07/31/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%BB%A3%E7%A0%81%EF%BC%9A%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/","content":"<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>防抖：事件触发过于频繁时，只执行最后一次</p>\n<p>节流：事件触发过于频繁时，控制执行次数</p>\n<p>共同点：都需要设置定时器</p>\n<h2 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h2><p>多次执行的内容，只允许执行最后一次。【需要设置时间，如5s，表示无论这5秒内做了什么，只有到了5秒才执行一次逻辑]</p>\n<p>oninput方法：键入就会执行，输入qian，执行4次</p>\n<h3 id=\"基础用法\"><a href=\"#基础用法\" class=\"headerlink\" title=\"基础用法\"></a>基础用法</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;!-- </span><br><span class=\"line\">        需求：在输入框中打字，控制台输出input中的内容</span><br><span class=\"line\">        抖动：比如输&quot;前&quot;,会打印 q qi qia qian 前 ---- 五次</span><br><span class=\"line\">     --&gt;</span><br><span class=\"line\">  &lt;input type=&quot;text&quot; /&gt;</span><br><span class=\"line\">  &lt;script&gt;</span><br><span class=\"line\">      // 防抖：当用户触发时间过于频繁，只要最后事件的操作</span><br><span class=\"line\">      let inp = document.querySelector(&quot;input&quot;);</span><br><span class=\"line\">      //   防抖方法：比如设置一个事件t=0.5s，当连续打字小于0.5秒不会触发，超过0.5秒才触发</span><br><span class=\"line\">      //   通过setTimeout的方式，在一定的时间间隔内，将多次触发变成一次触发；</span><br><span class=\"line\">      let t = null;</span><br><span class=\"line\">      inp.oninput = function () &#123;</span><br><span class=\"line\">        if (t != null) &#123;</span><br><span class=\"line\">          // t！=null则清除计时器(为了在下次使用计时器前，先清空计时器)</span><br><span class=\"line\">          clearInterval(t);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        // 使用setInterval新建0.5s的计时器（每0.5秒执行一次打印输入框内容的操作）</span><br><span class=\"line\">        t = setInterval(() =&gt; &#123;</span><br><span class=\"line\">          console.log(this.value);</span><br><span class=\"line\">        &#125;, 500);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"改进-业务逻辑-闭包\"><a href=\"#改进-业务逻辑-闭包\" class=\"headerlink\" title=\"改进 - 业务逻辑 闭包\"></a>改进 - 业务逻辑 闭包</h3><p>上一节的代码问题在于：</p>\n<p>1.业务逻辑代码只有一行 <code>console.log(this.value);</code> 其他代码都是防抖代码，而且还有一个全局变量t。看起来代码很混乱</p>\n<p>2.将业务代码和防抖代码放在一起，其他人不方便阅读和理解</p>\n<p>改进：</p>\n<p>将防抖代码封装成一个闭包，返回一个函数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"comment\">// 防抖：当用户触发时间过于频繁，只要最后事件的操作</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"keyword\">let</span> inp = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;input&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">       inp.<span class=\"property\">oninput</span> = <span class=\"title function_\">debounce</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">         <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">value</span>); <span class=\"comment\">// 将业务代码传递给闭包</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">         <span class=\"comment\">// 这个函数的this指向的是window</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">         <span class=\"comment\">// console.log(this);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">       &#125;, <span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">     <span class=\"comment\">//   防抖闭包 [外部函数、内部函数、返回内部函数]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">     <span class=\"comment\">// 由于需要返回一个函数给oninput，因此使用闭包，返回函数的形式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">     <span class=\"keyword\">function</span> <span class=\"title function_\">debounce</span>(<span class=\"params\">fn, delay</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"keyword\">let</span> t = <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">         <span class=\"keyword\">if</span> (t!= <span class=\"literal\">null</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">           <span class=\"built_in\">clearTimeout</span>(t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">         &#125; </span></span><br><span class=\"line\"><span class=\"language-javascript\">         t = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">           <span class=\"comment\">// 这个函数的this指向input</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">           <span class=\"comment\">// console.log(this);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">           <span class=\"comment\">// 改变这个fn的this指向为当前的this也就是input</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">           fn.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">         &#125;, delay)</span></span><br><span class=\"line\"><span class=\"language-javascript\">       &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">     &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">   </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h2><p>当高度超出浏览器最大高度时，会出现滚动条。window.onscroll 方法在每次滚动进度条时都会执行，从上滚到下，可能会执行几百次。故使用节流，控制执行次数，控制为每5秒钟执行一次。</p>\n<h3 id=\"基础用法-1\"><a href=\"#基础用法-1\" class=\"headerlink\" title=\"基础用法\"></a>基础用法</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">2000px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">if</span>(flag) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello world&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    flag = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, <span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            flag = <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"改进-业务逻辑-闭包-1\"><a href=\"#改进-业务逻辑-闭包-1\" class=\"headerlink\" title=\"改进 - 业务逻辑 闭包\"></a>改进 - 业务逻辑 闭包</h3><p>注：这个代码实现后只有打印了一次，不知道为什么</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"title function_\">throttle</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)</span><br><span class=\"line\">&#125;,<span class=\"number\">500</span>)      </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">fn, delay</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            fn.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">            flag = <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;, delay)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    flag = <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>或者</p>\n<p>注：这个代码用了ok</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"title function_\">throttle</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;函数节流&quot;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">throttle</span>(<span class=\"params\">cb, wait = <span class=\"number\">300</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> last = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (now - last &gt; wait) &#123;</span><br><span class=\"line\">            cb.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">            last = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"防抖与节流的比较\"><a href=\"#防抖与节流的比较\" class=\"headerlink\" title=\"防抖与节流的比较\"></a>防抖与节流的比较</h2><h3 id=\"相同点\"><a href=\"#相同点\" class=\"headerlink\" title=\"相同点\"></a>相同点</h3><p>都可以通过使用 setTimeout 实现<br>目的都是，降低回调执行频率，节省计算资源</p>\n<h3 id=\"不同点\"><a href=\"#不同点\" class=\"headerlink\" title=\"不同点\"></a>不同点</h3><p>防抖，在一段连续操作结束后，处理回调，利用clearTimeout 和 setTimeout实现。节流，在一段连续操作中，每一段时间只执行一次，频率较高的事件中使用来提高性能<br>防抖关注一定时间连续触发的事件只在最后执行一次。节流侧重于一段时间内只执行一次<br>应用场景：</p>\n<h3 id=\"函数防抖\"><a href=\"#函数防抖\" class=\"headerlink\" title=\"函数防抖\"></a>函数防抖</h3><p>连续的事件，只需触发一次回调的场景有：</p>\n<p>搜索框搜索输入。只需用户最后一次输入完，再发送请求<br>手机号、邮箱验证输入检测<br>窗口大小Resize。只需窗口调整完成后，计算窗口大小。防止重复渲染</p>\n<h3 id=\"函数节流\"><a href=\"#函数节流\" class=\"headerlink\" title=\"函数节流\"></a>函数节流</h3><p>间隔一段时间执行一次回调的场景有：</p>\n<p>滚动加载，加载更多或滚到底部监听<br>谷歌搜索框，搜索联想功能<br>高频点击提交，表单重复提交<br>参考资料：<a href=\"https://blog.csdn.net/weixin_45654582/article/details/121419851\">https://blog.csdn.net/weixin_45654582/article/details/121419851</a></p>\n<h2 id=\"扩展-JS的两种定时器\"><a href=\"#扩展-JS的两种定时器\" class=\"headerlink\" title=\"扩展 - JS的两种定时器\"></a>扩展 - JS的两种定时器</h2><h3 id=\"执行一次-延时定时器\"><a href=\"#执行一次-延时定时器\" class=\"headerlink\" title=\"执行一次(延时定时器)\"></a>执行一次(延时定时器)</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t1 = <span class=\"variable language_\">window</span>.<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;1秒钟之后执行了&#x27;</span>)</span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"built_in\">clearTimeout</span>(t1)  <span class=\"comment\">// 去除定时器</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重复执行-间歇定时器\"><a href=\"#重复执行-间歇定时器\" class=\"headerlink\" title=\"重复执行(间歇定时器)\"></a>重复执行(间歇定时器)</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t2 = <span class=\"variable language_\">window</span>.<span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;每隔1秒钟执行一次&#x27;</span>)</span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"built_in\">clearInterval</span>(t2)  <span class=\"comment\">// 去除定时器</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>资料：<a href=\"https://blog.csdn.net/u010132177/article/details/120434205\">js中两种定时器，setTimeout(执行一次)、setInterval(执行多次)，实例自动点击某按钮</a></p>\n","categories":["前端面试代码"],"tags":["防抖","节流","面试代码"]},{"title":"前端面试学习1 - 浏览器跨域","url":"/2022/07/14/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%AD%A6%E4%B9%A01-%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F/","content":"<h1 id=\"浏览器跨域\"><a href=\"#浏览器跨域\" class=\"headerlink\" title=\"浏览器跨域\"></a>浏览器跨域</h1><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li><a href=\"https://febook.hzfe.org/awesome-interview/book1/browser-cross-origin\">剑指前端Offer</a></li>\n<li><a href=\"https://blog.csdn.net/hdchangchang/article/details/80112593\">webpack之devServer配置</a></li>\n</ol>\n<h2 id=\"相关问题\"><a href=\"#相关问题\" class=\"headerlink\" title=\"相关问题\"></a>相关问题</h2><ol>\n<li>什么是跨域？</li>\n<li>为什么会跨域？</li>\n<li>为什么有跨域限制？</li>\n</ol>\n<h2 id=\"回答关键点\"><a href=\"#回答关键点\" class=\"headerlink\" title=\"回答关键点\"></a>回答关键点</h2><ol>\n<li>浏览器有跨域限制，服务端没有跨域</li>\n<li><strong>浏览器</strong>为了<strong>请求安全</strong>而引入的<strong>基于同源策略</strong>的安全特性</li>\n</ol>\n<h2 id=\"判定跨域\"><a href=\"#判定跨域\" class=\"headerlink\" title=\"判定跨域\"></a>判定跨域</h2><p>当页面和请求的协议（https）、主机（localhost）或端口（8080）不同时，浏览器判定两者不同源，从而产生跨域。</p>\n<img src=\"/2022/07/14/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E5%AD%A6%E4%B9%A01-%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F/image-20220714151119753.png\" class=\"\" title=\"image-20220714151119753\">\n\n\n\n<h3 id=\"跨域的解决方案\"><a href=\"#跨域的解决方案\" class=\"headerlink\" title=\"跨域的解决方案\"></a>跨域的解决方案</h3><h4 id=\"1-CORS-Cross-Origin-Resource-Sharing\"><a href=\"#1-CORS-Cross-Origin-Resource-Sharing\" class=\"headerlink\" title=\"1.CORS (Cross-Origin Resource Sharing)\"></a>1.CORS (Cross-Origin Resource Sharing)</h4><p>CORS 是目前最为广泛的解决跨域问题的方案。方案依赖<strong>服务端&#x2F;后端在响应头中添加</strong> <code>Access-Control-Allow-*</code> 头，告知浏览器端通过此请求。</p>\n<h4 id=\"2-反向代理\"><a href=\"#2-反向代理\" class=\"headerlink\" title=\"2.反向代理\"></a>2.反向代理</h4><p>反向代理解决跨域问题的方案依赖<code>同源的服务端对请求做一个转发处理</code>，将请求从跨域请求转换成同源请求。</p>\n<h5 id=\"vue实现反向代理的具体实现方式\"><a href=\"#vue实现反向代理的具体实现方式\" class=\"headerlink\" title=\"vue实现反向代理的具体实现方式\"></a>vue实现反向代理的具体实现方式</h5><p>vue.config.js</p>\n<blockquote>\n<p>DevServer 是webpack开发服务器</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 代理配置 - 解决跨域问题（前端和后端接口不在同一域名下</span></span><br><span class=\"line\">  <span class=\"attr\">host</span>: <span class=\"string\">&#x27;0.0.0.0&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">port</span>: port,</span><br><span class=\"line\">  <span class=\"attr\">open</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">overlay</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">errors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;/api&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://192.168.1.13:8080&#x27;</span>, <span class=\"comment\">// 后端接口</span></span><br><span class=\"line\">      <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否跨域</span></span><br><span class=\"line\">      <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;^/api&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>理解</p>\n<blockquote>\n<p>使用本地服务端代理跨域的API后端开发服务器。</p>\n</blockquote>\n<ul>\n<li>假设你主机名为 localhost:8080 , 请求 API 的 url 是 <code>http://192.168.1.13:8080/user/list</code></li>\n<li>‘&#x2F;api：如果点击某个按钮，触发请求 <em>API</em> 事件，这时请求 <em>url</em> 是<code>http://localhost:8080/api/user/list</code></li>\n<li>changeOrigin：如果 true ，那么 <code>http://localhost:8080/api/user/list</code>变为 <code>http://192.168.1.13:8080/api/user/list</code> 。但还不是我们要的 url</li>\n<li>pathRewrite：重写路径。匹配 &#x2F;api ，然后变为’’ ，那么 url 最终为 <code>http://192.168.1.13:8080/user/list </code>。</li>\n</ul>\n<p>总结：本地浏览器请求同源的服务端 <code>http://localhost:8080/api/user/list</code>,本地服务端请求API后端开发服务器，并且根据重写路径，用空字段代替&#x2F;api字段，最终请求到实际的后端开发服务器 <code>http://192.168.1.13:8080/user/list </code></p>\n<p>创建axois实例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个axios实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> service = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;/api&#x27;</span>, <span class=\"comment\">// 设置axios请求的基础的基础地址(通过/api别名指定后端路由)</span></span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">5000</span> <span class=\"comment\">// 定义5秒超时</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n","categories":["前端面试题"],"tags":["浏览器"]},{"title":"华为2016校园招聘上机笔试题","url":"/2022/06/14/%E5%8D%8E%E4%B8%BA2016%E6%A0%A1%E5%9B%AD%E6%8B%9B%E8%81%98%E4%B8%8A%E6%9C%BA%E7%AC%94%E8%AF%95%E9%A2%98/","content":"<p>题目一：老师想知道从某某同学当中，分数最高的是多少，现在请你编程模拟老师的询问。当然，老师有时候需要更新某位同学的成绩.</p>\n<p>反思：题目不难可以用暴力解法，不熟悉 while (sc.hasNext()) 导致一直运行失败。</p>\n<p>学会了什么：以后要把写的代码框在while (sc.hasNext()) {} 中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import java.util.*;</span><br><span class=\"line\">public class Main &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        // 1. 初始化</span><br><span class=\"line\">        Scanner sc = new Scanner(System.in);</span><br><span class=\"line\">        // 不加这一句while 运行不通过，加了以后运行通过</span><br><span class=\"line\">        while (sc.hasNext()) &#123;</span><br><span class=\"line\">            int N = sc.nextInt();</span><br><span class=\"line\">            int M = sc.nextInt();</span><br><span class=\"line\">            int[] grades = new int[N+1];</span><br><span class=\"line\">            grades[0] = -1;</span><br><span class=\"line\">            for (int i = 1; i &lt;= N; i++) &#123;</span><br><span class=\"line\">                grades[i] = sc.nextInt();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sc.nextLine();</span><br><span class=\"line\">            int[][] operator = new int[M][3];</span><br><span class=\"line\">            for (int i = 0; i &lt; M; i++) &#123;</span><br><span class=\"line\">                String line = sc.nextLine();</span><br><span class=\"line\">                String opera = line.split(&quot; &quot;)[0];</span><br><span class=\"line\">                int b = Integer.valueOf(line.split(&quot; &quot;)[1]);</span><br><span class=\"line\">                int c = Integer.valueOf(line.split(&quot; &quot;)[2]);</span><br><span class=\"line\">                if (opera.equals(&quot;Q&quot;)) &#123;</span><br><span class=\"line\">                    System.out.println(getMax(grades, b, c));</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    grades[b] = c;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">            sc.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">    public static int getMax(int[] grades, int start, int end) &#123;</span><br><span class=\"line\">        if (start == end) return grades[start];</span><br><span class=\"line\">        if (start &gt; end) &#123;</span><br><span class=\"line\">            int temp = end;</span><br><span class=\"line\">            end = start;</span><br><span class=\"line\">            start = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int max = grades[start];</span><br><span class=\"line\">        for (int i = start; i &lt;= end; i++) &#123;</span><br><span class=\"line\">            max = Math.max(max, grades[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>题目二：开发一个简单错误记录功能小模块，能够记录出错的代码所在的文件名称和行号。</p>\n<p>反思：着急了题目没读懂。</p>\n<p>输入多行数据，每一行数据表示该文件的错误行数，可能存在一个文件有多个行错误，故匹配多行输入，对于文件名和行数完全相同的记录，最后输出合并为一行，错误次数++</p>\n<p>只记录最后的八条错误记录（输入的最后八行）</p>\n<p>输出中不包含文件路径，如果文件名大于16字符，则截取最后的16字符。</p>\n<p>学到了什么：还没有解决完，不会排序！！！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        HashMap&lt;String,Integer&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedHashMap</span>&lt;&gt;(); </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sc.hasNext()) &#123;</span><br><span class=\"line\">            String[] arr = sc.nextLine().split(<span class=\"string\">&quot;\\\\\\\\&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">nameAndLine</span> <span class=\"operator\">=</span> arr[arr.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.containsKey(nameAndLine)) &#123;</span><br><span class=\"line\">                map.put(nameAndLine, map.get(nameAndLine) + <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                map.put(nameAndLine, <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获取最后八位元素</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String key: map.keySet()) &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (count &gt; map.keySet().size() - <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> key.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">lineNum</span> <span class=\"operator\">=</span> key.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (fileName.length() &gt; <span class=\"number\">16</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 从 key.length() - 16 的后一个元素开始，截取所有字符</span></span><br><span class=\"line\">                    fileName = fileName.substring(key.length() - <span class=\"number\">16</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                System.out.println(fileName + <span class=\"string\">&quot; &quot;</span> + lineNum + <span class=\"string\">&quot; &quot;</span> + map.get(key));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>题目三：扑克牌游戏大家应该都比较熟悉了，一副牌由54张组成，含3~A，2各4张，小王1张，大王1张。牌面从小到大用如下字符和字符串表示（其中，小写joker表示小王，大写JOKER表示大王）3 4 5 6 7 8 9 10 J Q K A 2 joker JOKER</p>\n<p>反思：拿到题目的第一感觉是复杂，需要很多if else，做题时的思绪也是很乱的理不清楚。不能完全沉下心思，浮躁觉得自己不行就得看答案才能解答。总觉得复杂方法用暴力解法就不对，其实没有不对，暴力是最基本的，在暴力之上再考虑其他方法，连暴力都做不出来和谈技巧呢？最后看到答案觉得很简单，除了复杂以外没有其他技巧，按道理来说是能做出来的题目。</p>\n<p>学到了什么：复杂的题目先理清思路，一点点写下来，就算代码敲出来不对了也可以跟答案比较哪一步想错了、哪一步漏掉了，从而提升思维能力，复杂的题目可以分成几个小模块，分别构造辅助函数实现。</p>\n<p>[^思路理清： ]: </p>\n<ol>\n<li>针对两个手牌，需要判断它们的类型（单张、对子、三张、四张牌的炸弹、五张牌的顺子、大小王），如果它们的类型不同，进入操作2</li>\n<li>类型不同时只有炸弹才能比较出大小–通过类型判断（大小王、四张炸弹），否则无法比较大小返回Error</li>\n<li>类型相同时都可以通过第一张牌来比较大小，针对JQKA2jokerJOKER的情况转换成10以后的数字，通过数字比较大小</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sc.hasNext()) &#123;</span><br><span class=\"line\">            String[] card = sc.nextLine().split(<span class=\"string\">&quot;-&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">card1</span> <span class=\"operator\">=</span> card[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">card2</span> <span class=\"operator\">=</span> card[<span class=\"number\">1</span>];</span><br><span class=\"line\">            String[] cards1 = card1.split(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            String[] cards2 = card2.split(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">card1Type</span> <span class=\"operator\">=</span> checkType(cards1);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">card2Type</span> <span class=\"operator\">=</span> checkType(cards2);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!card1Type.equals(card2Type)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (card1Type.equals(<span class=\"string\">&quot;jokers&quot;</span>)) &#123;</span><br><span class=\"line\">                    res = card1;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (card2Type.equals(<span class=\"string\">&quot;jokers&quot;</span>)) &#123;</span><br><span class=\"line\">                    res = card2;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (card1Type.equals(<span class=\"string\">&quot;bomb&quot;</span>)) &#123;</span><br><span class=\"line\">                    res = card1;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (card2Type.equals(<span class=\"string\">&quot;bomb&quot;</span>)) &#123;</span><br><span class=\"line\">                    res = card2;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res = <span class=\"string\">&quot;ERROR&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (getNumber(cards1[<span class=\"number\">0</span>]) &gt; getNumber(cards2[<span class=\"number\">0</span>])) &#123;</span><br><span class=\"line\">                    res = card1;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res = card2;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(res);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getNumber</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.matches(<span class=\"string\">&quot;[3-9]&quot;</span>) || s.matches(<span class=\"string\">&quot;10&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Integer.valueOf(s);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;J&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">11</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;Q&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">12</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;K&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">13</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;A&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">14</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;2&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">15</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;joker&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">16</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;JOKER&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">17</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">checkType</span><span class=\"params\">(String[] card)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">len</span> <span class=\"operator\">=</span> card.length;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (len == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            res = <span class=\"string\">&quot;single&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (len == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (card[<span class=\"number\">0</span>].toLowerCase().matches(<span class=\"string\">&quot;joker&quot;</span>) &amp;&amp; card[<span class=\"number\">1</span>].toLowerCase().matches(<span class=\"string\">&quot;joker&quot;</span>)) &#123;</span><br><span class=\"line\">                res = <span class=\"string\">&quot;jokers&quot;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                res = <span class=\"string\">&quot;double&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (len == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">            res = <span class=\"string\">&quot;triple&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (len == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">            res = <span class=\"string\">&quot;bomb&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res = <span class=\"string\">&quot;shunzi&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["牛客刷题"],"tags":["刷题"]},{"title":"我的第一篇博客文章","url":"/2022/06/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","content":""},{"title":"面试题-回调函数、闭包、回调地狱、Promise、Async、Await、指针函数（this）","url":"/2022/07/31/%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/","content":"<p>h</p>\n<h2 id=\"回调函数\"><a href=\"#回调函数\" class=\"headerlink\" title=\"回调函数\"></a>回调函数</h2><p>【回调函数作为其他函数的参数】</p>\n<p>当一个函数作为另一个函数的参数，传给另一个函数调用，这个作为参数的函数就是回调函数。</p>\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>[将一个函数在另一个函数中定义并返回这个函数] 使用闭包能够访问函数作用域中的变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 函数内部分函数</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">bar</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(++i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将函数做为返回值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> bar;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// fn 即为闭包函数</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> fn = <span class=\"title function_\">foo</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">fn</span>(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<p>闭包：一个作用域有权访问另外一个作用域的局部变量，</p>\n<p>好处：可以把一个变量使用范围延伸</p>\n<ol>\n<li>闭包本质仍是函数，只不是从函数内部返回的</li>\n<li>闭包能够创建外部可访问的隔离作用域，避免全局变量污染</li>\n<li>过度使用闭包可能造成内存泄漏</li>\n</ol>\n<p>注：回调函数也能访问函数内部的局部变量。</p>\n","categories":["前端面试"],"tags":["回调函数","回调地狱","Promise","Async/Await","闭包","this","指针函数"]},{"title":"项目 - PC适配 - vue.config.js","url":"/2022/07/30/%E9%A1%B9%E7%9B%AE-PC%E9%80%82%E9%85%8D-vue-config-js/","content":"<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li>【vue2.0项目PC端随屏幕分辨率与窗口大小自适应】<a href=\"https://blog.csdn.net/weixin_47416539/article/details/125032479\">https://blog.csdn.net/weixin_47416539/article/details/125032479</a></li>\n<li>【vue+px2rem实现pc端大屏自适应(rem适配)】<a href=\"https://codeantenna.com/a/G4TWS25Sdt\">https://codeantenna.com/a/G4TWS25Sdt</a></li>\n</ol>\n<h2 id=\"PC端适配问题\"><a href=\"#PC端适配问题\" class=\"headerlink\" title=\"PC端适配问题\"></a>PC端适配问题</h2><p>用于解决最小化浏览器窗口时，字体和样式大小不变，导致的页面混乱问题。</p>\n<p>解决方式，将px转换为rem</p>\n<h3 id=\"实现步骤\"><a href=\"#实现步骤\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h3><h4 id=\"在根目录src中新建utils目录下新建rem-js等比适配文件\"><a href=\"#在根目录src中新建utils目录下新建rem-js等比适配文件\" class=\"headerlink\" title=\"在根目录src中新建utils目录下新建rem.js等比适配文件\"></a>在根目录src中新建utils目录下新建rem.js等比适配文件</h4><p>我使用的最大放大比例为1 ，呵呵，效果不错！需要自己调试，选出一个合适的值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// rem等比适配配置文件</span></span><br><span class=\"line\"><span class=\"comment\">// 基准大小</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseSize = <span class=\"number\">16</span></span><br><span class=\"line\"><span class=\"comment\">// 设置 rem 函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setRem</span> () &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 当前页面屏幕分辨率相对于 1920宽的缩放比例，可根据自己需要修改</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> scale = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span> / <span class=\"number\">1920</span></span><br><span class=\"line\">  <span class=\"comment\">// 设置页面根节点字体大小（“Math.min(scale, 2)” 指最高放大比例为2，可根据实际业务需求调整）</span></span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = baseSize * <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(scale, <span class=\"number\">1</span>) + <span class=\"string\">&#x27;px&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 初始化</span></span><br><span class=\"line\"><span class=\"title function_\">setRem</span>()</span><br><span class=\"line\"><span class=\"comment\">// 改变窗口大小时重新设置 rem</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setRem</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在main-js中引入适配文件\"><a href=\"#在main-js中引入适配文件\" class=\"headerlink\" title=\"在main.js中引入适配文件\"></a>在main.js中引入适配文件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#x27;./utils/rem.js&#x27;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装postcss-pxtorem\"><a href=\"#安装postcss-pxtorem\" class=\"headerlink\" title=\"安装postcss-pxtorem\"></a>安装postcss-pxtorem</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i postcss-pxtorem@5.1.1 -D</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在vue-config-js内配置\"><a href=\"#在vue-config-js内配置\" class=\"headerlink\" title=\"在vue.config.js内配置\"></a>在vue.config.js内配置</h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">css</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">loaderOptions</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">postcss</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">                  <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;postcss-pxtorem&#x27;</span>)(&#123;</span><br><span class=\"line\">                    rootValue : <span class=\"number\">16</span>, <span class=\"comment\">// 换算的基数</span></span><br><span class=\"line\">                    selectorBlackList  : [], <span class=\"comment\">// 忽略转换正则匹配项 列入一些ui库, [&#x27;.el&#x27;] 就是忽略elementUI库</span></span><br><span class=\"line\">                    propList   : [<span class=\"string\">&#x27;*&#x27;</span>],</span><br><span class=\"line\">                  &#125;),</span><br><span class=\"line\">                ]</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"PC端禁止用户缩放页面\"><a href=\"#PC端禁止用户缩放页面\" class=\"headerlink\" title=\"PC端禁止用户缩放页面\"></a>PC端禁止用户缩放页面</h2><p>用于禁止移动端双指缩放页面，和PC端ctrl+滚轮缩放页面</p>\n<h3 id=\"实现步骤-1\"><a href=\"#实现步骤-1\" class=\"headerlink\" title=\"实现步骤\"></a>实现步骤</h3><h4 id=\"对于移动端\"><a href=\"#对于移动端\" class=\"headerlink\" title=\"对于移动端\"></a>对于移动端</h4><p>‘可以在<a href=\"https://so.csdn.net/so/search?q=index&spm=1001.2101.3001.7020\">index</a>.html中增加如下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0, user-scalable=no&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"对于PC端：禁止ctrl-鼠标滚轮缩放\"><a href=\"#对于PC端：禁止ctrl-鼠标滚轮缩放\" class=\"headerlink\" title=\"对于PC端：禁止ctrl+鼠标滚轮缩放\"></a>对于PC端：禁止ctrl+鼠标滚轮缩放</h4><p>可以在<a href=\"https://so.csdn.net/so/search?q=index&spm=1001.2101.3001.7020\">index</a>.html中增加如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mousewheel&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">      e = e || <span class=\"variable language_\">window</span>.<span class=\"property\">event</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((e.<span class=\"property\">wheelDelta</span> &amp;&amp; event.<span class=\"property\">ctrlKey</span>) || e.<span class=\"property\">detail</span>) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;, &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"attr\">capture</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"attr\">passive</span>: <span class=\"literal\">false</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keydown&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((event.<span class=\"property\">ctrlKey</span> === <span class=\"literal\">true</span> || event.<span class=\"property\">metaKey</span> === <span class=\"literal\">true</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">        &amp;&amp; (event.<span class=\"property\">keyCode</span> === <span class=\"number\">61</span> || event.<span class=\"property\">keyCode</span> === <span class=\"number\">107</span></span><br><span class=\"line\"> </span><br><span class=\"line\">          || event.<span class=\"property\">keyCode</span> === <span class=\"number\">173</span> || event.<span class=\"property\">keyCode</span> === <span class=\"number\">109</span></span><br><span class=\"line\"> </span><br><span class=\"line\">          || event.<span class=\"property\">keyCode</span> === <span class=\"number\">187</span> || event.<span class=\"property\">keyCode</span> === <span class=\"number\">189</span>)) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        event.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":["项目知识"],"tags":["屏幕适配","缩放页面","移动端","PC端"]},{"title":"牛客前端编程题-零基础入门","url":"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/","content":"<h3 id=\"基础入门\"><a href=\"#基础入门\" class=\"headerlink\" title=\"基础入门\"></a>基础入门</h3><h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><h5 id=\"FED1-表单类型\"><a href=\"#FED1-表单类型\" class=\"headerlink\" title=\"FED1 表单类型\"></a><strong>FED1</strong> <strong>表单类型</strong></h5><p>请依次写出以下类型的输入框。</p>\n<ol>\n<li>类型为密码，默认值为”nowcoder”</li>\n<li>类型为复选框，且状态为已勾选</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 密码输入框 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;nowcoder&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 复选框， 默认勾选 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">checked</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828100337155.png\" class=\"\" title=\"image-20220828100337155\">\n\n<h5 id=\"FED2-表格结构\"><a href=\"#FED2-表格结构\" class=\"headerlink\" title=\"FED2 表格结构\"></a><strong>FED2</strong> <strong>表格结构</strong></h5><p>请写出具有表格标题为”nowcoder”的2行3列表格结构。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- caption  表格标题 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">      nowcoder</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 两行 tr 三列 td 的表格 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>11<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>12<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>13<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>21<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>22<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>23<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828100427344.png\" class=\"\" title=\"image-20220828100427344\">\n\n<h5 id=\"FED3-图像标签属性\"><a href=\"#FED3-图像标签属性\" class=\"headerlink\" title=\"FED3 图像标签属性\"></a><strong>FED3</strong> <strong>图像标签属性</strong></h5><p>请写出具有标题属性和代替文本属性的图片标签。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- title是全局属性，提供额外的提示信息，当鼠标滑动到该元素时，显示定义的提示。 --&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- alt是局部属性，尽可以用在img、input等元素中，提供在图片为载入或加载失败时的替代文本。 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;代替文本&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;标签属性&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828100153130.png\" class=\"\" title=\"image-20220828100153130\">\n\n<h5 id=\"FED4-新窗口打开文档\"><a href=\"#FED4-新窗口打开文档\" class=\"headerlink\" title=\"FED4 新窗口打开文档\"></a><strong>FED4</strong> <strong>新窗口打开文档</strong></h5><p>请写出可以在新窗口打开文档的a标签。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--  target=&quot;_blank&quot; 新打开一个页面，该页面为 http:// 空页面 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span> 打开窗口 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 过 target=&quot;_blank&quot; 打开的新窗口，跟原来的页面窗口共用一个进程。如果这个新页面执行了一大堆性能不好的 JavaScript 代码，</span></span><br><span class=\"line\"><span class=\"comment\">    占用了大量系统资源，那你原来的页面也会受到池鱼之殃。</span></span><br><span class=\"line\"><span class=\"comment\">   需要加上 rel=&quot;noopener&quot; 或者 rel=&quot;noreferrer&quot;。这样新窗口的 window.opener 就是 null 了，</span></span><br><span class=\"line\"><span class=\"comment\">   而且会让新窗口运行在独立的进程里，不会拖累原来页面的进程。--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://www.baidu.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;noreferrer&quot;</span>&gt;</span>去百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828101048507.png\" class=\"\" title=\"image-20220828101048507\">\n\n<h5 id=\"FED5-自定义列表\"><a href=\"#FED5-自定义列表\" class=\"headerlink\" title=\"FED5 自定义列表\"></a><strong>FED5</strong> <strong>自定义列表</strong></h5><p>请写出列表项为”nowcoder”且列表项内容也为”nowcoder”的自定义列表。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 自定义列表 dl ; 列表项 dt ；列表项描述 dd --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>nowcoder<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>nowcoder<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828101553118.png\" class=\"\" title=\"image-20220828101553118\">\n\n<p>扩展：无序列表、有序列表、自定义列表</p>\n<p><strong>有序列表：</strong><ol> 表示有序列表，<li> 表示列表中的每一项，有序列表的前缀可以是大写字母和小写字母、数字、罗马数字等，默认使用阿拉伯数字编号。</p>\n<p><strong>无序列表：</strong><ul> 表示无序列表，配合 <li> 实现，无序列表的前缀可以是实心圆、空心圆、实心正方形，默认使用实心圆符号显示。</p>\n<p><strong>定义列表：</strong><dl> 与<dt>、<dd> 配合实现，<dt> 充当列表的标题，<dd> 是对 <dt> 的解释说明。自定义列表没有前缀，但有缩进。</p>\n<p><a href=\"https://baijiahao.baidu.com/s?id=1697352745558962922&wfr=spider&for=pc\">HTML中有序列表、无序列表、自定义列表的使用及三者之间的区别</a></p>\n<h5 id=\"FED73-加粗文字\"><a href=\"#FED73-加粗文字\" class=\"headerlink\" title=\"FED73 加粗文字\"></a><strong>FED73</strong> <strong>加粗文字</strong></h5><p>使用一个标签将“牛客网”三个字加粗显示</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> p = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;p&#x27;</span>)[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 获取第一个p元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  p.<span class=\"property\">innerHTML</span> = p.<span class=\"property\">innerText</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;牛客网&#x27;</span>, <span class=\"string\">&#x27;&lt;strong&gt;牛客网&lt;/strong&gt;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 用加上&lt;strong&gt;标签的文本替换</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 加粗文字  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>牛客网<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>，程序员必备求职神器<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>扩展：<a href=\"https://zhuanlan.zhihu.com/p/162718795\">innerHTML和innerText的使用和区别</a></p>\n<h5 id=\"FED6-语义化标签\"><a href=\"#FED6-语义化标签\" class=\"headerlink\" title=\"FED6 语义化标签\"></a><strong>FED6</strong> 语义化标签</h5><p>请使用语义化标签创建头部标签且包含导航标签。<br>注意：只需在html模块填写标签结构，有且仅有一个头部标签和一个导航标签。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 语义化标签 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span>导航<span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED7-音频媒体标签属性\"><a href=\"#FED7-音频媒体标签属性\" class=\"headerlink\" title=\"FED7 音频媒体标签属性\"></a>FED7 音频媒体标签属性</h5><p>请写出具有控件功能的音频媒体标签。必须有 <code>controls</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;s.mp3&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;audio/mp3&quot;</span>/&gt;</span></span><br><span class=\"line\">    audio</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828120402260.png\" class=\"\" title=\"image-20220828120402260\">\n\n<h5 id=\"FED8-视频媒体标签属性\"><a href=\"#FED8-视频媒体标签属性\" class=\"headerlink\" title=\"FED8 视频媒体标签属性\"></a>FED8 视频媒体标签属性</h5><p>请写出具有当视频的媒体数据加载期间发生错误时执行某个方法事件的视频媒体标签。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span> <span class=\"attr\">onerror</span>=<span class=\"string\">&quot;a()&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;movie.mp4&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/mp4&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828120543075.png\" class=\"\" title=\"image-20220828120543075\">\n\n\n\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><h5 id=\"FED9-CSS选择器——标签、类、ID选择器\"><a href=\"#FED9-CSS选择器——标签、类、ID选择器\" class=\"headerlink\" title=\"FED9 CSS选择器——标签、类、ID选择器\"></a>FED9 CSS选择器——标签、类、ID选择器</h5><p>请将html模块中字体内容是”红色”的字体颜色设置为”rgb(255, 0, 0)”，”绿色”设置为”rgb(0, 128, 0)”，”黑色”设置为”rgb(0, 0, 0)”，且字体大小都为20px。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">font-size</span>:<span class=\"number\">20px</span></span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">1</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">color</span>:<span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-class\">.green</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">color</span>:<span class=\"built_in\">rgb</span>(<span class=\"number\">0</span>, <span class=\"number\">128</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-id\">#black</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">color</span>:<span class=\"built_in\">rgb</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> &gt;</span>红色<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;green&#x27;</span>&gt;</span>绿色<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;black&#x27;</span>&gt;</span>黑色<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED10-CSS选择器——伪类选择器\"><a href=\"#FED10-CSS选择器——伪类选择器\" class=\"headerlink\" title=\"FED10 CSS选择器——伪类选择器\"></a>FED10 CSS选择器——伪类选择器</h5><p>请将html模块中ul列表的第2个li标签和第4个li标签的背景颜色设置成”rgb(255, 0, 0)”。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n)&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED11-CSS选择器——伪元素\"><a href=\"#FED11-CSS选择器——伪元素\" class=\"headerlink\" title=\"FED11 CSS选择器——伪元素\"></a>FED11 CSS选择器——伪元素</h5><p>请给html模块的div元素加一个后伪元素，且后伪元素的宽度和高度都是20px，背景颜色为”rgb(255, 0, 0)”。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">          <span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">::after</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 不设置 content 属性，不显示元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 伪元素天生是行级元素所以要加display:block;来改变伪元素的行级元素结构 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 不设置 display 属性，不显示该元素 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828121721252.png\" class=\"\" title=\"image-20220828121721252\">\n\n<h5 id=\"FED12-按要求写一个圆\"><a href=\"#FED12-按要求写一个圆\" class=\"headerlink\" title=\"FED12 按要求写一个圆\"></a>FED12 按要求写一个圆</h5><p>请将html模块的div元素设置为一个半径是50px的圆，且边框为1px的黑色实线。<br>要求：</p>\n<ol>\n<li>圆角属性仅设置一个值</li>\n<li>圆角属性单位请使用px<br>注意：由于圆角属性设置广泛且都可以实现题目效果，所以请按照要求规范书写。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">              <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"comment\">/* border-radius: 50%; 也可以 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">              &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828122120881.png\" class=\"\" title=\"image-20220828122120881\">\n\n<h5 id=\"FED13-设置盒子宽高\"><a href=\"#FED13-设置盒子宽高\" class=\"headerlink\" title=\"FED13 设置盒子宽高\"></a>FED13 设置盒子宽高</h5><p>请将html模块类为”box”的div元素宽度和高度都设置为100px，且内间距为20px、外间距为10px。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 内边距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 外边距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED74-段落标识\"><a href=\"#FED74-段落标识\" class=\"headerlink\" title=\"FED74 段落标识\"></a>FED74 段落标识</h5><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- script 一定要放在 body 下面，不然获取不到 DOM元素  --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 方法一：innerHTML --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> par = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;body&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(par)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    par.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;&lt;p&gt;牛客网是一个专注于程序员的学习和成长的专业平台。&lt;/p&gt;&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 方法二：createElement 创建 DOM元素  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1 创建 p 标签节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> p = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;p&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 2 创建文本节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> text = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createTextNode</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&#x27;牛客网是一个专注于程序员的学习和成长的专业平台。&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    )</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 3 把文件节点加入p标签中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    p.<span class=\"title function_\">appendChild</span>(text)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 4 把 p 标签追加到 body 上</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(p)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED75-设置文字颜色\"><a href=\"#FED75-设置文字颜色\" class=\"headerlink\" title=\"FED75 设置文字颜色\"></a><strong>FED75</strong> <strong>设置文字颜色</strong></h5><p>请使用嵌入样式将所有p标签设置为红色文字</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>欢迎来到牛客网<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>在这里，我们为你提供了IT名企的笔试面试题库<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>在这里，我们以题会友<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> pArr = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;p&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    pArr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      item.<span class=\"property\">style</span>.<span class=\"property\">color</span> = <span class=\"string\">&#x27;red&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED76-圣诞树\"><a href=\"#FED76-圣诞树\" class=\"headerlink\" title=\"FED76 圣诞树\"></a><strong>FED76</strong> <strong>圣诞树</strong></h5><p>圣诞节来啦！请用CSS给你的朋友们制作一颗圣诞树吧~这颗圣诞树描述起来是这样的：<br>\\1. “topbranch”是圣诞树的上枝叶，该上枝叶仅通过边框属性、左浮动、左外边距即可实现。边框的属性依次是：宽度为100px、是直线、颜色为green（未显示的边框颜色都为透明）<br>\\2. “middleBranch”是圣诞树的中枝叶，该上枝叶仅通过边框属性即可实现。边框的属性依次是：宽度为200px、是直线、颜色为green（未显示的边框颜色都为透明）<br>\\3. “base”是圣诞树的树干，该树干仅通过左外边距实现居中于中枝叶。树干的宽度、高度分别为70px、200px，颜色为gray。<br>注意：<br>\\1. 上枝叶、树干的居中都是通过左外边距实现的<br>\\2. 没有显示的边框，其属性都是透明（属性）<br>\\3. 仅通过<strong>border属性</strong>完成边框的所有属性设置</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">  <span class=\"selector-class\">.topbranch</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            * <span class=\"doctag\">TODO:</span> 上枝叶效果</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">    <span class=\"comment\">/* 只有上面的树叶脱离文档流，下面树叶才会上移 */</span></span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">100px</span> solid green;</span><br><span class=\"line\">    <span class=\"attribute\">border-left-color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-top-color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.middleBranch</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            * <span class=\"doctag\">TODO:</span> 中枝叶效果</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">200px</span> solid green;</span><br><span class=\"line\">    <span class=\"attribute\">border-left-color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-top-color</span>: transparent;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.base</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            * <span class=\"doctag\">TODO:</span> 树干效果</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: gray;</span><br><span class=\"line\">    <span class=\"comment\">/* 200中间枝叶的一半 - 树枝的一半 35px */</span></span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">165px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;topbranch&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;middleBranch&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;base&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828125007324.png\" class=\"\" title=\"image-20220828125007324\">\n\n<h5 id=\"FED14-浮动和清除浮动\"><a href=\"#FED14-浮动和清除浮动\" class=\"headerlink\" title=\"FED14 浮动和清除浮动\"></a>FED14 浮动和清除浮动</h5><p>请将类为”left”的div元素和类为”right”的div元素在同一行上向左浮动，且清除类为”wrap”的父级div元素内部的浮动。</p>\n<p>父盒子的高度由子节点撑开，宽度默认为整个屏幕</p>\n<blockquote>\n<p>当子元素浮动时，父盒子没有高度,这样子元素不会撑开父盒子的高度,父盒子高度为0。</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">  <span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*补全代码*/</span></span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">    <span class=\"comment\">/*通过实现 BFC 清除浮动 */</span></span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"comment\">/*补全代码*/</span></span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: pink;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"comment\">/*补全代码*/</span></span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: green;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>浮动前</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828125234965.png\" class=\"\" title=\"image-20220828125234965\">\n\n<p>当两个孩子节点都左浮动后，父盒子没有高度了</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828125642275.png\" class=\"\" title=\"image-20220828125642275\">\n\n<p>方法一：新增一个div孩子，样式清除浮动，但是需要多加一个节点</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">   .clear &#123;</span><br><span class=\"line\">   \tclear: both;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrap&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clear&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>方法二：触发父盒子的 BFC </p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*补全代码*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">  <span class=\"comment\">/*通过实现 BFC 清除浮动 */</span></span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>清除浮动后</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828130045782.png\" class=\"\" title=\"image-20220828130045782\">\n\n<h5 id=\"FED15-固定定位\"><a href=\"#FED15-固定定位\" class=\"headerlink\" title=\"FED15 固定定位\"></a>FED15 固定定位</h5><p>请将html模块类为”box”的div元素固定在视口的左上角。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828130459664.png\" class=\"\" title=\"image-20220828130459664\">\n\n<h5 id=\"FED18-CSS单位（一）\"><a href=\"#FED18-CSS单位（一）\" class=\"headerlink\" title=\"FED18 CSS单位（一）\"></a>FED18 CSS单位（一）</h5><p>请将html模块中类为”box”的div元素的宽度和高度设置为自身字体大小的4倍。</p>\n<blockquote>\n<p>考点：    </p>\n<p>em:默认基准点为父元素的字体大小，如果自身定义了字体大小，则按照自身来计算 ,若当前尺寸为10px,即1em&#x3D;10px,则2em&#x3D;20px;</p>\n<p>rem:相对于根元素 html 的字体大小</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">4em</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">4em</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED19-CSS单位（二）\"><a href=\"#FED19-CSS单位（二）\" class=\"headerlink\" title=\"FED19 CSS单位（二）\"></a><strong>FED19</strong> <strong>CSS单位（二）</strong></h5><p>请将html模块div元素的宽度和高度设置为html根元素字体大小的4倍。<br>注意：只需在css模块补全样式内容，请勿修改html模块。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">div</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">4rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">4rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><em>在html5中,默认字体大小是根据浏览器的不同来决定的,多数浏览器的默认字体大小为16px</em>;</p>\n<h4 id=\"ES5\"><a href=\"#ES5\" class=\"headerlink\" title=\"ES5\"></a>ES5</h4><h5 id=\"FED20-基本数据类型检测\"><a href=\"#FED20-基本数据类型检测\" class=\"headerlink\" title=\"FED20 基本数据类型检测\"></a>FED20 基本数据类型检测</h5><p>请补全JavaScript函数，要求以字符串的形式返回参数的类型。<br>注意：只需检测基本数据类型。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_typeof</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\"><span class=\"title function_\">_typeof</span>(<span class=\"number\">1</span>) <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"title function_\">_typeof</span>(<span class=\"literal\">true</span>) <span class=\"comment\">// boolean</span></span><br><span class=\"line\"><span class=\"title function_\">_typeof</span>(<span class=\"string\">&#x27;1&#x27;</span>) <span class=\"comment\">// string</span></span><br><span class=\"line\"><span class=\"title function_\">_typeof</span>([]) <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"title function_\">_typeof</span>(&#123;&#125;) <span class=\"comment\">// object</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"FED21-检测复杂数据类型\"><a href=\"#FED21-检测复杂数据类型\" class=\"headerlink\" title=\"FED21 检测复杂数据类型\"></a>FED21 检测复杂数据类型</h5><p>请补全JavaScript函数，要求以Boolean的形式返回第一个参数是否属于第二个参数对象的实例。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_instanceof</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(left <span class=\"keyword\">instanceof</span> right)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> left <span class=\"keyword\">instanceof</span> right</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//  测试</span></span><br><span class=\"line\"><span class=\"comment\">// instanceof判断一个对象是否是另一个对象的实例，而数字1是基本数据类型，不是对象</span></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>(<span class=\"number\">1</span>, <span class=\"title class_\">Number</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Number</span>(<span class=\"number\">1</span>), <span class=\"title class_\">Number</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>(<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"title class_\">String</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&#x27;1&#x27;</span>), <span class=\"title class_\">String</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>(<span class=\"literal\">true</span>, <span class=\"title class_\">Boolean</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Boolean</span>(<span class=\"literal\">true</span>), <span class=\"title class_\">Boolean</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>([], <span class=\"title class_\">Array</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>([], <span class=\"title class_\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">_instanceof</span>(&#123;&#125;, <span class=\"title class_\">Object</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a === <span class=\"string\">&#x27;undefined&#x27;</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">typeof</span> a !== <span class=\"string\">&#x27;undefined&#x27;</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>扩展： typeof 和 instance 的区别</p>\n<p>typeof: typeof是一个一元运算符，放在一个运算数之前，返回值是一个字符串，说明运算数的类型。可以使用typeof来确定一个变量是否存在。如：if(typeof(a)!&#x3D;“undefined”)。</p>\n<p><code>if(typeof a !== “undefined”)</code> &#x2F;&#x2F; true or false</p>\n<p>instance 无论是什么引用类型 typeof 得值都是object，这时候就需要instanceof来检测某个对象是不是另一个对象的实例。<strong>instanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的prototype属性。用于判断一个变量是否某个对象的实例</strong>。</p>\n<h5 id=\"FED22-数据类型转换\"><a href=\"#FED22-数据类型转换\" class=\"headerlink\" title=\"FED22 数据类型转换\"></a>FED22 数据类型转换</h5><p>请补全JavaScript函数，要求以字符串的形式返回两个数字参数的拼接结果。<br>示例：</p>\n<ol>\n<li>_splice(223,233) -&gt; “223233”</li>\n<li>_splice(-223,-233) -&gt; “-223-233”</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_splice</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> left.<span class=\"title function_\">toString</span>() + right.<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">  <span class=\"comment\">// 或者 return String(left)+String(right)</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">_splice</span>(<span class=\"number\">233</span>, <span class=\"number\">233</span>)) <span class=\"comment\">// 233233</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">_splice</span>(-<span class=\"number\">233</span>, -<span class=\"number\">233</span>)) <span class=\"comment\">// -233-233</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED23-阶乘\"><a href=\"#FED23-阶乘\" class=\"headerlink\" title=\"FED23 阶乘\"></a>FED23 阶乘</h5><p>请补全JavaScript函数，要求返回数字参数的阶乘。<br>注意：参数为大于等于0的整数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_factorial</span>(<span class=\"params\">number</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (number !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    res *= number</span><br><span class=\"line\">    number--</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED24-绝对值\"><a href=\"#FED24-绝对值\" class=\"headerlink\" title=\"FED24 绝对值\"></a>FED24 绝对值</h5><p>请补全JavaScript函数，要求返回数字参数的绝对值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_abs</span>(<span class=\"params\">number</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(number)</span><br><span class=\"line\">  <span class=\"comment\">// 或者 return number&gt;0 ? number : -number</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED58-移除数组中的元素\"><a href=\"#FED58-移除数组中的元素\" class=\"headerlink\" title=\"FED58 移除数组中的元素\"></a><strong>FED58</strong> <strong>移除数组中的元素</strong></h5><p>移除数组 arr 中的所有值与 item 相等的元素，直接在给定的 arr 数组上进行操作，并将结果数组返回</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">removeWithoutCopy</span>(<span class=\"params\">arr, item</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; ) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr[i] === item) &#123;</span><br><span class=\"line\">      arr.<span class=\"title function_\">splice</span>(i, <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      i++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> item = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">removeWithoutCopy</span>(arr, item)) <span class=\"comment\">//[ 1, 3, 4 ]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"FED28-返回星期数\"><a href=\"#FED28-返回星期数\" class=\"headerlink\" title=\"FED28 返回星期数\"></a>FED28 返回星期数</h5><p>请补全JavaScript函数，要求以字符串的形式返回数字参数所对应的星期。<br>示例：<br>\\1. _getday(1) -&gt; “星期一”<br>\\2. _getday(7) -&gt; “星期天”</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_getday</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (value) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;星期一&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;星期二&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;星期三&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;星期四&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;星期五&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;星期六&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;星期天&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">null</span> <span class=\"comment\">// 如果没有与表达式相同的值，则执行该代码</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_getday</span>(<span class=\"params\">value</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [<span class=\"string\">&#x27;天&#x27;</span>, <span class=\"string\">&#x27;一&#x27;</span>, <span class=\"string\">&#x27;二&#x27;</span>, <span class=\"string\">&#x27;三&#x27;</span>, <span class=\"string\">&#x27;四&#x27;</span>, <span class=\"string\">&#x27;五&#x27;</span>, <span class=\"string\">&#x27;六&#x27;</span>]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`星期<span class=\"subst\">$&#123;arr[value % <span class=\"number\">7</span>]&#125;</span>`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"ED30-大写字符串\"><a href=\"#ED30-大写字符串\" class=\"headerlink\" title=\"ED30 大写字符串\"></a><strong>ED30</strong> <strong>大写字符串</strong></h5><p>请补全JavaScript函数，要求将字符串参数转换为大写字符串并返回。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_touppercase</span>(<span class=\"params\">string</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> string.<span class=\"title function_\">toUpperCase</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>FED31</strong> <strong>对象属性键名</strong></p>\n<p>请补全JavaScript函数，要求以数组的形式输出对象各个属性的键名。<br>示例：<br>\\1. _keys({name:’nowcoder’,age:7}) -&gt; [‘name’,’age’]<br>注意：只需考虑对象属性均为原始数据类型的情况。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_keys</span>(<span class=\"params\">object</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"comment\">// 方法一</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = []</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(key)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 方法二</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(object)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> object = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;nowcoder&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">7</span> &#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">_keys</span>(object))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED34-去除字符串两端空格\"><a href=\"#FED34-去除字符串两端空格\" class=\"headerlink\" title=\"FED34 去除字符串两端空格\"></a><strong>FED34</strong> <strong>去除字符串两端空格</strong></h5><p>请补全JavaScript函数，要求去除参数字符串两端的空格并返回。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">function _trim(string) &#123;</span><br><span class=\"line\">    // 补全代码</span><br><span class=\"line\">    return string.trim()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>FED35</strong> <strong>输出日期</strong></p>\n<p>请补全JavaScript函数，要求以字符串的形式输出时间戳参数所对应的”年-月-日”。<br>示例：<br>\\1. _date(1631159776311) -&gt; ‘2021-9-9’</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_date</span>(<span class=\"params\">number</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(number) </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;date.getFullYear()&#125;</span>-<span class=\"subst\">$&#123;date.getMonth() + <span class=\"number\">1</span>&#125;</span>-<span class=\"subst\">$&#123;date.getDate()&#125;</span>`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED37-数组反转\"><a href=\"#FED37-数组反转\" class=\"headerlink\" title=\"FED37 数组反转\"></a><strong>FED37</strong> <strong>数组反转</strong></h5><p>请补全JavaScript函数，要求将参数数组反转之后返回。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_reverse</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> array.<span class=\"title function_\">reverse</span>(array)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED39-数组最大值\"><a href=\"#FED39-数组最大值\" class=\"headerlink\" title=\"FED39 数组最大值\"></a><strong>FED39</strong> <strong>数组最大值</strong></h5><p>请补全JavaScript函数，要求找到数组参数中的最大值并返回。<br>注意：数组中只包含数字。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_max</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = array.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>b - a)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[<span class=\"number\">0</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"FED40-搜索数字\"><a href=\"#FED40-搜索数字\" class=\"headerlink\" title=\"FED40 搜索数字\"></a><strong>FED40</strong> <strong>搜索数字</strong></h5><p>请补全JavaScript函数，要求以boolean的形式返回字符串参数中是否包含数字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_search</span>(<span class=\"params\">string</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> string.<span class=\"title function_\">search</span>(<span class=\"regexp\">/[0-9]/</span>) &gt;= <span class=\"number\">0</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED45-整数反转\"><a href=\"#FED45-整数反转\" class=\"headerlink\" title=\"FED45 整数反转\"></a><strong>FED45</strong> <strong>整数反转</strong></h5><p>请补全JavaScript函数，要求将整数参数反转之后输出。<br>示例：<br>\\1. _reverse(0) -&gt; 0<br>\\2. _reverse(233) -&gt; 332<br>\\3. _reverse(-223) -&gt; -322</p>\n<h5 id=\"FED59-添加元素\"><a href=\"#FED59-添加元素\" class=\"headerlink\" title=\"FED59 添加元素\"></a><strong>FED59</strong> <strong>添加元素</strong></h5><p>在数组 arr 末尾添加元素 item。结果返回新的数组。</p>\n<p>注意：不要直接修改数组 arr!!!   push() 会改变原数组</p>\n<p>输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[1, 2, 3, 4],  10</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[1, 2, 3, 4, 10]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">append</span>(<span class=\"params\">arr, item</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"title function_\">concat</span>([item])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>FED60</strong> <strong>删除数组最后一个元素</strong></p>\n<p>删除数组 arr 最后一个元素。不要直接修改数组 arr，结果返回新的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">truncate</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>,arr.<span class=\"property\">length</span> - <span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED61-添加元素\"><a href=\"#FED61-添加元素\" class=\"headerlink\" title=\"FED61 添加元素\"></a><strong>FED61</strong> <strong>添加元素</strong></h5><p>在数组 arr 开头添加元素 item。不要直接修改数组 arr，结果返回新的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">prepend</span>(<span class=\"params\">arr, item</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = arr.<span class=\"title function_\">slice</span>()</span><br><span class=\"line\">    res.<span class=\"title function_\">unshift</span>(item)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>FED62</strong> <strong>删除数组第一个元素</strong></p>\n<p>删除数组 arr 第一个元素。不要直接修改数组 arr，结果返回新的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">curtail</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = arr.<span class=\"title function_\">slice</span>()</span><br><span class=\"line\">    res.<span class=\"title function_\">shift</span>()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>FED63</strong> <strong>数组合并</strong></p>\n<p>合并数组 arr1 和数组 arr2。不要直接修改数组 arr，结果返回新的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">concat</span>(<span class=\"params\">arr1, arr2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = arr1.<span class=\"title function_\">concat</span>(arr2)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输入：</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">输出：</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED64-添加元素\"><a href=\"#FED64-添加元素\" class=\"headerlink\" title=\"FED64 添加元素\"></a><strong>FED64</strong> <strong>添加元素</strong></h5><p>在数组 arr 的 index 处添加元素 item。不要直接修改数组 arr，结果返回新的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">insert</span>(<span class=\"params\">arr, item, index</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = arr.<span class=\"title function_\">slice</span>()</span><br><span class=\"line\">  <span class=\"comment\">// res 数组 从index位置，删除0个元素，加入 item</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果返回 res.splice 返回的是被删除的元素组成的数组</span></span><br><span class=\"line\">  res.<span class=\"title function_\">splice</span>(index, <span class=\"number\">0</span>, item)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">insert</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"string\">&#x27;z&#x27;</span>, <span class=\"number\">2</span>)) <span class=\"comment\">// [ 1, 2, &#x27;z&#x27;, 3, 4 ]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED66-查找元素位置\"><a href=\"#FED66-查找元素位置\" class=\"headerlink\" title=\"FED66 查找元素位置\"></a>FED66 查找元素位置</h5><p>在数组 arr 中，查找值与 item 相等的元素出现的所有位置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findAllOccurrences</span>(<span class=\"params\">arr, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr2 = []</span><br><span class=\"line\">    arr.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item, index</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(item == target)&#123;</span><br><span class=\"line\">            arr2.<span class=\"title function_\">push</span>(index)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED68-正确的使用-parseInt\"><a href=\"#FED68-正确的使用-parseInt\" class=\"headerlink\" title=\"FED68 正确的使用 parseInt\"></a><strong>FED68</strong> <strong>正确的使用 parseInt</strong></h5><p>扩展： 进制转换</p>\n<p>parseInt ( number, 进制数 ); 将任意进制 转换 为十进制</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">010</span>,<span class=\"number\">2</span>)  <span class=\"comment\">// NaN  这是因为0开头的会被认为是八进制或十六进制</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">10</span>,<span class=\"number\">2</span>)   <span class=\"comment\">// 2   把二进制的10转为十进制 == 2</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"number\">14</span>,<span class=\"number\">8</span>)   <span class=\"comment\">// 12  把八进制的14转为十进制 == 12</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>(num).toString (进制数)； 将十进制数字转换为任意进制</p>\n<p>强调一下：后一个参数是转换的目标进制</p>\n<p>例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"number\">10</span>).<span class=\"title function_\">toString</span>(<span class=\"number\">16</span>)   <span class=\"comment\">// &#x27;a&#x27; 将十进制的10 转为 16进制的数</span></span><br><span class=\"line\">(<span class=\"number\">10</span>).<span class=\"title function_\">toString</span>(<span class=\"number\">8</span>)    <span class=\"comment\">//  &#x27;12&#x27; 将十进制的10 转为 8进制的数</span></span><br></pre></td></tr></table></figure>\n\n<p>其他进制转其他进制</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">例 二进制的 <span class=\"number\">1110</span> 转为 <span class=\"number\">16</span>进制 的数</span><br><span class=\"line\">(<span class=\"built_in\">parseInt</span>(<span class=\"number\">1110</span>,<span class=\"number\">2</span>)).<span class=\"title function_\">toString</span>(<span class=\"number\">16</span>)   <span class=\"comment\">//  &#x27;e&#x27;</span></span><br><span class=\"line\">二进制的 <span class=\"number\">1110</span> 转十进制 = <span class=\"number\">14</span> ， <span class=\"number\">14</span> 转为十六进制结果为 <span class=\"string\">&#x27;e&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED47-函数——参数对象\"><a href=\"#FED47-函数——参数对象\" class=\"headerlink\" title=\"FED47 函数——参数对象\"></a><strong>FED47</strong> <strong>函数——参数对象</strong></h5><p>请补全JavaScript函数，要求返回它的参数伪数组对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getArguments</span> (a,b,c) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 补充代码</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">arguments</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"WebAPI\"><a href=\"#WebAPI\" class=\"headerlink\" title=\"WebAPI\"></a><strong>WebAPI</strong></h4><p><strong>FED49</strong> <strong>JS动态创建节点</strong></p>\n<p>请补全JavaScript函数，根据参数数组创建li元素。<br>要求：<br>\\1. li元素的个数和数组的长度一样<br>\\2. li元素的内容是数组中的每个元素<br>\\3. 将创建的所有li元素插入到ul中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">createLi</span>(<span class=\"params\">array</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 补全代码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">let</span> ul = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;ul&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; array.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> li = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;li&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        li.<span class=\"property\">innerText</span> = array[i]</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ul.<span class=\"title function_\">appendChild</span>(li)</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>扩展：append 和 appendChild 区别</p>\n<p><strong>与</strong> **<code>parentNode.appendChild() </code>**的 <strong>区别</strong>在于：<br><strong><code>parentNode.append()</code><strong>可以</strong>同时传入多个节点或字符串，没有返回值；<br>而</strong><code>parentNode.appendChild()</code>**只能传一个节点，且不直接支持传字符串</p>\n<p>(需要<code>parentNode.appendChild(document.createTextElement(&#39;字符串&#39;))</code>代替)，返回追加的Node节点。</p>\n<h5 id=\"FED50-根据ID获取元素\"><a href=\"#FED50-根据ID获取元素\" class=\"headerlink\" title=\"FED50 根据ID获取元素\"></a><strong>FED50</strong> <strong>根据ID获取元素</strong></h5><p>请补全JavaScript函数，根据id获取html模块中ul标签下第二个li元素并返回。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getLI</span>(<span class=\"params\">id</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">`#<span class=\"subst\">$&#123;id&#125;</span>`</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED51-JS修改元素内容\"><a href=\"#FED51-JS修改元素内容\" class=\"headerlink\" title=\"FED51 JS修改元素内容\"></a><strong>FED51</strong> <strong>JS修改元素内容</strong></h5><p>请补全JavaScript函数，将类为”box”的div元素内容修改为”欢迎来到牛客网”。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">function</span> <span class=\"title function_\">modifyText</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"comment\">// 补全代码</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">let</span> box = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.box&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      box.<span class=\"property\">textContent</span> = <span class=\"string\">&#x27;欢迎来到牛客网&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED52-阻止冒泡事件\"><a href=\"#FED52-阻止冒泡事件\" class=\"headerlink\" title=\"FED52 阻止冒泡事件\"></a><strong>FED52</strong> <strong>阻止冒泡事件</strong></h5><p>请补全JavaScript函数，要求在点击li元素的时候不触发ul的事件。<br>注意：需要自行获取li元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>nowcoder<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 补全代码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> li = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;li&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    li.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      e.<span class=\"title function_\">stopPropagation</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>FED53</strong> <strong>阻止默认事件</strong></p>\n<p>请补全JavaScript函数，要求在点击id为”checkbox”的复选框时不会取消勾选状态。<br>注意：需要自行获取input元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>牛客会陪伴大家<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">checked</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 补全代码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> cbox = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#checkbox&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    cbox.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      e.<span class=\"title function_\">preventDefault</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED54-url地址\"><a href=\"#FED54-url地址\" class=\"headerlink\" title=\"FED54 url地址\"></a><strong>FED54</strong> <strong>url地址</strong></h5><p>请补全JavaScript函数，实现一个函数返回页面当前url。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getUrlHref</span> ()&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 补全代码</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> location.<span class=\"property\">href</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"FED55-点击按钮隐藏元素\"><a href=\"#FED55-点击按钮隐藏元素\" class=\"headerlink\" title=\"FED55 点击按钮隐藏元素\"></a><strong>FED55</strong> <strong>点击按钮隐藏元素</strong></h5><p>请补全JavaScript代码，实现一个盒子的关闭按钮功能。<br>要求：<br>\\1. 使类为”btn”的div元素中心点定位在类为”box”的div元素右上顶点<br>\\2. 使类为”btn”的div元素中内容”X”垂直水平居中<br>\\3. 点击”X”按钮可以使类为”box”的div元素隐藏</p>\n<p>visibility：hidden 、display：none</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.btn</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/*补全代码*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 中心点在右上角 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">top</span>: -<span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">right</span>: -<span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 水平居中 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 垂直居中 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>X<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">var</span> btn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.btn&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">var</span> box = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.box&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">      btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 补全代码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 隐藏后还占位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// box.style.visibility = &#x27;hidden&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 不占位子</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        box.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"CSS布局\"><a href=\"#CSS布局\" class=\"headerlink\" title=\"CSS布局\"></a>CSS布局</h3><h5 id=\"CSS1-盒模型-content-box\"><a href=\"#CSS1-盒模型-content-box\" class=\"headerlink\" title=\"CSS1 盒模型 - content-box\"></a><strong>CSS1</strong> <strong>盒模型 - content-box</strong></h5><p>默认情况下，width和height是指盒子的内容区域的大小，如果此时给盒子添加内边距或边框，那么会导致整个盒子变大。现在给类名为”content-box”的盒子设置宽度、高度都为”80px”、内边距为”5px”、边框为”5px solid black”，此时可以打开调试工具查看该盒子的大小，会发现该盒子实际是一个长度为”100px”的正方形，并不是”80px”。</p>\n<p>盒子的宽高 &#x3D; width + padding + border</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.content-box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content-box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"CSS2-盒模型-border-box\"><a href=\"#CSS2-盒模型-border-box\" class=\"headerlink\" title=\"CSS2 盒模型 - border-box\"></a><strong>CSS2</strong> <strong>盒模型 - border-box</strong></h5><p>盒子的宽高 &#x3D; width</p>\n<p> 默认盒模型的width和height只会作用于盒子的内容区，而通过”box-sizing”属性可以改变计算盒子大小的方式。”box-sizing”的默认值为<code>&quot;content-box&quot;</code>，即上一题看到的那样，把值只作用于内容区。现在给类名为”border-box”的盒子设置”box-sizing”属性为”border-box”，此时width和height的值不仅会作用于内容区，并且还会包括内边距和边框。<br> 很多人将”border-box”称为怪异盒模型，其实并不怪异。因为现实中的盒子就是这样测量的。比如快递盒，当用安全气囊包裹易碎物品时，填充物就可以视为”padding”，无论填充物有多厚，也不会影响盒子的整体大小。<br> 现在再给类名为”border-box”的盒子设置宽度、高度都为”100px”、内边距为”5px”、边框为”5px solid black”，此时通过调试工具会发现盒子的实际大小并没有因为添加了内边距或边框而被撑大。”border-box”在布局中可以让开发者减少不必要的烦恼，如添加内边距、边框之后盒子大小发生变化影响到整体布局的效果。完成以上所讲的步骤即可通过测试，进入下一节的学习吧。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.border-box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;border-box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"CSS3-盒模型-外边距折叠\"><a href=\"#CSS3-盒模型-外边距折叠\" class=\"headerlink\" title=\"CSS3 盒模型- 外边距折叠\"></a><strong>CSS3</strong> <strong>盒模型- 外边距折叠</strong></h5><p> 常规块盒子有一种机制叫外边距折叠，即垂直方向上的两个外边距相遇时，会折叠成一个外边距，且折叠之后的外边距高度为两者之中较大的那一个。现在给类名为”top”、”bottom”两个盒子都设置宽度、高度且都为”100px”、都设置外边距且都为”10px”，可以添加任意颜色便于区分两个盒子。此时通过调试工具可以发现两个盒子之间的距离为”10px”，并不是”20px”，说明已经发生了外边距折叠。<br>外边距折叠好像很奇怪，实际上却很有用。当一个页面包含了多个段落，如果没有外边距折叠，从第二个段落开始，所有段落的间距都是最上方段落的上外边距的两倍，有了外边距折叠，段落间距才会相等。<br>如果想要清除两个盒子之间的外边距折叠，可以给目标盒子设置以下属性：<br>\\1. display: inline-block<br>\\2. float属性值不是”none”的元素<br>\\3. 绝对定位<br>现在给类名为”bottom”的盒子设置”position”属性为”absolute”，可以看到下方的盒子向下移动了，此时外边距折叠失效。完成以上所讲的步骤即可通过测试，进入下一节的学习吧。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.top</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.bottom</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: purple;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 绝对定位：解决外边距折叠问题 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;top&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;bottom&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>外边距折叠</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828221938415.png\" class=\"\" title=\"image-20220828221938415\">\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828222042849.png\" class=\"\" title=\"image-20220828222042849\">\n\n<h5 id=\"CSS4-浮动\"><a href=\"#CSS4-浮动\" class=\"headerlink\" title=\"CSS4 浮动\"></a><strong>CSS4</strong> <strong>浮动</strong></h5><p> 浮动盒子可以向左、右移动，直到它的外边沿接触父级的外边沿或另一个浮动盒子的外边沿。浮动盒子会脱离常规文档流，所以文档流中的元素几乎认为浮动盒子不存在。<br> 现在给”body”标签设置宽度为300px，再给类名为”left”、”center”、”right”的盒子（左、中、右盒子）皆设置宽度、高度且都为100px，三个盒子的颜色可以自定义以便于观测。继续给中间盒子设置”float: left”属性，此时中间盒子已经是一个浮动盒子，不再占据流中的位置空间，右盒子上升到了浮动盒子的区域并且被浮动盒子覆盖住了。现在再给左、右盒子皆设置”float: left”属性，此时三个盒子水平排列在一行上。重设左盒子的宽度、高度皆为120px，可以观察到因为”body”盒子较窄，所以右盒子被迫换行并且因为左盒子的高度超过了中间盒子，右盒子被卡在了中间盒子下方。<br> 以上为浮动盒子的特性。完成以上所讲的步骤即可通过测试，进入下一节的学习吧。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: lightblue;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: lightgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828222309721.png\" class=\"\" title=\"image-20220828222309721\">\n\n<p>中间盒子浮动后：看不见中间的盒子了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: lightblue;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: lightgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">   + <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828222335894.png\" class=\"\" title=\"image-20220828222335894\">\n\n<p>全部左浮动后，排成一排</p>\n<p>注意：三个子盒子没有给width 的时候，都左浮动以后并没有排成一排，而是都消失了！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: lightblue;</span></span><br><span class=\"line\"><span class=\"language-css\">   + <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: lightgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">   + <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828222634200.png\" class=\"\" title=\"image-20220828222634200\">\n\n<p>重新设置左边盒子的宽度和高度为 120px 后，由于整体超过父元素的宽度，盒子下移</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  +  <span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  +  <span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: lightblue;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: lightgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828222824462.png\" class=\"\" title=\"image-20220828222824462\">\n\n<h5 id=\"CSS5-浮动-清除\"><a href=\"#CSS5-浮动-清除\" class=\"headerlink\" title=\"CSS5 浮动 - 清除\"></a><strong>CSS5</strong> <strong>浮动 - 清除</strong></h5><p> 通过前面的学习了解到，浮动元素会脱离文档流，因此不会影响其他元素。但,在之前介绍浮动盒子时提到了”<strong>文档流中的元素几乎认为浮动盒子不存在</strong>“，<strong>实际上被浮动盒子覆盖的区域中的文本内容会识别到浮动盒子并且绕开浮动盒子。</strong></p>\n<p>现在给类名为”media”的盒子设置”float: left”属性，让该盒子成为浮动盒子，背景色可以自定义便于观察。此时可以观察到盒子下方的文字内容跑到了盒子右侧。通过调试工具可以发现，两个”p”标签被浮动元素所覆盖，并且内部的文字识别到了浮动元素从而绕开了浮动元素。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828223320615.png\" class=\"\" title=\"image-20220828223320615\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.media</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        + <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        + <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;media&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clear-left&quot;</span>&gt;</span>universe<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>如果给”section”元素添加边框，就会发现”section”这个父级盒子的高度只有两个”p”标签那么高，并没有将浮动元素的高度计算进去，这样会让布局很困难。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">section &#123;</span><br><span class=\"line\">  border: 1px solid blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828223413782.png\" class=\"\" title=\"image-20220828223413782\">\n\n<p> clear属性的值有”left”、”right”、”both”和”none”，用于<strong>指定盒子的那一侧不应该紧挨着浮动盒子</strong>。现在再给类名为”clear-left”的”p”标签设置”clear: left”属性，现在可以发现”universe”文本到了浮动盒子的下方并且”section”盒子的高度也发生了变化，该高度包含了浮动盒子的高度。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">.clear-left &#123;</span><br><span class=\"line\">  clear: left;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828223651033.png\" class=\"\" title=\"image-20220828223651033\">\n\n\n\n<h5 id=\"CSS6-定位-static\"><a href=\"#CSS6-定位-static\" class=\"headerlink\" title=\"CSS6 定位 - static\"></a><strong>CSS6</strong> <strong>定位 - static</strong></h5><p> 在流中的元素定位属性值默认都为”static”，即没有定位。此时元素会忽略”top”、”bottom”、”left”、”right”和”z-index”定位属性。<br> 现在给”section”盒子设置”left: 10px”，这时会发现定位属性无效。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828223751802.png\" class=\"\" title=\"image-20220828223751802\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">section</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">                <span class=\"attribute\">background-color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">                + <span class=\"attribute\">left</span>:<span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>CSS7</strong> <strong>定位 - inherit</strong></p>\n<p> 当一个元素的定位属性设置为”inherit”时，表示从父元素继承定位属性。</p>\n<p>现在虽然类名为”inner”的里盒子设置了”left: 10px”属性，但是这是无效的，因为该盒子的定位属性值为”static”。</p>\n<p>现在给里盒子添加”position: inherit”属性，表示从类名为”outer”的父级外盒子继承定位属性，现在发现里盒子的”left: 10px”属性依然没有生效，因为外盒子的定位值依然是”static”。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828224023594.png\" class=\"\" title=\"image-20220828224023594\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.outer</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        + <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.inner</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">        + <span class=\"attribute\">left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        + <span class=\"attribute\">position</span>: inherit;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inner&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>最后再给外盒子添加”position: relative”属性，此时会发现里盒子向右移动了10px，定位属性”left”生效了。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828224036117.png\" class=\"\" title=\"image-20220828224036117\">\n\n\n\n<h5 id=\"CSS8-定位-absolute\"><a href=\"#CSS8-定位-absolute\" class=\"headerlink\" title=\"CSS8 定位 - absolute\"></a><strong>CSS8</strong> <strong>定位 - absolute</strong></h5><p>绝对定位会把元素拿出文档流，不会再占据原来的空间。绝对定位元素的父级是距离该元素最近的定位祖先，也就是**”position”属性不为”static”的最近任意祖先<strong>。</strong>如果没有<strong>这个定位祖先，那么绝对定位元素就相对于文档的</strong>根元素”html”进行定位**。<br> 当前类名为”outer”、”middle”、”inner”的盒子（外、中、里盒子）嵌套在一起，现在给三个盒子均设置左内边距10px，再自定义盒子背景颜色以便于观察。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.outer</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">       + <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.middle</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: lightblue;</span></span><br><span class=\"line\"><span class=\"language-css\">       + <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.inner</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: lightgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">       + <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;outer&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;middle&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;inner&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828224401311.png\" class=\"\" title=\"image-20220828224401311\">\n\n<p>再给里盒子设置绝对定位属性”position: absolute”，会发现里盒子的位置并没有发生改变，因为<strong>绝对定位的 默认位置 是当前绝对定位盒子在流中的位置</strong>。继续给里盒子设置”left: 0px”属性，观察到里盒子是根据最外层盒子定位的，直接绕过了中间盒子，这是由于中间盒子的定位属性为默认的”static”，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.inner</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: lightgreen;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  + <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  + <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828224516991.png\" class=\"\" title=\"image-20220828224516991\">\n\n<p>此时再给中间盒子设置定位属性”position: absolute”，会发现里盒子现在是根据中间盒子重新定位的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">.middle &#123;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background-color: lightblue;</span><br><span class=\"line\">  padding-left: 10px;</span><br><span class=\"line\">  + position: absolute;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828224541528.png\" class=\"\" title=\"image-20220828224541528\">\n\n<h5 id=\"CSS9-定位-absolute-评注\"><a href=\"#CSS9-定位-absolute-评注\" class=\"headerlink\" title=\"CSS9 定位 - absolute - 评注\"></a><strong>CSS9</strong> <strong>定位 - absolute - 评注</strong></h5><blockquote>\n<p>绝对定位：不在流中，但默认会呆在原来自己流中的地方，覆盖其他元素</p>\n</blockquote>\n<p> 绝对定位非常适合创建<strong>弹出层、提示和对话框</strong>等覆盖于其他内容之上的组件。比如有一篇文章，可以给文章添加一些行内的评注，最好以气泡图的样式显示在文章外部的空白区域中。<br> 绝对定位的元素<strong>默认会待在自己还在流中时的地方</strong>，</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225018122.png\" class=\"\" title=\"image-20220828225018122\">\n\n<p>现在给”aside”盒子设置绝对定位属性”position: absolute”，此时”aside”盒子从流中出来并且覆盖住了下方的元素，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">aside</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: pink;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  + <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225030171.png\" class=\"\" title=\"image-20220828225030171\">\n\n<p>现在可以将它向左移动一些，把它定位到文章内容的左边。”article”盒子的左外边距为10rem，想让”aside”评注放在左边空白处的中间，需要进行计算，这里省略计算步骤。现在只需要将评注组件向左移动9rem即可。现在给评注组件设置”margin-left: -9rem”，在CSS中，负边距是完全有效的，负左外边距可以将元素往左拉，其他有趣的效果这里不做赘述。此时观察效果，评注在”相煎何太急？”内容的左边，可以很醒目的告诉读者该句的意思。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225104321.png\" class=\"\" title=\"image-20220828225104321\">\n\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">aside</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: pink;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  + <span class=\"attribute\">margin-left</span>: -<span class=\"number\">9rem</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完整代码:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">article</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">10rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">aside</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">5rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.5rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">9rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">aside</span><span class=\"selector-pseudo\">:after</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">0.5rem</span> solid pink;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border-bottom-color</span>: transparent;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border-right-color</span>: transparent;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">right</span>: -<span class=\"number\">1rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">top</span>: <span class=\"number\">0.5rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.note</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">color</span>: green;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">text-decoration-line</span>: underline;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>煮豆燃豆萁，<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>豆在釜中泣。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>本是同根生，<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span>豆秸怎能这样急迫地煎熬豆子呢？<span class=\"tag\">&lt;/<span class=\"name\">aside</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;note&quot;</span>&gt;</span>相煎何太急？<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"CSS10-定位-z-index\"><a href=\"#CSS10-定位-z-index\" class=\"headerlink\" title=\"CSS10 定位 - z-index\"></a><strong>CSS10</strong> <strong>定位 - z-index</strong></h5><p> z-index属性设置元素的堆叠顺序，拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的上面。z-index可以设置为负数，且该属性<strong>只能作用于定位元素</strong>。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225225214.png\" class=\"\" title=\"image-20220828225225214\">\n\n<p> 现在给”img”图片标签添加”position: absolute”、”left: 0px”和”top: 0px”属性，此时会发现图片被定绝对定位在了页面的左上角，并且遮挡住了下方的内容。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225258401.png\" class=\"\" title=\"image-20220828225258401\">\n\n<p>现在继续给图片标签添加”z-index: -1”属性，现在图片堆叠在了字体内容的下方。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  + <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225329615.png\" class=\"\" title=\"image-20220828225329615\">\n\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>The countdown to Christmas starts here.<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fuploads.xuexila.com%2Fallimg%2F1912%2F1135-191202143454.jpg&amp;refer=http%3A%2F%2Fuploads.xuexila.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1639984107&amp;t=eca951193e736a17eb96278117bcfb1f&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>由于图像的 z-index 是 -1，因此它在文本的后面出现。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"CSS11-定位-relative\"><a href=\"#CSS11-定位-relative\" class=\"headerlink\" title=\"CSS11 定位 - relative\"></a><strong>CSS11</strong> <strong>定位 - relative</strong></h5><p> 相对定位的元素仍然会待在原来的地方，即<strong>不会从流中出来</strong>。此后可以通过”top”、”right”、”bottom”和”left”属性使元素<strong>相对于初始位置进行移动</strong>。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225548950.png\" class=\"\" title=\"image-20220828225548950\">\n\n<p>现在给类名为”center”的盒子设置相对定位属性”position: relative”、设置”left: 50px”、设置”top: 50px”，再自定义背景颜色以便于观察。此时可以观察到中间盒子在原始的位置上向右、向下均移动了50px的距离，并且保留了原来的空间。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.center &#123;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background-color: lightblue;</span><br><span class=\"line\">  + position: relative;</span><br><span class=\"line\">  + left: 50px;</span><br><span class=\"line\">  + top: 50px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225633266.png\" class=\"\" title=\"image-20220828225633266\">\n\n<p>完整代码：（虽然会盖住其他元素，但是原本的位置仍然保留，下面的元素不会上移）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: lightblue;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">top</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: lightgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"CSS12-定位-fixed\"><a href=\"#CSS12-定位-fixed\" class=\"headerlink\" title=\"CSS12 定位 - fixed\"></a><strong>CSS12</strong> <strong>定位 - fixed</strong></h5><p> 固定定位是由绝对定位衍生出来的，不同之处在于，固定定位元素的父级始终是视口。因此固定定位可以用来创建始终停留在窗口相同位置的元素。比如：固定侧栏、固定顶栏等。这样方便用户，不必再费事寻找栏目。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225908032.png\" class=\"\" title=\"image-20220828225908032\"> \n\n<p>现在给”nav”盒子设置固定定位属性”position: fixed”、设置”top: 0”、设置自定义宽度、背景颜色。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: pink;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828225948742.png\" class=\"\" title=\"image-20220828225948742\">\n\n<p>此时滑动滚轮，可以发现”nav”盒子始终固定在页面的最上方。但是，数字1却被覆盖了。由于<strong>固定定位的盒子不在流中</strong>，所以遮盖住了下方的元素。此时再给”section”盒子设置上外边距为1rem，此时1数字正常出现了。<strong>固定定位需要注意下方是否有元素被遮挡</strong>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828230101144.png\" class=\"\" title=\"image-20220828230101144\">\n\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">section</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-top</span>: <span class=\"number\">1rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      1<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span>2<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"CSS13-定位-fixed-广告\"><a href=\"#CSS13-定位-fixed-广告\" class=\"headerlink\" title=\"CSS13 定位 - fixed - 广告\"></a><strong>CSS13</strong> <strong>定位 - fixed - 广告</strong></h5><p> 固定定位不仅可以用于导航栏目，还可以用于<strong>控制中心、广告、重要提示内容</strong>等。本节使用固定定位实现一个广告牌功能，关闭按钮和该按钮的功能已给出，当点击按钮时，广告牌会消失。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828230247434.png\" class=\"\" title=\"image-20220828230247434\">\n\n<p>现在给类名为”advert”的盒子设置固定定位属性”position: fixed”、设置”right: 0”、设置”bottom: 0”，此时广告牌的位置被固定在了视口的右下方。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.advert</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: black;</span><br><span class=\"line\"> + <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\"> + <span class=\"attribute\">right</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\"> + <span class=\"attribute\">bottom</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828230322366.png\" class=\"\" title=\"image-20220828230322366\">\n\n<p>现在还需要将关闭按钮定位在广告牌的右上方，继续给类名为”x”的按钮盒子设置绝对定位属性”position: absolute”、设置”right: 0”，观察按钮的位置，已经被定位在了广告牌的右上方。一个简易的广告牌就设计完成了。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.x</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828230417644.png\" class=\"\" title=\"image-20220828230417644\">\n\n<p>完整代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.advert</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">right</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">bottom</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.advert</span><span class=\"selector-pseudo\">:first</span>-line &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.x</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">right</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;advert&quot;</span>&gt;</span></span><br><span class=\"line\">      广告文案</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;x&quot;</span>&gt;</span>x<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;button&#x27;</span>).<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">this</span>.<span class=\"property\">parentNode</span>.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"CSS14-display-flex\"><a href=\"#CSS14-display-flex\" class=\"headerlink\" title=\"CSS14 display - flex\"></a><strong>CSS14</strong> <strong>display - flex</strong></h5><p> Flexbox，也就是Flexible Box Layout模块，是CSS提供的用于布局的一套新属性。这套属性包含针对容器、容器直接子元素（弹性项）的两类属性。Flexbox可以控制弹性项的这几个方面：<br>\\1. 大小，基于内容以及可用空间<br>\\2. 流动方向，水平还是垂直，正向还是反向<br>\\3. 两个轴向上的对齐与分布<br>\\4. 顺序，与源代码中的顺序无关</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233052919.png\" class=\"\" title=\"image-20220828233052919\">\n\n<p>现在给”ul”标签添加”display: flex”属性，让该列表成为flex容器，注意：除非另有声明，否则该属性默认弹性项排列方向为正横向，即”flex-direction: row”。现在可以看到，列表内容已经是水平排列，并且根据各自的内容宽度进行了收缩。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  + <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233149973.png\" class=\"\" title=\"image-20220828233149973\">\n\n<p>现在对主轴（即”flex-direction”属性声明的轴向）进行排列，该属性为”justify-content”且默认值为”flex-start”，现在给”ul”标签设置”justify-content: center”属性，可以发现弹性项在主轴上已经居中了。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"comment\">/* 主轴居中 row */</span></span><br><span class=\"line\"> + <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233239281.png\" class=\"\" title=\"image-20220828233239281\">\n\n<p>但是此时会发现由于”home”的字体比其他字体大，所以弹性项在辅轴（与主轴对应的另一方向的轴）上并没有对其，这是由于控制辅轴对齐方式的”align-items”属性默认为”stretch”即拉伸，会占满”ul”的所有高度空间，并且该行的基线是默认的。</p>\n<p>现在再给”ul”标签添加”align-items: center”属性，会发现”li”标签此时没有撑满”ul”标签的高度，并且在辅轴上是居中对齐的，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"comment\">/* 主轴居中 row */</span></span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"comment\">/* 侧轴居中 col */</span></span><br><span class=\"line\">  + <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233434079.png\" class=\"\" title=\"image-20220828233434079\">\n\n<p>如果给该属性设置”baseline”值，仅仅会在辅轴上将内容文字对齐。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">+    <span class=\"attribute\">align-items</span>: baseline;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233456211.png\" class=\"\" title=\"image-20220828233456211\">\n\n<p>完整代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">2rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 主轴居中 row */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 侧轴居中 col */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-child &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">1.2rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>spaceships<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>planets<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>stars<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"CSS15-display-flex-可伸缩项属性\"><a href=\"#CSS15-display-flex-可伸缩项属性\" class=\"headerlink\" title=\"CSS15 display - flex - 可伸缩项属性\"></a><strong>CSS15</strong> <strong>display - flex - 可伸缩项属性</strong></h5><p> Flexbox支持对弹性项的灵活控制。Flex的意思为可伸缩，这体现在以下三个属性中：<br>\\1. flex-basis：基础值<br>\\2. flex-grow：拉伸弹性系数，如果容器宽度减去弹性项的基础值之和之后还有剩余空间，那么就按照弹性系数比例去分配剩余空间<br>\\3. flex-shrink：缩减弹性系数，和拉伸弹性系数逻辑相反<br> 这三个属性应用给弹性项，而不是容器。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233653324.png\" class=\"\" title=\"image-20220828233653324\"> \n\n<p>现在首先给所有的”li”添加”flex: 1 0 0%”属性，该属性的三个值分别为flex-grow、flex-shrink和flex-basis，表示：当有剩余空间时均匀分配剩余空间、当超出容器宽度时不进行缩放、弹性项的基础值都为容器的0%。此时可以看到四个每个”li”标签的宽度都为125px，分别占据了容器的1&#x2F;4。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 均匀分配剩余空间、超出宽度时不进行错放、基础值为容器项的0% */</span></span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">0%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233814499.png\" class=\"\" title=\"image-20220828233814499\">\n\n<p>现在再单独给第一个”li”标签设置”flex-grow: 2”属性，此时又会发现所有”li”标签的宽度比值为2:1:1:1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-child &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-grow</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828233854105.png\" class=\"\" title=\"image-20220828233854105\">\n\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 均匀分配剩余空间、超出宽度时不进行错放、基础值为容器项的0% */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">0%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-child &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">flex-grow</span>: <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>spaceships<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>planets<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>stars<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n<h5 id=\"CSS16-display-flex-标签\"><a href=\"#CSS16-display-flex-标签\" class=\"headerlink\" title=\"CSS16 display - flex - 标签\"></a><strong>CSS16</strong> <strong>display - flex - 标签</strong></h5><p> 通过之前的学习，现在来实现一组标签，表示星球的种类。当前的”li”标签都是行内盒子，虽然看似实现了标签效果，但是每一行的宽度却没有保持一致，<strong>当进行缩放时，布局会特别的混乱</strong>。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828234054435.png\" class=\"\" title=\"image-20220828234054435\">\n\n<p>现在使用Flex布局将当前的布局方式进行优化，首先删除”li”标签的”display: inline-block”属性，给”ul”添加”display: flex”使该元素称为弹性容器。再给容器添加”flex-wrap: wrap”属性表示换行，否则所有标签会在第一行排列。此时标签已经分行排列了，但，每一行的宽度看起来依然是不同的，这时候需要通过给弹性项添加属性，通过之前讲过的”flex”属性入手。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"comment\">/* flex 布局 */</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"comment\">/* 换行 */</span></span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 删除这一行 */</span></span><br><span class=\"line\">  <span class=\"comment\">/* display: inline-block; */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0.2rem</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828234203630.png\" class=\"\" title=\"image-20220828234203630\">\n\n<p>继续给所有的”li”标签添加”flex: 1 0 auto”属性，auto代表在计算剩余空间时需要减去每个标签自身的宽度而不是之前讲的0%那样忽略了自身的宽度。此时标签功能基本上是完成了，但是注意，最后一行可能因为页面的缩放导致只有一个标签却占满了一整行。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 删除这一行 */</span></span><br><span class=\"line\">  <span class=\"comment\">/* display: inline-block; */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0.2rem</span>;</span><br><span class=\"line\">  + <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828234309037.png\" class=\"\" title=\"image-20220828234309037\">\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828234341904.png\" class=\"\" title=\"image-20220828234341904\">\n\n<p>那么继续给所有的”li”标签设置”max-width: 10rem”即可，此时最后一行标签虽然少但是看起来依旧很和谐。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 删除这一行 */</span></span><br><span class=\"line\">  <span class=\"comment\">/* display: inline-block; */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0.2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  + <span class=\"attribute\">max-width</span>: <span class=\"number\">10rem</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828234406883.png\" class=\"\" title=\"image-20220828234406883\">\n\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0.5rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* flex 布局 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 换行 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">flex-wrap</span>: wrap;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 删除这一行 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* display: inline-block; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0.2rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 设置弹性布局 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">0</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 设置最大宽度 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">max-width</span>: <span class=\"number\">10rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0.2rem</span> <span class=\"number\">0.6rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">1rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.2rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:before</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">0.7rem</span> solid transparent;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border-right-width</span>: <span class=\"number\">0.7rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border-right-color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: -<span class=\"number\">1.2rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Fillithar<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Berzite<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Galidraan<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Gravlex Med<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Cato Neimoidia<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Coruscant<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Dantooine<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Dhandu<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Iktotchon<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Hosnian Prime<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Harkrova I<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Livno III<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Karfeddion<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Eriadu<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Jestefad<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Iridonia<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Malachor<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Gan Moradir<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Kethmandi<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Mirrin Prime<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Ezaraa<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Muunilinst<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Itapi Prime<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>Nam Chorios<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h5 id=\"CSS17-display-flex-order\"><a href=\"#CSS17-display-flex-order\" class=\"headerlink\" title=\"CSS17 display - flex - order\"></a><strong>CSS17</strong> <strong>display - flex - order</strong></h5><p> 使用Flexbox的order属性，可以完全摆脱项目在源码中顺序的约束。默认情况下，每个项目的order值都为0，意味着按照他们在源代码中的顺序进行排列。可以观看右边的代码效果，从设计上说，把图片放在最前面可以抓住读者的眼球，是比较好的设计方式，但是对于浏览器而言，拿到标题并且直接将标题呈现给读者的代价一定比获取一张照片并渲染出来小得多。所以可以考虑折中的方式，先渲染标题但是优先显示图片。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220828234657591.png\" class=\"\" title=\"image-20220828234657591\">\n\n<p> 现在给”img”图片标签设置”order: -1”属性，此时观察效果会发现图片的排列在标题之上，其他内容的相对位置不会变，它们的order值仍然是0。order的值不一定要连续，并且正负都可以。</p>\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">section</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">flex-direction</span>: column;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 改变图片的显示顺序 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">order</span>: -<span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>countdown<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fuploads.xuexila.com%2Fallimg%2F1912%2F1135-191202143454.jpg&amp;refer=http%3A%2F%2Fuploads.xuexila.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1639984107&amp;t=eca951193e736a17eb96278117bcfb1f&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">width</span>=<span class=\"string\">&quot;100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span>The countdown to Christmas starts here.<span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>more<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h3 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h3><h5 id=\"CSS20-单列布局\"><a href=\"#CSS20-单列布局\" class=\"headerlink\" title=\"CSS20 单列布局\"></a><strong>CSS20</strong> <strong>单列布局</strong></h5><p> 单列布局是将头部、内容区、底部在页面上垂直排列，是非常实用的一种布局方式。主要对三个区域的宽度进行统一，然后通过设置自动外边距进行居中。</p>\n<p>现在给**”header”、”section”、”footer”三个盒子统一设置”margin: 10px auto”、”width: 360px”、”border: 1px solid black”**属性。此时因为内容区有内容而头部和底部没有内容所以只有内容区的高度被撑开，一般头部和底部的内容是根据自己的需求固定大小的，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">360px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">360px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">footer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">360px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829001209861.png\" class=\"\" title=\"image-20220829001209861\">\n\n<p>所以现在再给头部和底部统一设置高度，即”<strong>height: 32px</strong>“。</p>\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">header</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">360px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">section</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">360px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-tag\">footer</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">360px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h5 id=\"CSS21-双列布局-浮动\"><a href=\"#CSS21-双列布局-浮动\" class=\"headerlink\" title=\"CSS21 双列布局 - 浮动\"></a><strong>CSS21</strong> <strong>双列布局 - 浮动</strong></h5><p> 自适应的双列布局利用浮动、外边和触发父级BFC即可实现，这种方法主要是因为<strong>BFC的高度计算会包含其内的浮动元素的高度，父盒子会被撑开。</strong></p>\n<p> 现在给类名为**”container”的父盒子添加”overflow: hidden”属性**，使该父盒子成为BFC。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"comment\">/* 成为 BFC */</span></span><br><span class=\"line\">  + <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>继续给类名为**”left”的盒子设置”float: left”和”width: 100px”属性**，使该盒子成为浮动元素并且需要一个固定的宽度。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"comment\">/* 浮动盒子需要一个宽度 */</span></span><br><span class=\"line\">  + <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后再给类名为**”right”的盒子设置左外边距”margin-left: 100px”属性**，该属性值需要和左浮动的盒子宽度一致。此时父盒子的高度会根据左边浮动元素、右边内容区中高度较高的一方进行计算，并且右边内容区的宽度自适应，最好是根据需要，配合最大或最小宽度进行设置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  + <span class=\"attribute\">margin-left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>完整代码：</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829001814177.png\" class=\"\" title=\"image-20220829001814177\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 成为 BFC */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 浮动盒子需要一个宽度 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"CSS22-双列布局-绝对定位\"><a href=\"#CSS22-双列布局-绝对定位\" class=\"headerlink\" title=\"CSS22 双列布局 - 绝对定位\"></a><strong>CSS22</strong> <strong>双列布局 - 绝对定位</strong></h5><p> 通过绝对定位实现的双列布局看起来会比较僵硬，因为父盒子首先需要设置定位属性并且父盒子的高度无法被子盒子撑开，如果子盒子的高度是自适应的，那么父盒子的高度也就无法确定从而设置了，但优点是设置属性比浮动来得更直观。</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829001958835.png\" class=\"\" title=\"image-20220829001958835\">\n\n<p> 现在给类名为**”container”的父盒子添加”position: relative”**属性，为了保证子盒子绝对定位时不会根据html元素定位。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 子盒子 根据 section 位置进行定位，保证不根据 html元素 来定位 */</span></span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>继续给类名为**”left”的盒子添加”position: absolute”、”left: 0”和”width: 100px”**三条属性，使该盒子定位到父盒子的最左边并且赋予宽度，但高度是根据内容自适应的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"comment\">/* 定位 */</span></span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后给类名为**”right”的盒子添加”position: absolute”、”left: 100px”和”right: 0px”**，因为该盒子没有给定宽度，设置”left”和”right”定位属性会使内容区保留在这个范围内，同样实现了自适应。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"comment\">/* 预留左边盒子的宽度 */</span></span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 宽度自适应 */</span></span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完整代码</p>\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <style type=\"text/css\">\n      * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n      }\n      section {\n        /* 子盒子 根据 section 位置进行定位，保证不根据 html元素 来定位 */\n        position: relative;\n      }\n      .left {\n        border: 1px solid black;\n        /* 定位 */\n        position: absolute;\n        left: 0;\n        width: 100px;\n      }\n      .right {\n        border: 1px solid black;\n        position: absolute;\n        /* 预留左边盒子的宽度 */\n        left: 100px;\n        /* 宽度自适应 */\n        right: 0;\n      }\n    </style>\n  </head>\n  <body>\n    <section class=\"container\">\n      <article class=\"left\"><br /><br /><br /><br /></article>\n      <article class=\"right\"><br /><br /><br /></article>\n    </section>\n  </body>\n</html>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829002228043.png\" class=\"\" title=\"image-20220829002228043\">\n\n<h5 id=\"CSS23-双列布局-flex\"><a href=\"#CSS23-双列布局-flex\" class=\"headerlink\" title=\"CSS23 双列布局 - flex\"></a><strong>CSS23</strong> <strong>双列布局 - flex</strong></h5><p> 通过Flexbox可以快速实现双列布局，主要<strong>通过”flex: 1”这条弹性项属性给内容区申请到父盒子的所有剩余空间</strong>，并且可以给弹性项设置”position”属性调整弹性项内部的子盒子细节。</p>\n<p> 现在给类名为**”container”的父盒子添加”display: flex”属性**，使该盒子成为弹性盒容器。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  + <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>继续给类名为**”left”的弹性项盒子添加”width: 100px”属性**。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  + <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后给类名为**”right”的弹性项盒子添加”flex: 1”属性**。由于弹性项盒子默认占满弹性容器盒子的所有高度，所以两个弹性项盒子的高度也是自适应。右边的内容区宽度会占满弹性容器盒子的剩余空间，所以宽度也是自适应的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid greenyellow;</span><br><span class=\"line\">  + <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829002510770.png\" class=\"\" title=\"image-20220829002510770\">\n\n<p>完整代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid greenyellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n<h5 id=\"CSS25-三列布局-浮动\"><a href=\"#CSS25-三列布局-浮动\" class=\"headerlink\" title=\"CSS25 三列布局 - 浮动\"></a><strong>CSS25</strong> <strong>三列布局 - 浮动</strong></h5><p> 使用浮动实现三列布局的注意点是浮动元素需要写在内容元素之前，否则布局是混乱的。这种方式实现三列布局是优点是简单、兼容性好，但缺点是需要清除浮动，否则父盒子的高度无法撑开，可能会导致其他页面元素的布局混乱。</p>\n<p> 首先给类名为**”container”的盒子添加”overflow: hidden”属性**，该属性可以使盒子成为BFC，处理浮动元素父盒子高度塌陷的问题。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  + <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>再给类名为**”left”的盒子添加”float: left”和”width: 100px”两条属性**，首先往左浮动，宽度这里设置100px。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  + <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  + <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>继续给类名为**”right”的盒子添加”float: right”和”width: 100px”两条属性**，往右浮动。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  + <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  + <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后给类名为**”center”的盒子设置外边距”margin: 0px 100px”**，该属性上下外边距为0px，左右外边距为两边浮动元素的宽度100px，这样保证了中间的内容区域不会被两边的浮动元素覆盖住。注意，HTML文档中两个浮动元素的顺序在内容元素之前。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.center</span> &#123;</span><br><span class=\"line\">  + <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意：如果不设置 container 的 overflow：hidden 将导致塌陷</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829002835529.png\" class=\"\" title=\"image-20220829002835529\">\n\n<p>整体代码：</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829002911746.png\" class=\"\" title=\"image-20220829002911746\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: right;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n<h5 id=\"CSS26-三列布局-绝对定位\"><a href=\"#CSS26-三列布局-绝对定位\" class=\"headerlink\" title=\"CSS26 三列布局 - 绝对定位\"></a><strong>CSS26</strong> <strong>三列布局 - 绝对定位</strong></h5><p> 使用绝对定位实现三列布局，实际上是和之前使用绝对定位实现双列布局同一个原理。主要思路是，两边通过绝对定位定位到父盒子的左、右边框上，再根据实际的需要设置两边盒子的宽度，高度是根据内容自适应的。中间内容区通过定位属性左、右自适应宽度。</p>\n<p>现在给类名为**”container”的盒子添加”position: relative”**，该属性使子元素可以相对该盒子做定位。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 相对该父盒子进行定位 */</span></span><br><span class=\"line\">  + <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>继续给类名为**”left”的盒子添加”position: absolute”、”left: 0px”和”width: 100px”**三条属性。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgb</span>(<span class=\"number\">250</span>, <span class=\"number\">6</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">+  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">+  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">+  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>继续给类名为**”right”的盒子添加”position: absolute”、”right: 0px”和”width: 100px”**三条属性。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgb</span>(<span class=\"number\">123</span>, <span class=\"number\">117</span>, <span class=\"number\">238</span>);</span><br><span class=\"line\">  + <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  + <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  + <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>最后给类名**为”center”的盒子添加”position: absolute”、”left: 100px”和”right: 100px”**三条属性，表示自适应区域为距离左边100px至距离右边100px。此时可以看到三个盒子的高度不同，根据内容高度撑开，实际中可以按需设置高度值。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.center</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\"> + <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> + <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> + <span class=\"attribute\">right</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829003344561.png\" class=\"\" title=\"image-20220829003344561\">\n\n<p>完整代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 相对该父盒子进行定位 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgb</span>(<span class=\"number\">250</span>, <span class=\"number\">6</span>, <span class=\"number\">6</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">right</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgb</span>(<span class=\"number\">123</span>, <span class=\"number\">117</span>, <span class=\"number\">238</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n<h5 id=\"CSS27-三列布局-flex\"><a href=\"#CSS27-三列布局-flex\" class=\"headerlink\" title=\"CSS27 三列布局 - flex\"></a><strong>CSS27</strong> <strong>三列布局 - flex</strong></h5><p> 相比于浮动和定位，使用Flexbox布局实现三列布局要更好，因为弹性容器的高度会根据最高的弹性项进行修正，不会出现明显的台阶式效果。Flexbox实现三列布局的特点为简单、使用、强大，核心思路为设置中间内容盒子的”flex: 1”属性，让中间内容区的宽度自适应，独自占据弹性容器的全部剩余空间。</p>\n<p>现在给类名为**”container”的盒子添加”display: flex”属性**，使该盒子成为弹性容器。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 弹性布局 */</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再给类名为**”left”和”right”的盒子添加”width: 100px”属性**，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后给类名为**”center”的盒子添加”flex: 1”属性**，使该盒子占据容器盒子的全部剩余空间。此时会发现即使三个子盒子的内容高度不同，但容器和子会根据最高的子元素进行修正，并且没有出现浮动和定位中的台阶式效果。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.center</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"comment\">/* 剩余空间自动撑开 */</span></span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829003648912.png\" class=\"\" title=\"image-20220829003648912\">\n\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">box-sizing</span>: border-box;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 弹性布局 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 剩余空间自动撑开 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h5 id=\"CSS29-三列布局-圣杯布局\"><a href=\"#CSS29-三列布局-圣杯布局\" class=\"headerlink\" title=\"CSS29 三列布局 - 圣杯布局\"></a><strong>CSS29</strong> <strong>三列布局 - 圣杯布局</strong></h5><p> 不像Flexbox或Grid布局可以控制元素显示的次序，圣杯布局是通过<strong>浮动元素和外边距属性实现三列布局</strong>，但最重要的一点是，在文档中需要将优先渲染的内容写在最前方，但显示时看起来却好像是按照显示次序书写的一样。<br>首先给类名为**”container”的盒子添加”overflow: hidden”和”padding: 0px 100px”**属性，以为了防止容器盒子高度塌陷和给之后的左、右浮动元素预留位置。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"comment\">/* 避免高度塌陷 */</span></span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"comment\">/* 左右浮动元素预留位置 */</span></span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 设置最小宽度不能小于子盒子的宽度 */</span></span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>现在继续给类名为**”left”的盒子添加以下属性**：<br>\\1. <strong>“float: left”，浮动</strong>，保证之后的”margin-left”属性可以将自身拉到上一行<br>\\2. **”width: 100px”**，固定宽度<br>\\3. **”margin-left: -100%”**，该属性可以将元素向左移动属性值的单位，100%相对于父容器计算<br>\\4. **”position: relative”**，相对定位，需要将自身再向左移动自身的宽度，进入容器的”padding-left”区域<br>\\5. **”left: -100px”**，自身的宽度，刚好进入容器的”padding-left”区域<br>到这里圣杯布局中最核心的步骤和思想就完了。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: greenyellow;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 将盒子向上拉一行 */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"comment\">/* 左移动自身宽度，进入padding区域 */</span></span><br><span class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>之后继续给类名为**”right”的盒子添加”float: left”、”width: 100px”、”margin-left: -100px”、”position: relative”和”left 100px”属性**，该右盒子的思想和左盒子一样，即，将右盒子向上拉一行并且再向右移动自身宽度进入”padding-right”区。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: darkgreen;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"comment\">/* 将盒子向上拉一行 */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 左移动自身宽度，进入padding区域 */</span></span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后再给类名为**”center”的盒子添加”float: left”和”width: 100%”**即可。此时中间内容区的宽度是自适应的，并且因为有内边距属性所以内容不会被两边的浮动盒子遮挡住。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.center</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: darkorange;</span><br><span class=\"line\">  + <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"comment\">/* 撑开宽度 */</span></span><br><span class=\"line\">  + <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 圣杯布局要注意的是，当中间内容区域的宽度小于左、右盒子的宽度时，整个布局就会混乱，所以为了避免这种情况，<strong>再给容器盒子添加”min-width: 100px”属性，保证圣杯布局正确</strong>、有效。</p>\n<p>不设置左右盒子的 margin-left 和 left 属性的时候：</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829005229345.png\" class=\"\" title=\"image-20220829005229345\">\n\n<p>不设置 margin-left 只设置 left 属性的时候</p>\n<p>!<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829005252329.png\" class=\"\" title=\"image-20220829005252329\"></p>\n<p>完整代码：</p>\n<img src=\"/2022/08/28/%E7%89%9B%E5%AE%A2%E5%89%8D%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%98-%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/image-20220829004735000.png\" class=\"\" title=\"image-20220829004735000\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 避免高度塌陷 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 左右浮动元素预留位置 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 设置最小宽度不能小于子盒子的宽度 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">min-width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: greenyellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 将盒子向上拉一行 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 左移动自身宽度，进入padding区域 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: -<span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: darkorange;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: darkgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: right;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 将盒子向上拉一行 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 左移动自身宽度，进入padding区域 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n<h5 id=\"CSS30-三列布局-双飞翼布局\"><a href=\"#CSS30-三列布局-双飞翼布局\" class=\"headerlink\" title=\"CSS30 三列布局 - 双飞翼布局\"></a><strong>CSS30</strong> <strong>三列布局 - 双飞翼布局</strong></h5><p>双飞翼布局是在圣杯布局上做了优化，<strong>解决了圣杯布局中布局发生错乱的问题</strong>。核心思路是在圣杯布局的基础上，再在内容区添加一层新的盒子，该盒子通过外边距将内容与两边的浮动元素分隔开，实际上中心盒子是没有”padding”属性的。</p>\n<p>首先给类名为**”container”的盒子添加”overflow: hidden”属性**，解决子浮动元素导致的高度塌陷问题。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span><br><span class=\"line\">  <span class=\"comment\">/* 解决子元素浮动导致的高度塌陷问题 */</span></span><br><span class=\"line\"> + <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后继续给类名为**”left”的盒子添加”float: left”、”margin-left: -100%”和”width: 100px”**。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: greenyellow;</span><br><span class=\"line\"> + <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\"> + <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span><br><span class=\"line\"> + <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再给类名为**”center”的盒子添加”float: left”和”width: 100%”属性**，该盒子并没有像圣杯布局时添加”padding”属性那样。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.center</span> &#123;</span><br><span class=\"line\">+  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">+  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>继续给类名为**”right”的盒子添加”float: left”、”width: 100px”和”margin-left: -100px”**。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: darkgreen;</span><br><span class=\"line\"> + <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\"> + <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"> + <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后给类名为**”main”的盒子添加”margin: 0px 100px”**，该属性为双飞翼布局的核心点，使用外边距将内容封锁在两边浮动元素的中间。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: darkorange;</span><br><span class=\"line\">  <span class=\"comment\">/* 使用外边距将中间元素固定在浮动元素中间 */</span></span><br><span class=\"line\"> + <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完整代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">      * &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 解决子元素浮动导致的高度塌陷问题 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">overflow</span>: hidden;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.left</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: greenyellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.center</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.main</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: darkorange;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"comment\">/* 使用外边距将中间元素固定在浮动元素中间 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span> <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"selector-class\">.right</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: darkgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">main</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","categories":["前端秋招面经"]},{"title":"项目公用框架组件-tablelist","url":"/2022/07/06/%E9%A1%B9%E7%9B%AE%E5%85%AC%E7%94%A8%E6%A1%86%E6%9E%B6%E7%BB%84%E4%BB%B6-tablelist/","content":"<p>[TOC]</p>\n<h3 id=\"公关组件（无需修改）\"><a href=\"#公关组件（无需修改）\" class=\"headerlink\" title=\"公关组件（无需修改）\"></a>公关组件（无需修改）</h3><h4 id=\"table-vue\"><a href=\"#table-vue\" class=\"headerlink\" title=\"table.vue\"></a>table.vue</h4><p>通过props实现父传子数据显示，$emit实现子传父操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;el-card&gt;</span><br><span class=\"line\">      &lt;el-table ref=&quot;table&quot; v-loading=&quot;loading&quot; :data=&quot;dataList&quot; style=&quot;width: 100%&quot; stripe border&gt;</span><br><span class=\"line\">        &lt;!-- v-for 动态渲染表格 template --&gt;</span><br><span class=\"line\">        &lt;template v-for=&quot;(item,index) in keys&quot;&gt;</span><br><span class=\"line\">          &lt;el-table-column :key=&quot;index&quot; :prop=&quot;item.value&quot; :label=&quot;item.label&quot; :width=&quot;item.width&quot; /&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br><span class=\"line\">        &lt;el-table-column label=&quot;操作&quot;&gt;</span><br><span class=\"line\">          &lt;!-- 通过作用域插槽，通过点击行，获得父组件行的数据 --&gt;</span><br><span class=\"line\">          &lt;template slot-scope=&quot;&#123; row &#125;&quot;&gt;</span><br><span class=\"line\">            &lt;el-button</span><br><span class=\"line\">              size=&quot;small&quot;</span><br><span class=\"line\">              type=&quot;primary&quot;</span><br><span class=\"line\">              @click=&quot;handleClick(row)&quot;</span><br><span class=\"line\">            &gt;编辑&lt;/el-button&gt;</span><br><span class=\"line\">            &lt;el-button</span><br><span class=\"line\">              size=&quot;small&quot;</span><br><span class=\"line\">              type=&quot;danger&quot;</span><br><span class=\"line\">              @click=&quot;handleDelete(row)&quot;</span><br><span class=\"line\">            &gt;删除&lt;/el-button&gt;</span><br><span class=\"line\">          &lt;/template&gt;</span><br><span class=\"line\">        &lt;/el-table-column&gt;</span><br><span class=\"line\">      &lt;/el-table&gt;</span><br><span class=\"line\">    &lt;/el-card&gt;</span><br><span class=\"line\">    &lt;!-- 分页组件 --&gt;</span><br><span class=\"line\">    &lt;el-row justify=&quot;center&quot; type=&quot;flex&quot; align=&quot;middle&quot; style=&quot;height: 60px&quot;&gt;</span><br><span class=\"line\">      &lt;el-pagination</span><br><span class=\"line\">        :current-page=&quot;page.currentPage&quot;</span><br><span class=\"line\">        :page-size=&quot;page.pageSize&quot;</span><br><span class=\"line\">        layout=&quot;prev, pager, next&quot;</span><br><span class=\"line\">        :total=&quot;page.total&quot;</span><br><span class=\"line\">        @current-change=&quot;handleCurrentChange&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">    &lt;/el-row&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    // 表格显示信息</span><br><span class=\"line\">    dataList: &#123;</span><br><span class=\"line\">      type: Array,</span><br><span class=\"line\">      default: null</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    keys: &#123;</span><br><span class=\"line\">      type: Array,</span><br><span class=\"line\">      default: null</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 分页数据</span><br><span class=\"line\">    page: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      default: null</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    loading: &#123;</span><br><span class=\"line\">      type: Boolean,</span><br><span class=\"line\">      default: false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    console.log(&#x27;loading&#x27;, this.loading)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    handleClick(row) &#123;</span><br><span class=\"line\">      this.$emit(&#x27;handleClick&#x27;, row)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleDelete(row) &#123;</span><br><span class=\"line\">      this.$emit(&#x27;handleDelete&#x27;, row)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleCurrentChange(newPage) &#123;</span><br><span class=\"line\">      this.$emit(&#x27;handleCurrentChange&#x27;, newPage)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"dialog-vue\"><a href=\"#dialog-vue\" class=\"headerlink\" title=\"dialog.vue\"></a>dialog.vue</h4><p>通过具名插槽插入表单输入框、选择框、等等</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;!-- 新增/编辑对话框 --&gt;</span><br><span class=\"line\">  &lt;el-dialog :title=&quot;titleName&quot; :visible=&quot;showDialog&quot; :before-close=&quot;btnCancel&quot; style=&quot;margin-top: 120px;&quot;&gt;</span><br><span class=\"line\">    &lt;el-form</span><br><span class=\"line\">      ref=&quot;form&quot;</span><br><span class=\"line\">      style=&quot;overflow-y: auto; height: 485px; margin-top: 10px&quot;</span><br><span class=\"line\">      label-width=&quot;150px&quot;</span><br><span class=\"line\">      :rules=&quot;rules&quot;</span><br><span class=\"line\">      :model=&quot;form&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;slot name=&quot;dialog&quot; /&gt;</span><br><span class=\"line\">    &lt;/el-form&gt;</span><br><span class=\"line\">    &lt;!-- 弹框底部 --&gt;</span><br><span class=\"line\">    &lt;template v-slot:footer&gt;</span><br><span class=\"line\">      &lt;el-row class=&quot;footer&quot; type=&quot;flex&quot; justify=&quot;center&quot;&gt;</span><br><span class=\"line\">        &lt;el-col :span=&quot;24&quot;&gt;</span><br><span class=\"line\">          &lt;el-button @click=&quot;btnCancel&quot;&gt;取消&lt;/el-button&gt;</span><br><span class=\"line\">          &lt;el-button type=&quot;primary&quot; @click=&quot;onSave()&quot;&gt;保存&lt;/el-button&gt;</span><br><span class=\"line\">        &lt;/el-col&gt;</span><br><span class=\"line\">      &lt;/el-row&gt;</span><br><span class=\"line\">    &lt;/template&gt;</span><br><span class=\"line\">  &lt;/el-dialog&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    titleName: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      default: &#x27;&#x27;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    showDialog: &#123;</span><br><span class=\"line\">      type: Boolean,</span><br><span class=\"line\">      default: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    form: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      default: null</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    rules: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      default: null</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    // 取消对话框</span><br><span class=\"line\">    btnCancel() &#123;</span><br><span class=\"line\">      // 关闭对话框</span><br><span class=\"line\">      this.$emit(&#x27;btnCancel&#x27;, false)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 新增or修改</span><br><span class=\"line\">    onSave() &#123;</span><br><span class=\"line\">      this.$refs.form.validate((valid) =&gt; &#123;</span><br><span class=\"line\">        // 成功valid为true，失败为false</span><br><span class=\"line\">        if (valid) &#123;</span><br><span class=\"line\">          // 校验通过才会进入下一步</span><br><span class=\"line\">          this.$emit(&#x27;onSave&#x27;)</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">          this.$message.error(&#x27;表单校验不通过&#x27;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"基础框架-index-vue-引用公用组件\"><a href=\"#基础框架-index-vue-引用公用组件\" class=\"headerlink\" title=\"基础框架 index.vue 引用公用组件\"></a>基础框架 index.vue 引用公用组件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;div class=&quot;dashboard-container&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;app-container&quot;&gt;</span><br><span class=\"line\">      &lt;h3&gt;软科排名&lt;/h3&gt;</span><br><span class=\"line\">      &lt;!-- table组件展示数据 --&gt;</span><br><span class=\"line\">      &lt;Table</span><br><span class=\"line\">        :data-list=&quot;dataList&quot;</span><br><span class=\"line\">        :keys=&quot;keys&quot;</span><br><span class=\"line\">        :page=&quot;page&quot;</span><br><span class=\"line\">        :loading=&quot;loading&quot;</span><br><span class=\"line\">        @handleClick=&quot;handleClick&quot;</span><br><span class=\"line\">        @handleDelete=&quot;handleDelete&quot;</span><br><span class=\"line\">        @handleCurrentChange=&quot;handleCurrentChange&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;!-- 对话框组件 --&gt;</span><br><span class=\"line\">      &lt;add-dialog</span><br><span class=\"line\">        ref=&quot;dialog&quot;</span><br><span class=\"line\">        :form=&quot;form&quot;</span><br><span class=\"line\">        :rules=&quot;rules&quot;</span><br><span class=\"line\">        :show-dialog=&quot;showDialog&quot;</span><br><span class=\"line\">        :title-name=&quot;titleName&quot;</span><br><span class=\"line\">        @btnCancel=&quot;btnCancel&quot;</span><br><span class=\"line\">        @onSave=&quot;onSave&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        &lt;!-- 具名插槽传特定的内容 --&gt;</span><br><span class=\"line\">        &lt;template #dialog&gt;</span><br><span class=\"line\">          &lt;el-form-item label=&quot;排名编号&quot; prop=&quot;qs_code&quot;&gt;</span><br><span class=\"line\">            &lt;el-input v-model=&quot;form.qs_code&quot; class=&quot;input_box&quot; :disabled=&quot;titleName.indexOf(&#x27;新增&#x27;)!==-1 ? false : true&quot; /&gt;</span><br><span class=\"line\">          &lt;/el-form-item&gt;</span><br><span class=\"line\">          &lt;el-form-item label=&quot;排名&quot; prop=&quot;qs_rank&quot;&gt;</span><br><span class=\"line\">            &lt;el-input v-model=&quot;form.qs_rank&quot; class=&quot;input_box&quot; :disabled=&quot;titleName.indexOf(&#x27;新增&#x27;)!==-1 ? false : true&quot; /&gt;</span><br><span class=\"line\">          &lt;/el-form-item&gt;</span><br><span class=\"line\">          &lt;el-form-item label=&quot;学校编号&quot; prop=&quot;qs_school&quot;&gt;</span><br><span class=\"line\">            &lt;el-input v-model=&quot;form.qs_school&quot; class=&quot;input_box&quot; /&gt;</span><br><span class=\"line\">          &lt;/el-form-item&gt;</span><br><span class=\"line\">          &lt;el-form-item label=&quot;学校名称&quot; prop=&quot;qs_schoolName&quot;&gt;</span><br><span class=\"line\">            &lt;el-input v-model=&quot;form.qs_schoolName&quot; class=&quot;input_box&quot; /&gt;</span><br><span class=\"line\">          &lt;/el-form-item&gt;</span><br><span class=\"line\">        &lt;/template&gt;</span><br><span class=\"line\">      &lt;/add-dialog&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import Table from &#x27;@/components/common/table.vue&#x27;</span><br><span class=\"line\">import AddDialog from &#x27;@/components/common/add-dialog.vue&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    Table,</span><br><span class=\"line\">    AddDialog</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      // 表格</span><br><span class=\"line\">      loading: false,</span><br><span class=\"line\">      dataList: [],</span><br><span class=\"line\">      keys: [], // 数据的keys</span><br><span class=\"line\"></span><br><span class=\"line\">      // 分页</span><br><span class=\"line\">      page: &#123;</span><br><span class=\"line\">        currentPage: 1,</span><br><span class=\"line\">        pageSize: 10,</span><br><span class=\"line\">        total: 0</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      //  对话框</span><br><span class=\"line\">      titleName: &#x27;&#x27;,</span><br><span class=\"line\">      showDialog: false,</span><br><span class=\"line\">      form: &#123;&#125;,</span><br><span class=\"line\">      rules: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    // 分页查询所有信息</span><br><span class=\"line\">    getSubjectsByPage() &#123;</span><br><span class=\"line\">      try &#123;</span><br><span class=\"line\">        this.loading = true</span><br><span class=\"line\"></span><br><span class=\"line\">        this.keys = [</span><br><span class=\"line\">          &#123; label: &#x27;一级学科编号&#x27;, value: &#x27;subject_code&#x27;, width: &#x27;150px&#x27; &#125;,</span><br><span class=\"line\">          &#123; label: &#x27;创建日期&#x27;, value: &#x27;create_time&#x27;, width: &#x27;300px&#x27; &#125;,</span><br><span class=\"line\">          &#123; label: &#x27;更新日期&#x27;, value: &#x27;update_time&#x27;, width: &#x27;300px&#x27; &#125;,</span><br><span class=\"line\">          &#123; label: &#x27;一级学科id&#x27;, value: &#x27;subject_id&#x27;, width: &#x27;150px&#x27; &#125;,</span><br><span class=\"line\">          &#123; label: &#x27;一级学科名称&#x27;, value: &#x27;subject_name&#x27;, width: &#x27;300px&#x27; &#125;,</span><br><span class=\"line\">          &#123; label: &#x27;所属学科门类&#x27;, value: &#x27;discipline_name&#x27;, width: &#x27;150px&#x27; &#125;]</span><br><span class=\"line\"></span><br><span class=\"line\">        this.loading = false</span><br><span class=\"line\">      &#125; catch (err) &#123;</span><br><span class=\"line\">        console.log(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 换页操作</span><br><span class=\"line\">    handleCurrentChange(newPage) &#123;</span><br><span class=\"line\">      this.page.currentPage = newPage</span><br><span class=\"line\">      //   重新获取数据</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 打开对话框</span><br><span class=\"line\">    async handleClick(row) &#123;</span><br><span class=\"line\">      if (row.subject_code) &#123;</span><br><span class=\"line\">        // 编辑</span><br><span class=\"line\">        this.titleName = &#x27;编辑一级学科信息&#x27;</span><br><span class=\"line\">        this.form = row</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        // 新增</span><br><span class=\"line\">        this.titleName = &#x27;新增一级学科信息&#x27;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      this.showDialog = true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 关闭对话框</span><br><span class=\"line\">    btnCancel(value) &#123;</span><br><span class=\"line\">      this.showDialog = value</span><br><span class=\"line\">      // 清空子组件表单校验</span><br><span class=\"line\">      this.$refs.dialog.$refs.form.resetFields()</span><br><span class=\"line\">      // 清空数据</span><br><span class=\"line\">      this.form = &#123; &#x27;subject_id&#x27;: &#x27;&#x27;, &#x27;subject_code&#x27;: &#x27;&#x27;, &#x27;subject_name&#x27;: &#x27;&#x27;, &#x27;subject_discipline&#x27;: &#x27;&#x27; &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    onSave() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // async onSave() &#123;</span><br><span class=\"line\">    //   try &#123;</span><br><span class=\"line\">    //     if (this.titleName.indexOf(&#x27;新增&#x27;) !== -1) &#123;</span><br><span class=\"line\">    //       const &#123; data &#125; = await addSubject(this.form)</span><br><span class=\"line\">    //       if (data.code === 200) &#123;</span><br><span class=\"line\">    //         this.$message.success(&#x27;保存成功！&#x27;)</span><br><span class=\"line\">    //       &#125; else &#123;</span><br><span class=\"line\">    //         this.$message.error(data.message)</span><br><span class=\"line\">    //       &#125;</span><br><span class=\"line\">    //     &#125; else &#123;</span><br><span class=\"line\">    //       this.form.subject_code = Number.parseInt(this.form.subject_code)</span><br><span class=\"line\">    //       const &#123; data &#125; = await editSubject(this.form)</span><br><span class=\"line\">    //       if (data.code === 200) &#123;</span><br><span class=\"line\">    //         this.$message.success(&#x27;保存成功！&#x27;)</span><br><span class=\"line\">    //       &#125; else &#123;</span><br><span class=\"line\">    //         this.$message.error(data.message)</span><br><span class=\"line\">    //       &#125;</span><br><span class=\"line\">    //     &#125;</span><br><span class=\"line\">    //   &#125; catch (err) &#123;</span><br><span class=\"line\">    //     console.log(err)</span><br><span class=\"line\">    //   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //   // 刷新数据</span><br><span class=\"line\">    //   this.getSubjectsByPage()</span><br><span class=\"line\">    //   // 关闭对话框</span><br><span class=\"line\">    //   this.showDialog = false</span><br><span class=\"line\">    //   // 清空子组件表单校验</span><br><span class=\"line\">    //   this.$refs.dialog.$refs.form.resetFields()</span><br><span class=\"line\">    //   // 清空数据</span><br><span class=\"line\">    //   this.form = &#123; &#x27;subject_id&#x27;: &#x27;&#x27;, &#x27;subject_code&#x27;: &#x27;&#x27;, &#x27;subject_name&#x27;: &#x27;&#x27;, &#x27;subject_discipline&#x27;: &#x27;&#x27; &#125;</span><br><span class=\"line\">    // &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    handleDelete(row) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //     async handleDelete(row) &#123;</span><br><span class=\"line\">    //       this.$prompt(&#x27;请输入DELETE&#x27;, &#x27;确认删除本行数据？&#x27;, &#123;</span><br><span class=\"line\">    //         confirmButtonText: &#x27;确定&#x27;,</span><br><span class=\"line\">    //         cancelButtonText: &#x27;取消&#x27;,</span><br><span class=\"line\">    //         inputValidator(value) &#123;</span><br><span class=\"line\">    //           return value === &#x27;DELETE&#x27;</span><br><span class=\"line\">    //         &#125;,</span><br><span class=\"line\">    //         inputErrorMessage: &#x27;输入格式不正确，无法删除数据！&#x27;</span><br><span class=\"line\">    //       &#125;).then(async() =&gt; &#123;</span><br><span class=\"line\">    //         await delSubject(row.subject_code)</span><br><span class=\"line\">    //         this.$message(&#123;</span><br><span class=\"line\">    //           type: &#x27;success&#x27;,</span><br><span class=\"line\">    //           message: &#x27;删除数据成功&#x27;</span><br><span class=\"line\">    //         &#125;)</span><br><span class=\"line\">    //         this.getSubjectsByPage() // 刷新数据</span><br><span class=\"line\">    //       &#125;).catch(() =&gt; &#123;</span><br><span class=\"line\">    //         this.$message(&#123;</span><br><span class=\"line\">    //           type: &#x27;info&#x27;,</span><br><span class=\"line\">    //           message: &#x27;取消删除操作&#x27;</span><br><span class=\"line\">    //         &#125;)</span><br><span class=\"line\">    //       &#125;)</span><br><span class=\"line\">    //     &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">::v-deep .el-dialog &#123;</span><br><span class=\"line\">  height: 360px;</span><br><span class=\"line\">  .el-dialog__body &#123;</span><br><span class=\"line\">    height: 260px;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    padding: 5px 20px 0px 20px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","categories":["实验室项目"],"tags":["前端、项目"]},{"title":"项目知识 - 事件总线 bus 兄弟间通信","url":"/2022/07/30/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86-%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF-bus-%E5%85%84%E5%BC%9F%E9%97%B4%E9%80%9A%E4%BF%A1/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>当前项目使用tagsView实现多页签效果，并且对已打开的所有多页签使用缓存，避免多次发请求。但是页面之间又是相关关联的，页面A更新后，需要通知页面B重新获取数据。A、B之间的关系可能是父子 ，可能是兄弟，也可能是祖先。因此，采用BUS事件总线实现。</p>\n<h2 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h2><h4 id=\"新增util-x2F-bus-js-用于导出事件总线\"><a href=\"#新增util-x2F-bus-js-用于导出事件总线\" class=\"headerlink\" title=\"新增util&#x2F;bus.js 用于导出事件总线\"></a>新增util&#x2F;bus.js 用于导出事件总线</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// 创建事件总线</span><br><span class=\"line\">import Vue from &#x27;vue&#x27;</span><br><span class=\"line\">export const EventBus = new Vue()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"发送事件组件\"><a href=\"#发送事件组件\" class=\"headerlink\" title=\"发送事件组件\"></a>发送事件组件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#123; EventBus &#125; from &#x27;@/utils/bus&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// 通知学校一级学科页面刷新</span><br><span class=\"line\">EventBus.$emit(&#x27;refreshSchoolSubjects&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"接收事件组件\"><a href=\"#接收事件组件\" class=\"headerlink\" title=\"接收事件组件\"></a>接收事件组件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import &#123; EventBus &#125; from &#x27;@/utils/bus&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    EventBus.$on(&#x27;refreshSchoolSubjects&#x27;, () =&gt; &#123;</span><br><span class=\"line\">      this.getSchoolSubjectsByPageByConditions()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n","categories":["项目知识"],"tags":["事件总线","BUS"]},{"title":"项目知识 - 子组件在create、mounted中接受不到父组件传来的异步数据","url":"/2022/07/15/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86-%E5%AD%90%E7%BB%84%E4%BB%B6%E5%9C%A8create%E3%80%81mounted%E4%B8%AD%E6%8E%A5%E5%8F%97%E4%B8%8D%E5%88%B0%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BC%A0%E6%9D%A5%E7%9A%84%E5%BC%82%E6%AD%A5%E6%95%B0%E6%8D%AE/","content":"<h1 id=\"子组件在create、mounted中接受不到父组件传来的异步数据\"><a href=\"#子组件在create、mounted中接受不到父组件传来的异步数据\" class=\"headerlink\" title=\"子组件在create、mounted中接受不到父组件传来的异步数据\"></a>子组件在create、mounted中接受不到父组件传来的异步数据</h1><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li>vue中父组件异步数据通过props方式传递给子组件，子组件接收不到的问题 [<a href=\"https://blog.csdn.net/weixin_43290151/article/details/124954767]\">https://blog.csdn.net/weixin_43290151/article/details/124954767]</a></li>\n<li>Vue生命周期详解 [<a href=\"https://blog.csdn.net/weixin_45054614/article/details/122178368]\">https://blog.csdn.net/weixin_45054614/article/details/122178368]</a></li>\n</ol>\n<h2 id=\"问题来源\"><a href=\"#问题来源\" class=\"headerlink\" title=\"问题来源\"></a>问题来源</h2><p>最近在写项目结构时候遇到了这个问题，项目结构如下：父组件地理信息&#x2F;index.js中包含三个子组件：区域组件、省份组件、城市组件。</p>\n<p>需求：在index.js中通过后端接口获取所有区域信息、再遍历每个区域，获取区域下的省份，组成所有省份信息。将所有区域信息传递给省份组件用于显示每个区域下有哪些省份，所有省份信息传递给城市组件用于显示每个省份下有哪些城市。遇到了问题：城市组件在页面渲染时候获取不到父组件传来的数据。</p>\n<h2 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因\"></a>问题原因</h2><p>由于所有省份信息是在index.js页面以后端请求的方式异步获取的，根据父子组件的生命周期流程，父组件要等子组件的生命周期走完，即子组件mounted完后，父组件才会mounted。而mounted钩子默认加载只会执行一次，子组件的mounted钩子执行的时候，父组件的异步数据还没有传递过来。</p>\n<h2 id=\"问题解决\"><a href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"></a>问题解决</h2><h4 id=\"方案一-使用v-if控制子组件渲染的时机\"><a href=\"#方案一-使用v-if控制子组件渲染的时机\" class=\"headerlink\" title=\"方案一 使用v-if控制子组件渲染的时机\"></a>方案一 使用v-if控制子组件渲染的时机</h4><h5 id=\"父组件\"><a href=\"#父组件\" class=\"headerlink\" title=\"父组件\"></a>父组件</h5><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;城市信息管理&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;third&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">City</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;allprovinces.length !== 0&quot;</span> <span class=\"attr\">:allprovinces</span>=<span class=\"string\">&quot;allprovinces&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-tab-pane</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"子组件\"><a href=\"#子组件\" class=\"headerlink\" title=\"子组件\"></a>子组件</h5><blockquote>\n<p> 这种方式，子组件不用动代码，在父组件中去做控制即可</p>\n</blockquote>\n<p>但是这种方式有一个小小的缺点，就是最终效果会显得组件有些延迟才出现效果。因为异步数据是从后端的接口获取的，如果接口时间长一些的话，最终效果渲染也会慢一点，但是！！！一般情况下，后端的接口速度都会控制在几十到几百毫秒的时间，一般情况下，不会出现好几秒，甚至几十秒的接口，所以瑕不掩瑜，这种方式不影响我们使用</p>\n<h4 id=\"方案二-子组件使用watch监听父组件传递过来的数据\"><a href=\"#方案二-子组件使用watch监听父组件传递过来的数据\" class=\"headerlink\" title=\"方案二 子组件使用watch监听父组件传递过来的数据\"></a>方案二 子组件使用watch监听父组件传递过来的数据</h4><h5 id=\"父组件-1\"><a href=\"#父组件-1\" class=\"headerlink\" title=\"父组件\"></a>父组件</h5><p>这种方式父组件正常传递数据即可，不需要做什么代码处理，只要在子组件中加一个监听即可</p>\n<h5 id=\"子组件-1\"><a href=\"#子组件-1\" class=\"headerlink\" title=\"子组件\"></a>子组件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">allprovince</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">type</span>: <span class=\"title class_\">Array</span>,</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 监听到父组件传递过来的数据后，加工一下，</span></span><br><span class=\"line\">    <span class=\"comment\">// 存到data中去，然后在页面上使用</span></span><br><span class=\"line\">    <span class=\"title function_\">allprovince</span>(<span class=\"params\">newnew, oldold</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;监听&quot;</span>, newnew, oldold)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">allprovince_total</span> = newnew</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">allprovince_total</span>: [],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"相关知识\"><a href=\"#相关知识\" class=\"headerlink\" title=\"相关知识\"></a>相关知识</h2><h3 id=\"Vue生命周期\"><a href=\"#Vue生命周期\" class=\"headerlink\" title=\"Vue生命周期\"></a>Vue生命周期</h3><img src=\"/2022/07/15/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86-%E5%AD%90%E7%BB%84%E4%BB%B6%E5%9C%A8create%E3%80%81mounted%E4%B8%AD%E6%8E%A5%E5%8F%97%E4%B8%8D%E5%88%B0%E7%88%B6%E7%BB%84%E4%BB%B6%E4%BC%A0%E6%9D%A5%E7%9A%84%E5%BC%82%E6%AD%A5%E6%95%B0%E6%8D%AE/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png\" class=\"\" title=\"vue生命周期\">\n\n<h3 id=\"父子组件生命周期执行顺序\"><a href=\"#父子组件生命周期执行顺序\" class=\"headerlink\" title=\"父子组件生命周期执行顺序\"></a>父子组件生命周期执行顺序</h3><p>加载渲染数据过程</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">父组件 beforeCreate --&gt;</span><br><span class=\"line\">父组件 created --&gt;</span><br><span class=\"line\">父组件 beforeMount --&gt;</span><br><span class=\"line\">子组件 beforeCreate --&gt;</span><br><span class=\"line\">子组件 created --&gt;</span><br><span class=\"line\">子组件 beforeMount --&gt;</span><br><span class=\"line\">子组件 mounted --&gt;</span><br><span class=\"line\">父组件 mounted --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>更新渲染数据过程</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">父组件 beforeUpdate --&gt;</span><br><span class=\"line\">子组件 beforeUpdate --&gt;</span><br><span class=\"line\">子组件 updated --&gt;</span><br><span class=\"line\">父组件 updated --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>销毁组件数据过程</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">父组件 beforeDestroy --&gt;</span><br><span class=\"line\">子组件 beforeDestroy --&gt;</span><br><span class=\"line\">子组件 destroyed --&gt;</span><br><span class=\"line\">父组件 destroyed</span><br></pre></td></tr></table></figure>\n\n<p>可以这样理解，父组件生命周期中会先看看子组件的生命周期有没有走完，<code>子组件生命周期走完了，才会走完父组件的生命周期</code>。</p>\n","categories":["项目知识"],"tags":["父传子"]},{"title":"项目知识 - 解决element-ui el-table数据更新时的错位问题","url":"/2022/08/02/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86-%E8%A7%A3%E5%86%B3element-ui-el-table%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0%E6%97%B6%E7%9A%84%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98/","content":"<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_39998026/article/details/124862604\">解决Element-ui的el-table出现的表格错位问题</a></p>\n<p>在使用element-ui中的el-table时，我们经常会用到fiexd属性，而使用了fixed属性之后，就会容易在各种场景出现表格错位的问题。</p>\n<p>查阅element-ui官网，发现官网提供了doLayout方法来解决这个问题</p>\n<p>总结容易出现错位问题的几种场景及解决办法</p>\n<p>1、数据更新后出现的错位问题</p>\n<p>1.1 直接在数据赋值后执行doLayout方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">this.data = data;</span><br><span class=\"line\">// 在数据更新后执行</span><br><span class=\"line\">this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">      // myTable是表格的ref属性值</span><br><span class=\"line\">      if (this.$refs.myTable &amp;&amp; this.$refs.myTable.doLayout) &#123;</span><br><span class=\"line\">        this.$refs.myTable.doLayout();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n\n<p>1.2在生命周期updated里执行doLayout方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">updated() &#123;</span><br><span class=\"line\">    // myTable是表格的ref属性值</span><br><span class=\"line\">    if (this.$refs.myTable &amp;&amp; this.$refs.myTable.doLayout) &#123;</span><br><span class=\"line\">      this.$refs.myTable.doLayout();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>注：参考链接中有三种方法解决错位问题。分为是</p>\n<ol>\n<li><strong>数据更新后出现的错位问题</strong></li>\n<li><strong>浏览器窗口大小变化时出现的错位问题</strong></li>\n<li><strong>当有多个Tab标签时，切换标签出现的错位问题</strong></li>\n</ol>\n<p>本文中仅参考第一种 [数据更新错位问题] 就解决了刷新时el-table有一瞬间的错位问题</p>\n","categories":["项目知识"],"tags":["el-table","elementui","数据更新doLayout"]},{"title":"项目知识1 - $route和$router的区别","url":"/2022/07/14/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%861-route%E5%92%8C-router%E7%9A%84%E5%8C%BA%E5%88%AB/","content":"<h2 id=\"route和-router的区别\"><a href=\"#route和-router的区别\" class=\"headerlink\" title=\"$route和$router的区别\"></a>$route和$router的区别</h2><h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ol>\n<li>this.$route和this.$router的区别 [<a href=\"https://www.jianshu.com/p/26631cff7649?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation%5D\">https://www.jianshu.com/p/26631cff7649?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation]</a></li>\n</ol>\n<h3 id=\"问题起源\"><a href=\"#问题起源\" class=\"headerlink\" title=\"问题起源\"></a>问题起源</h3><p>最近在做el-tab实现多页签的功能，需要通过$route判断当前路由，$router.push(path) 实现路由跳转，$router.back() 返回上一个路由。</p>\n<h3 id=\"1-1-route对象\"><a href=\"#1-1-route对象\" class=\"headerlink\" title=\"1.1 $route对象\"></a>1.1 $route对象</h3><p>表示当前激活的路由的状态信息，包含了当前 URL 解析得到的信息，还有 URL 匹配到的 route records（路由记录）。<br><code>$router会被自动注入每个组件中</code>，可以直接利用它进行一些信息的获取。即this.$route来调用。</p>\n<h3 id=\"1-2-route对象出现地方\"><a href=\"#1-2-route对象出现地方\" class=\"headerlink\" title=\"1.2 $route对象出现地方\"></a>1.2 $route对象出现地方</h3><ul>\n<li><p>在组件内，直接通过 this.$route来调用。前提全局注册路由插件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Router</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"title class_\">Router</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p> 可以在项目中使用vue.use()全局注入一个插件，从而不需要在每个组件文件中import插件。</p>\n<p>使用了vue.use()注册插件之后就可以在所有的vue文件中使用路由：this.$route</p>\n</blockquote>\n</li>\n<li><p>在导航守卫的参数内</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// to 和 from 都是 路由信息对象</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">  $route(to, <span class=\"keyword\">from</span>) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// to 和 from 都是 路由信息对象</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-1-router对象\"><a href=\"#2-1-router对象\" class=\"headerlink\" title=\"2.1 $router对象\"></a>2.1 $router对象</h3><p>全局的路由实例，是router构造方法的实例。需要在router&#x2F;index.js 中使用vue-router库进行创建</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Router</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">createRouter</span> = (<span class=\"params\"></span>) =&gt;</span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/login/index&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/404&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: <span class=\"function\">() =&gt;</span> <span class=\"title function_\">import</span>(<span class=\"string\">&#x27;@/views/404&#x27;</span>),</span><br><span class=\"line\">            <span class=\"attr\">hidden</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导出router对象</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-其他组件中使用router对象需要先引入\"><a href=\"#2-2-其他组件中使用router对象需要先引入\" class=\"headerlink\" title=\"2.2 其他组件中使用router对象需要先引入\"></a>2.2 其他组件中使用router对象需要先引入</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在其他组件中使用路由对象 , 自动以 router/index.js 作为入口</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/router&#x27;</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-路由实例方法push\"><a href=\"#2-3-路由实例方法push\" class=\"headerlink\" title=\"2.3 路由实例方法push\"></a>2.3 路由实例方法push</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符串</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$router.push(<span class=\"string\">&#x27;home&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 对象</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$router.push(&#123; path: <span class=\"string\">&#x27;home&#x27;</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 命名的路由</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$router.push(&#123; name: <span class=\"string\">&#x27;user&#x27;</span>, params: &#123; userId: <span class=\"number\">123</span> &#125;&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 带查询参数，变成 /register?plan=123</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$router.push(&#123; path: <span class=\"string\">&#x27;register&#x27;</span>, query: &#123; plan: <span class=\"string\">&#x27;123&#x27;</span> &#125;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><code>push方法其实和&lt;router-link :to=&quot;...&quot;&gt;是等同的</code>。<br> <em>注意：push方法的跳转会向 history 栈添加一个新的记录，当我们点击浏览器的返回按钮时可以看到之前的页面。</em></p>\n<h3 id=\"2-4-路由实例方法go\"><a href=\"#2-4-路由实例方法go\" class=\"headerlink\" title=\"2.4  路由实例方法go\"></a>2.4  路由实例方法go</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 页面路由跳转 前进或者后退</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$router.go(-<span class=\"number\">1</span>) <span class=\"comment\">// 后退</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-路由实例方法replace\"><a href=\"#2-5-路由实例方法replace\" class=\"headerlink\" title=\"2.5 路由实例方法replace\"></a>2.5 路由实例方法replace</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//push方法会向 history 栈添加一个新的记录，而replace方法是替换当前的页面，</span></span><br><span class=\"line\">不会向 history 栈添加一个新的记录</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;router-link to=<span class=\"string\">&quot;/05&quot;</span> replace&gt;<span class=\"number\">05</span>&lt;/router-link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一般使用replace来做404页面</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$router.replace(<span class=\"string\">&#x27;/&#x27;</span>)</span><br></pre></td></tr></table></figure>\n","categories":["项目知识"],"tags":["路由"]},{"title":"项目知识2 - vuex的使用、action和mutation的区别","url":"/2022/07/14/%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%862-vuex%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%81action%E5%92%8Cmutation%E7%9A%84%E5%8C%BA%E5%88%AB/","content":"<h1 id=\"vuex的使用、action和mutation的区别\"><a href=\"#vuex的使用、action和mutation的区别\" class=\"headerlink\" title=\"vuex的使用、action和mutation的区别\"></a>vuex的使用、action和mutation的区别</h1><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li>action和mutation区别 [<a href=\"https://www.jianshu.com/p/f9213af4bcb1]\">https://www.jianshu.com/p/f9213af4bcb1]</a></li>\n</ol>\n<h2 id=\"action和mutation的区别\"><a href=\"#action和mutation的区别\" class=\"headerlink\" title=\"action和mutation的区别\"></a>action和mutation的区别</h2><blockquote>\n<p>action中处理业务代码、异步请求。不能操作State</p>\n<p>mutation专注于修改State，理论上是修改State的唯一途径。必须同步执行</p>\n</blockquote>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>定义action</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">  <span class=\"comment\">//  获取异步的数据 context表示当前的store的实例 可以通过 context.state 获取状态 也可以通过context.commit 来提交mutations， 也可以 context.diapatch调用其他的action</span></span><br><span class=\"line\">    getAsyncCount (context) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 一秒钟之后 要给一个数 去修改state</span></span><br><span class=\"line\">        context.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;addCount&#x27;</span>, <span class=\"number\">123</span>)</span><br><span class=\"line\">      &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125; </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"项目应用\"><a href=\"#项目应用\" class=\"headerlink\" title=\"项目应用\"></a>项目应用</h2><p>由于地理信息（所有区域、省份、城市）在多个页面都需要获取，如果每个页面都通过请求获取，会重复多次请求同一个地址，导致项目加载效率低。因此采用vuex获取所有地理信息，并保存。每次使用的时候先从state中进行获取，如果state中没有信息再调用请求获取。</p>\n<h4 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h4><p>获取所有区域信息</p>\n<ul>\n<li>如果state.regions为空，则自行通过get请求获取所有Regions，并使用setRegions 设置 regions的值</li>\n<li>每次update、delete、insert后，都要通过get请求重新获取所有Regions</li>\n</ul>\n<p>获取所有省份信息</p>\n<ul>\n<li>setRegions 设置 regions的值后需要重新获取所有省份信息</li>\n<li>编辑省份后需要重新获取所有省份信息</li>\n</ul>\n<p>获取所有城市信息</p>\n<ul>\n<li>setRegions 设置 regions的值后需要重新获取城市信息</li>\n<li>编辑城市后需要重新获取</li>\n</ul>\n<p>编辑区域信息后，需要重新获取所有区域、省份、城市</p>\n<p>编辑省份后，需要重新所有省份、城市</p>\n<p>编辑城市后，需要重新获取所有城市</p>\n","categories":["项目查漏补缺"],"tags":["vuex"]}]